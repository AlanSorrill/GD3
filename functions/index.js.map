{"version":3,"file":"index.js","mappings":";;;;;;;;;;AAAa;AACb;AACA;AACA,mCAAmC,oCAAoC,gBAAgB;AACvF,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA,0CAA0C,4BAA4B;AACtE,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA;AACA,6CAA6C;AAC7C;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,iBAAiB,GAAG,gBAAgB,GAAG,kBAAkB,GAAG,YAAY,GAAG,mBAAmB,GAAG,gBAAgB,GAAG,eAAe,GAAG,gBAAgB;AACtJ,+BAA+B,mBAAO,CAAC,8CAAoB;AAC3D,qCAAqC,mBAAO,CAAC,8BAAY;AACzD,wBAAwB,mBAAO,CAAC,cAAI;AACpC,0BAA0B,mBAAO,CAAC,kBAAM;AACxC,mBAAO,CAAC,kEAAsB;AAC9B,qBAAqB,mBAAO,CAAC,gEAAqB;AAClD,wBAAwB,mBAAO,CAAC,oCAAe;AAC/C,4BAA4B,mBAAO,CAAC,sBAAQ;AAC5C,4BAA4B,mBAAO,CAAC,oGAAuC;AAC3E,cAAc,mBAAO,CAAC,8CAAoB;AAC1C,qCAAqC,mBAAO,CAAC,sDAAwB;AACrE;AACA;AACA,6BAA6B,mBAAO,CAAC,kEAAsB;AAC3D;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C,yBAAyB,8BAA8B,QAAQ;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA,kDAAkD,kBAAkB;AACpE,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD,SAAS;AACT;AACA,CAAC;AACD,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,oDAAoD,SAAS;AAC7D;AACA;AACA,KAAK;AACL;AACA;AACA,qDAAqD,YAAY;AACjE;AACA;AACA;AACA;AACA,CAAC;AACD,eAAe;AACf;AACA;AACA,kEAAkE,+BAA+B;AACjG,CAAC;AACD,gBAAgB;AAChB;AACA;AACA,iCAAiC,WAAW;AAC5C;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,qCAAqC,UAAU;AAC/C;AACA;AACA,mBAAmB;AACnB;AACA,kCAAkC,UAAU;AAC5C;AACA;AACA;AACA;AACA;AACA,oDAAoD,SAAS;AAC7D;AACA,+CAA+C,SAAS;AACxD;AACA;AACA;AACA;AACA;AACA,gDAAgD,UAAU;AAC1D;AACA;AACA,6BAA6B,UAAU;AACvC,mBAAmB,kFAAkF;AACrG;AACA,KAAK;AACL;AACA,sCAAsC,WAAW;AACjD;AACA;AACA;AACA;AACA,CAAC;AACD,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,SAAS;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,oBAAoB;AACrE;AACA;AACA;AACA,wCAAwC,WAAW;AACnD;AACA,CAAC;AACD,kBAAkB;AAClB;AACA;AACA;AACA;AACA,+BAA+B,MAAM;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,WAAW;AACnD;AACA,CAAC;AACD,gBAAgB;AAChB;AACA;AACA;AACA;AACA,CAAC;AACD,iBAAiB;AACjB;AACA;AACA;AACA,sCAAsC,6BAA6B;AACnE;AACA;AACA;AACA;AACA,sCAAsC,mCAAmC;AACzE;AACA;AACA;AACA,kCAAkC,kCAAkC;AACpE,KAAK;AACL,CAAC;AACD,2CAA2C;;;;;;;;;;ACnQ9B;AACb;AACA,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,0BAA0B,GAAG,iBAAiB,GAAG,iBAAiB,GAAG,oBAAoB,GAAG,eAAe,GAAG,yBAAyB,GAAG,sBAAsB,GAAG,cAAc;AACjL,eAAe,uDAA6B;AAC5C;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,wBAAwB,iBAAiB;AACzC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,gBAAgB;AACpC;AACA;AACA,uCAAuC,EAAE;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,oBAAoB,gBAAgB;AACpC,wBAAwB,mBAAmB;AAC3C;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,4BAA4B,IAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,0BAA0B;AAC1B,2CAA2C;;;;;;;;;;ACzJ9B;AACb;AACA,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA;AACA,6CAA6C;AAC7C;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,4BAA4B,GAAG,mBAAmB,GAAG,eAAe,GAAG,sBAAsB,GAAG,4BAA4B,GAAG,qBAAqB,GAAG,gBAAgB,GAAG,uBAAuB,GAAG,gCAAgC,GAAG,6BAA6B,GAAG,+BAA+B,GAAG,gCAAgC,GAAG,iCAAiC,GAAG,gCAAgC,GAAG,wBAAwB,GAAG,6BAA6B,GAAG,4BAA4B,GAAG,yBAAyB,GAAG,iBAAiB,GAAG,mBAAmB,GAAG,kBAAkB,GAAG,kBAAkB;AAC1lB;AACA,IAAI,IAAI;AACR,mBAAmB,mBAAO,CAAC,8BAAY;AACvC;AACA,uBAAuB,mBAAO,CAAC,kCAAc;AAC7C,uCAAuC,mBAAO,CAAC,kCAAc;AAC7D,sBAAsB,mBAAO,CAAC,2DAAe;AAC7C,4BAA4B,mBAAO,CAAC,6FAAgC;AACpE;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sCAAsC,kBAAkB,KAAK;AAC9D;AACA;AACA,wBAAwB,UAAU;AAClC,oBAAoB,EAAE;AACtB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oCAAoC,iBAAiB,KAAK;AAC3D;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,CAAC,4DAA4D,6BAA6B,KAAK;AAC/F;AACA;AACA;AACA;AACA,CAAC,kDAAkD,wBAAwB,KAAK;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kEAAkE,gCAAgC,KAAK;AACxG;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oEAAoE,iCAAiC,KAAK;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kEAAkE,gCAAgC,KAAK;AACxG;AACA;AACA;AACA;AACA,CAAC,gEAAgE,+BAA+B,KAAK;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4DAA4D,6BAA6B,KAAK;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kEAAkE,gCAAgC,KAAK;AACxG,uBAAuB;AACvB;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,YAAY,OAAO,IAAI;AAC3D,8DAA8D,QAAQ,aAAa,QAAQ;AAC3F,8DAA8D,QAAQ,aAAa,QAAQ;AAC3F,8DAA8D,QAAQ,aAAa,QAAQ;AAC3F;AACA;AACA;AACA;AACA,gBAAgB;AAChsCAAsC;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,gCAAgC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E,GAAG,GAAG,EAAE;AACnF;AACA;AACA;AACA;AACA;AACA,yDAAyD,uBAAuB;AAChF;AACA,iCAAiC,sBAAsB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,KAAK,QAAQ,KAAK;AAClD;AACA,gCAAgC,KAAK,QAAQ,KAAK;AAClD;AACA,gCAAgC,KAAK,QAAQ,KAAK;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,OAAO;AAC9D;AACA,oDAAoD,OAAO;AAC3D;AACA;AACA,aAAa;AACb,6CAA6C,KAAK,GAAG,cAAc,OAAO,wBAAwB;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,2BAA2B,QAAQ;AACnC,yBAAyB,EAAE;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,iDAAiD,IAAI;AACrD;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,uCAAuC,gDAAgD,SAAS,GAAG,mBAAmB,QAAQ,sBAAsB,KAAK;AACzJ;AACA,sCAAsC,UAAU,GAAG,mBAAmB;AACtE,uCAAuC,SAAS,SAAS,oDAAoD,IAAI,kCAAkC;AACnJ,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,cAAc;AACnD;AACA;AACA;AACA,sBAAsB,cAAc;AACpC,4DAA4D,kBAAkB;AAC9E;AACA;AACA,2BAA2B,kFAAkF;AAC7G;AACA,aAAa;AACb;AACA;AACA;AACA,gFAAgF;AAChF;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,4BAA4B;AACxD,4CAA4C,sBAAsB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,KAAK,EAAE,qBAAqB;AAC5E;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,mBAAmB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,uBAAuB;AACvB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA,4BAA4B,mBAAmB;AAC/C,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,YAAY,cAAc,gBAAgB;AAC3F;AACA;AACA;AACA;AACA,iDAAiD,YAAY,eAAe,gBAAgB;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,IAAI;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,KAAK;AACjE,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,KAAK;AAChE,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,KAAK;AAC7D,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,2CAA2C;;;;;;;;;;AC9zB9B;AACb;AACA,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,mBAAmB,GAAG,gBAAgB;AACtC,sBAAsB,mBAAO,CAAC,4DAAgB;AAC9C,4BAA4B,mBAAO,CAAC,kFAAqB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oHAAoH,GAAG;AACvH;AACA;AACA;AACA,mGAAmG,UAAU;AAC7G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,SAAS;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,SAAS,GAAG,SAAS;AAClF,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2FAA2F,sBAAsB,EAAE,sBAAsB,QAAQ,QAAQ;AACzJ;AACA;AACA;AACA,yDAAyD,oBAAoB,QAAQ;AACrF,8DAA8D,MAAM;AACpE;AACA;AACA;AACA;AACA;AACA,yDAAyD,QAAQ,EAAE,MAAM,GAAG,iBAAiB;AAC7F;AACA;AACA;AACA;AACA;AACA,oDAAoD,oBAAoB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,oBAAoB;AAClE;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,qCAAqC,6BAA6B,QAAQ;AAC7G,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,qIAAqI;AACrI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,0BAA0B,6BAA6B;AACvD;AACA;AACA;AACA,2DAA2D,QAAQ;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,gBAAgB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,2BAA2B;AAC3B;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,QAAQ;AACnE;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,kCAAkC,cAAc;AAChD,oCAAoC,aAAa;AACjD,uCAAuC,KAAK,GAAG,iCAAiC;AAChF,qDAAqD,UAAU;AAC/D;AACA;AACA;AACA,2FAA2F,sBAAsB,EAAE,sBAAsB,QAAQ,QAAQ;AACzJ;AACA;AACA;AACA;AACA;AACA,oDAAoD,OAAO;AAC3D;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,qDAAqD,yBAAyB,6CAA6C,GAAG;AAC9H;AACA,iBAAiB;AACjB;AACA;AACA;AACA,qDAAqD,yBAAyB,6CAA6C,GAAG;AAC9H;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB;AACnB,2CAA2C;;;;;;;;;;AC5X9B;AACb;AACA;AACA,mCAAmC,oCAAoC,gBAAgB;AACvF,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,aAAa,mBAAO,CAAC,gEAAY;AACjC,aAAa,mBAAO,CAAC,0DAAe;AACpC,2CAA2C;;;;;;;;;;ACd9B;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,mCAAmC;AACnC,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;;;;;;;;;;ACf3C;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;UEtBA;UACA;UACA;UACA","sources":["webpack://gdsn3/./srcFunctions/WPFunctions.ts","webpack://gdsn3/./srcFunctions/common/FBF_Helpers.ts","webpack://gdsn3/./srcFunctions/common/WonderData.ts","webpack://gdsn3/./srcFunctions/common/WonderData/Database.ts","webpack://gdsn3/./srcFunctions/common/WonderData/WonderDataImports.ts","webpack://gdsn3/./srcFunctions/firebaseAdminCreds.ts","webpack://gdsn3/external \"bristolboard\"","webpack://gdsn3/external \"child_process\"","webpack://gdsn3/external \"crypto\"","webpack://gdsn3/external \"firebase-admin/app\"","webpack://gdsn3/external \"firebase-admin/storage\"","webpack://gdsn3/external \"firebase-functions\"","webpack://gdsn3/external \"fs\"","webpack://gdsn3/external \"node-fetch\"","webpack://gdsn3/external \"path\"","webpack://gdsn3/external \"sorted-btree\"","webpack://gdsn3/external \"xml2js\"","webpack://gdsn3/webpack/bootstrap","webpack://gdsn3/webpack/before-startup","webpack://gdsn3/webpack/startup","webpack://gdsn3/webpack/after-startup"],"sourcesContent":["\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.HashTypes = exports.Diseases = exports.DataExists = exports.Data = exports.WonderProxy = exports.RonaTest = exports.ReqTest = exports.listener = void 0;\r\nconst functions = __importStar(require(\"firebase-functions\"));\r\nconst node_fetch_1 = __importDefault(require(\"node-fetch\"));\r\nconst fs = __importStar(require(\"fs\"));\r\nconst path = __importStar(require(\"path\"));\r\nrequire(\"./common/FBF_Helpers\");\r\nconst WonderData_1 = require(\"./common/WonderData\");\r\nconst child_process_1 = require(\"child_process\");\r\nconst crypto = __importStar(require(\"crypto\"));\r\nconst WonderDataImports_1 = require(\"./common/WonderData/WonderDataImports\");\r\nconst app_1 = require(\"firebase-admin/app\");\r\nconst FirebaseStorage = __importStar(require(\"firebase-admin/storage\"));\r\n// // Start writing Firebase Functions\r\n// // https://firebase.google.com/docs/functions/typescript\r\nconst firebaseAdminCreds_1 = require(\"./firebaseAdminCreds\");\r\n(0, app_1.initializeApp)({\r\n    credential: (0, app_1.cert)(firebaseAdminCreds_1.FirebaseServiceAccountCreds),\r\n    storageBucket: 'gs://gdsn3-22.appspot.com'\r\n});\r\nlet firebaseStorage = FirebaseStorage.getStorage();\r\nlet bucket = firebaseStorage.bucket();\r\n//\r\nconsole.log('test');\r\nlet database = new WonderDataImports_1.Database({\r\n    readFile(filePath) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (filePath.startsWith('./')) {\r\n                filePath = filePath.substring(2);\r\n            }\r\n            if (filePath.startsWith('/')) {\r\n                filePath = filePath.substring(1);\r\n            }\r\n            let absPath = path.resolve(__dirname, `../data/`, filePath);\r\n            let reference = bucket.file(\"data/\" + filePath);\r\n            if (!(yield reference.exists())) { //(!fs.existsSync(absPath)) {\r\n                return { error: `File doesn't exist: ${absPath}` };\r\n            }\r\n            // let data = await fs.promises.readFile(absPath)\r\n            // return JSON.parse(data.toString())\r\n            let [buffer] = yield reference.download();\r\n            let result = buffer.toString();\r\n            return JSON.parse(result);\r\n        });\r\n    },\r\n    writeFile(filePath, data) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (filePath.startsWith('./')) {\r\n                filePath = filePath.substring(2);\r\n            }\r\n            if (filePath.startsWith('/')) {\r\n                filePath = filePath.substring(1);\r\n            }\r\n            let absPath = path.resolve(__dirname, `../data/`, filePath);\r\n            let reference = bucket.file(\"data/\" + filePath);\r\n            let buffer = Buffer.from(typeof data == 'string' ? data : JSON.stringify(data), 'utf-8');\r\n            return new Promise((acc) => {\r\n                let blobStream = reference.createWriteStream({\r\n                    resumable: false\r\n                });\r\n                blobStream.on('finish', () => {\r\n                    acc(\"Success\");\r\n                })\r\n                    .on('error', (e) => {\r\n                    acc(`Unable to upload file: ${JSON.stringify(e)}`);\r\n                })\r\n                    .end(buffer);\r\n            });\r\n            // await uploadFirebaseFile(typeof data == 'string' ? data : JSON.stringify(data), filePath)//await fs.promises.writeFile(absPath, )\r\n            // return 'success';\r\n        });\r\n    },\r\n    exists(filePath) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (filePath.startsWith('./')) {\r\n                filePath = filePath.substring(2);\r\n            }\r\n            if (filePath.startsWith('/')) {\r\n                filePath = filePath.substring(1);\r\n            }\r\n            let reference = bucket.file(\"data/\" + filePath);\r\n            return (yield reference.exists())[0]; //firebaseFileExists(pathName)// return fs.existsSync(absPath)\r\n        });\r\n    }\r\n});\r\nexports.listener = functions.https.onRequest((req, res) => __awaiter(void 0, void 0, void 0, function* () {\r\n    res.setHeader('Content-Type', 'application/xml');\r\n    let exampleParams = WonderData_1.ExampleRequest.replace('</request-parameters>', '').replace('<request-parameters>', '').replaceAll('<value/>', '<value></value>').replaceAll('<parameter>', '').replaceAll('</name>', '').replaceAll('</value>', '').replaceAll('<name>', '').split('</parameter>').map(str => {\r\n        let tmp = str.split('<value>');\r\n        let name = tmp[0];\r\n        let rest = tmp.slice(1);\r\n        return [name, rest];\r\n    });\r\n    let reqTestParams = new WonderData_1.WonderRequest().groupBy('Year').groupBy('Race').addParam('F_D76.V25', WonderData_1.WonderQueryParam_Util.All).toParamMap();\r\n    let requestParams = new Map();\r\n    let inconsistencies = [];\r\n    exampleParams.forEach((value) => {\r\n        if (!reqTestParams.has(value[0])) {\r\n            inconsistencies.push(`Request missing ${value[0]}`);\r\n        }\r\n        requestParams.set(value[0], value[1]);\r\n    });\r\n    for (let exParamName in reqTestParams.keys()) {\r\n        if (!requestParams.has(exParamName)) {\r\n            inconsistencies.push(`Examples missing ${exParamName}`);\r\n        }\r\n    }\r\n    res.setHeader('Content-Type', 'application/json');\r\n    res.send(JSON.stringify(inconsistencies));\r\n}));\r\nexports.ReqTest = functions.https.onRequest((req, res) => __awaiter(void 0, void 0, void 0, function* () {\r\n    // res.setHeader('Content-Type', 'application/xml')\r\n    // res.send(new WonderRequest().groupBy('Year').addParam('M_1', 'D76.M1').toString())\r\n    res.send(yield database.fileAccessor.writeFile(\"test.json\", { myBigData: \"Stuff and things\" }));\r\n}));\r\nexports.RonaTest = functions.https.onRequest((req, res) => __awaiter(void 0, void 0, void 0, function* () {\r\n    let data = yield new WonderData_1.WonderRequest().groupBy('Year').groupBy('AgeGroups').filterByYear(['1999', '2001']).request();\r\n    let exportPath = path.resolve(__dirname, '../data/exampleResponse.xml');\r\n    console.log(`saving to file${exportPath}`);\r\n    fs.writeFileSync(exportPath, JSON.stringify(data));\r\n    console.log('saved');\r\n    res.setHeader('Content-Type', 'application/json');\r\n    res.setHeader('Access-Control-Allow-Origin', '*');\r\n    res.send(data);\r\n}));\r\nfunction requestToFileName(fetchBody) {\r\n    console.log(`Req to file name\\n${fetchBody}`);\r\n    return crypto.createHash('md5').update(fetchBody).digest(\"hex\");\r\n}\r\nexports.WonderProxy = functions.https.onRequest((req, res) => __awaiter(void 0, void 0, void 0, function* () {\r\n    let fetchBody = req.body['request_xml'];\r\n    // console.log(`Fetch body: ${fetchBody}`)\r\n    let fileName = requestToFileName(fetchBody);\r\n    let fileDirectory = path.resolve(__dirname, `../data/xml/`);\r\n    if (!fs.existsSync(fileDirectory)) {\r\n        fs.mkdirSync(fileDirectory);\r\n    }\r\n    let exportPath = path.resolve(fileDirectory, `${fileName}.xml`);\r\n    if (fs.existsSync(exportPath)) {\r\n        console.log(`Using cache for request ${fileName}`);\r\n        res.setHeader('Content-Type', 'application/xml');\r\n        res.setHeader('Access-Control-Allow-Origin', '*');\r\n        res.sendFile(exportPath);\r\n        return;\r\n    }\r\n    // console.log(`Sending query to wonder:\\n${fetchBody}`)\r\n    let result = yield (0, node_fetch_1.default)(`https://wonder.cdc.gov/controller/datarequest/D76`, {\r\n        method: 'POST',\r\n        body: `request_xml=${fetchBody}`,\r\n        headers: { 'Content-Type': 'application/x-www-form-urlencoded', 'Accept': 'application/xml' },\r\n        // mode: 'no-cors'\r\n    });\r\n    let resultText = yield result.text();\r\n    // console.log(`saving to file: ${exportPath}`)\r\n    fs.writeFileSync(exportPath, resultText);\r\n    res.setHeader('Content-Type', 'application/xml');\r\n    res.setHeader('Access-Control-Allow-Origin', '*');\r\n    res.send(resultText);\r\n}));\r\nexports.Data = functions.https.onRequest((req, resp) => __awaiter(void 0, void 0, void 0, function* () {\r\n    resp.setHeader('Content-Type', 'application/json');\r\n    resp.setHeader('Access-Control-Allow-Origin', '*');\r\n    // let name = req.path.startsWith('.')\r\n    let filePath = req.path.startsWith(\"/\") ? req.path.substring(1) : req.path;\r\n    console.log(filePath);\r\n    switch (req.method) {\r\n        case 'GET':\r\n            if (!(yield database.fileAccessor.exists(filePath))) {\r\n                resp.send(`No file ${filePath}`);\r\n            }\r\n            let file = yield database.fileAccessor.readFile(filePath);\r\n            resp.send(file);\r\n            break;\r\n        case 'POST':\r\n            let data = typeof req.body == 'string' ? req.body : JSON.stringify(req.body);\r\n            try {\r\n                resp.send(yield database.fileAccessor.writeFile(filePath, data));\r\n            }\r\n            catch (err) {\r\n                resp.send(`Failed to save data ${JSON.stringify(err)}`);\r\n            }\r\n            break;\r\n        default:\r\n            resp.send(`Unknown method ${req.method}`);\r\n    }\r\n}));\r\nexports.DataExists = functions.https.onRequest((req, resp) => __awaiter(void 0, void 0, void 0, function* () {\r\n    resp.setHeader('Content-Type', 'application/json');\r\n    resp.setHeader('Access-Control-Allow-Origin', '*');\r\n    // let name = req.path.startsWith('.')\r\n    let file = path.resolve(__dirname, '../data/', '.' + req.path);\r\n    console.log(`Checking if ${file} exists`);\r\n    switch (req.method) {\r\n        case 'GET':\r\n            if (!fs.existsSync(file)) {\r\n                resp.send(`false`);\r\n                return;\r\n            }\r\n            resp.send('true');\r\n            break;\r\n            break;\r\n        default:\r\n            resp.send(`Unknown method ${req.method}`);\r\n    }\r\n}));\r\nexports.Diseases = functions.https.onRequest((req, resp) => __awaiter(void 0, void 0, void 0, function* () {\r\n    let codes = yield database.pullIcdCodes(10);\r\n    resp.setHeader('Content-Type', 'application/json');\r\n    resp.setHeader('Access-Control-Allow-Origin', '*');\r\n    resp.send(JSON.stringify(codes));\r\n}));\r\nexports.HashTypes = functions.https.onRequest((req, res) => __awaiter(void 0, void 0, void 0, function* () {\r\n    (0, child_process_1.exec)('openssl list -digest-algorithms', (err, stdout, stderr) => {\r\n        if (err) {\r\n            console.log('err', err);\r\n            res.send(JSON.stringify({ status: 'Error', error: err }));\r\n            return;\r\n        }\r\n        if (stderr) {\r\n            console.log('stderr', stderr);\r\n            res.send(JSON.stringify({ status: 'STDError', error: stderr }));\r\n            return;\r\n        }\r\n        console.log('success', stdout);\r\n        res.send(JSON.stringify({ status: 'Success', value: stdout }));\r\n    });\r\n}));\r\n//# sourceMappingURL=data:application/json;base64,","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.replaceAllInString = exports.isAllTrue = exports.XmlToJson = exports.concactinate = exports.flatten = exports.ensureFBF_Helpers = exports.promiseDefault = exports.isNode = void 0;\r\nconst Xml2JS = require('xml2js').parseString;\r\nfunction isNode() {\r\n    return typeof window == 'undefined';\r\n}\r\nexports.isNode = isNode;\r\nfunction promiseDefault(prom, defaultValue) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        return new Promise((acc) => {\r\n            prom.then(acc).catch(e => acc(defaultValue));\r\n        });\r\n    });\r\n}\r\nexports.promiseDefault = promiseDefault;\r\n// export function ObjectMap<A,B>(input: A, transform: <k extends keyof A>()=>B): B {\r\n// return null\r\n// }\r\nArray.prototype.forEachAsync = function (onEach) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        for (let i = 0; i < this.length; i++) {\r\n            if ((yield onEach(this[i], i, this)) == 'BREAK') {\r\n                break;\r\n            }\r\n        }\r\n    });\r\n};\r\nMap.prototype.keysAsArray = function () {\r\n    let ths = this;\r\n    let out = [];\r\n    for (let key of ths.keys()) {\r\n        out.push(key);\r\n    }\r\n    return out;\r\n};\r\nArray.prototype.mapOrDrop = function (shouldKeep) {\r\n    let ths = this;\r\n    let out = [];\r\n    for (let i = 0; i < ths.length; i++) {\r\n        let fresh = shouldKeep(this[i], i);\r\n        if (fresh == 'DROP') {\r\n            // console.log(`Dropping ${i}`,this[i])\r\n        }\r\n        else {\r\n            out.push(fresh);\r\n        }\r\n    }\r\n    return out;\r\n};\r\nMap.prototype.getWithDefault = function (key, defaultValue) {\r\n    let ths = this;\r\n    if (!ths.has(key)) {\r\n        ths.set(key, defaultValue(key));\r\n    }\r\n    return ths.get(key);\r\n};\r\nArray.prototype.pushAll = function (stuff) {\r\n    if (Array.isArray(stuff)) {\r\n        for (let item of stuff) {\r\n            this.push(item);\r\n        }\r\n    }\r\n    else {\r\n        this.push(stuff);\r\n    }\r\n};\r\nString.prototype.isBoolean = function () {\r\n    return this.toLowerCase() == 'true' || this.toLowerCase() == 'false';\r\n};\r\nString.prototype.isNumber = function () {\r\n    return !Number.isNaN(Number(this));\r\n};\r\n// if (typeof Map.prototype.toArray == 'undefined') {\r\n//     console.log(`Shimming Map.toArray`)\r\n//     Map.prototype.toArray = function <K, V>() {\r\n//         let ths: Map<K, V> = this\r\n//         let out: Array<[K, V]> = []\r\n//         for (let key of ths.keys()) {\r\n//             out.push([key, ths.get(key)]);\r\n//         }\r\n//         return out\r\n//     }\r\n// }\r\nfunction ensureFBF_Helpers() {\r\n    console.log();\r\n}\r\nexports.ensureFBF_Helpers = ensureFBF_Helpers;\r\nfunction flatten(arr) {\r\n    let out = [];\r\n    for (let i = 0; i < arr.length; i++) {\r\n        for (let j = 0; j < arr[i].length; j++) {\r\n            out.push(arr[i][j]);\r\n        }\r\n    }\r\n    return out;\r\n}\r\nexports.flatten = flatten;\r\nfunction concactinate(a, b) {\r\n    let out = [];\r\n    a.forEach((aa) => {\r\n        out.push(aa);\r\n    });\r\n    b.forEach((bb) => {\r\n        out.push(bb);\r\n    });\r\n    return out;\r\n}\r\nexports.concactinate = concactinate;\r\nfunction XmlToJson(xml) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        return new Promise((acc, rej) => {\r\n            Xml2JS(`<data>${xml}</data>`, (err, value) => {\r\n                if (err) {\r\n                    rej(err);\r\n                }\r\n                else {\r\n                    // console.log('cleaning',value)\r\n                    // let result = cleanXmlToJson(value) as XmlElement;\r\n                    acc(value.data);\r\n                }\r\n            });\r\n        });\r\n    });\r\n}\r\nexports.XmlToJson = XmlToJson;\r\nif (typeof String.prototype.replaceAll == 'undefined') {\r\n    String.prototype.replaceAll = function (a, b) {\r\n        return this.split(a).join(b);\r\n    };\r\n}\r\nfunction isAllTrue(bools) {\r\n    for (let i = 0; i < bools.length; i++) {\r\n        if (bools[i]) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexports.isAllTrue = isAllTrue;\r\nfunction replaceAllInString(target, a, b) {\r\n    return target.split(a).join(b);\r\n}\r\nexports.replaceAllInString = replaceAllInString;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRkJGX0hlbHBlcnMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmNGdW5jdGlvbnMvY29tbW9uL0ZCRl9IZWxwZXJzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUVBLE1BQU0sTUFBTSxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQyxXQUFXLENBQUM7QUF1QjdDLFNBQWdCLE1BQU07SUFDbEIsT0FBTyxPQUFPLE1BQU0sSUFBSSxXQUFXLENBQUE7QUFDdkMsQ0FBQztBQUZELHdCQUVDO0FBQ0QsU0FBc0IsY0FBYyxDQUFJLElBQWdCLEVBQUUsWUFBZTs7UUFDckUsT0FBTyxJQUFJLE9BQU8sQ0FBQyxDQUFDLEdBQUcsRUFBRSxFQUFFO1lBQ3ZCLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUE7UUFDaEQsQ0FBQyxDQUFDLENBQUE7SUFDTixDQUFDO0NBQUE7QUFKRCx3Q0FJQztBQUNELHFGQUFxRjtBQUNyRixjQUFjO0FBQ2QsSUFBSTtBQUNKLEtBQUssQ0FBQyxTQUFTLENBQUMsWUFBWSxHQUFHLFVBQW1CLE1BQTBFOztRQUN4SCxLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUNsQyxJQUFJLENBQUEsTUFBTSxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxJQUFJLENBQUMsS0FBSSxPQUFPLEVBQUU7Z0JBQzNDLE1BQU07YUFDVDtTQUNKO0lBQ0wsQ0FBQztDQUFBLENBQUE7QUFDRCxHQUFHLENBQUMsU0FBUyxDQUFDLFdBQVcsR0FBRztJQUN4QixJQUFJLEdBQUcsR0FBRyxJQUFpQixDQUFBO0lBQzNCLElBQUksR0FBRyxHQUFRLEVBQUUsQ0FBQTtJQUNqQixLQUFLLElBQUksR0FBRyxJQUFJLEdBQUcsQ0FBQyxJQUFJLEVBQUUsRUFBRTtRQUN4QixHQUFHLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFBO0tBQ2hCO0lBQ0QsT0FBTyxHQUFHLENBQUM7QUFDZixDQUFDLENBQUE7QUFDRCxLQUFLLENBQUMsU0FBUyxDQUFDLFNBQVMsR0FBRyxVQUFnQixVQUFxRDtJQUM3RixJQUFJLEdBQUcsR0FBRyxJQUFnQixDQUFBO0lBQzFCLElBQUksR0FBRyxHQUFRLEVBQUUsQ0FBQTtJQUNqQixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsR0FBRyxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUNqQyxJQUFJLEtBQUssR0FBRyxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFBO1FBQ2xDLElBQUksS0FBSyxJQUFJLE1BQU0sRUFBRTtZQUNqQix1Q0FBdUM7U0FDMUM7YUFBTTtZQUNILEdBQUcsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUE7U0FDbEI7S0FDSjtJQUNELE9BQU8sR0FBRyxDQUFDO0FBQ2YsQ0FBQyxDQUFBO0FBQ0QsR0FBRyxDQUFDLFNBQVMsQ0FBQyxjQUFjLEdBQUcsVUFBZ0IsR0FBTSxFQUFFLFlBQTJCO0lBQzlFLElBQUksR0FBRyxHQUFHLElBQWlCLENBQUE7SUFFM0IsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLEVBQUU7UUFDZixHQUFHLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxZQUFZLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQTtLQUNsQztJQUNELE9BQU8sR0FBRyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQTtBQUd2QixDQUFDLENBQUE7QUFDRCxLQUFLLENBQUMsU0FBUyxDQUFDLE9BQU8sR0FBRyxVQUFhLEtBQWM7SUFDakQsSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxFQUFFO1FBQ3RCLEtBQUssSUFBSSxJQUFJLElBQUksS0FBSyxFQUFFO1lBQ3BCLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUE7U0FDbEI7S0FDSjtTQUFNO1FBQ0gsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQTtLQUNuQjtBQUNMLENBQUMsQ0FBQTtBQUNELE1BQU0sQ0FBQyxTQUFTLENBQUMsU0FBUyxHQUFHO0lBQ3pCLE9BQU8sSUFBSSxDQUFDLFdBQVcsRUFBRSxJQUFJLE1BQU0sSUFBSSxJQUFJLENBQUMsV0FBVyxFQUFFLElBQUksT0FBTyxDQUFBO0FBQ3hFLENBQUMsQ0FBQTtBQUNELE1BQU0sQ0FBQyxTQUFTLENBQUMsUUFBUSxHQUFHO0lBQ3hCLE9BQU8sQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFBO0FBQ3RDLENBQUMsQ0FBQTtBQUNELHFEQUFxRDtBQUNyRCwwQ0FBMEM7QUFDMUMsa0RBQWtEO0FBQ2xELG9DQUFvQztBQUNwQyxzQ0FBc0M7QUFDdEMsd0NBQXdDO0FBQ3hDLDZDQUE2QztBQUM3QyxZQUFZO0FBQ1oscUJBQXFCO0FBQ3JCLFFBQVE7QUFDUixJQUFJO0FBQ0osU0FBZ0IsaUJBQWlCO0lBQzdCLE9BQU8sQ0FBQyxHQUFHLEVBQUUsQ0FBQTtBQUNqQixDQUFDO0FBRkQsOENBRUM7QUFFRCxTQUFnQixPQUFPLENBQUksR0FBVTtJQUNqQyxJQUFJLEdBQUcsR0FBUSxFQUFFLENBQUE7SUFDakIsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7UUFDakMsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDcEMsR0FBRyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQTtTQUN0QjtLQUNKO0lBQ0QsT0FBTyxHQUFHLENBQUM7QUFDZixDQUFDO0FBUkQsMEJBUUM7QUFDRCxTQUFnQixZQUFZLENBQUksQ0FBTSxFQUFFLENBQU07SUFDMUMsSUFBSSxHQUFHLEdBQVEsRUFBRSxDQUFBO0lBQ2pCLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxFQUFFLEVBQUUsRUFBRTtRQUNiLEdBQUcsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUE7SUFDaEIsQ0FBQyxDQUFDLENBQUE7SUFDRixDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsRUFBRSxFQUFFLEVBQUU7UUFDYixHQUFHLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFBO0lBQ2hCLENBQUMsQ0FBQyxDQUFBO0lBQ0YsT0FBTyxHQUFHLENBQUM7QUFDZixDQUFDO0FBVEQsb0NBU0M7QUFDRCxTQUFzQixTQUFTLENBQUMsR0FBVzs7UUFDdkMsT0FBTyxJQUFJLE9BQU8sQ0FBQyxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsRUFBRTtZQUM1QixNQUFNLENBQUMsU0FBUyxHQUFHLFNBQVMsRUFBRSxDQUFDLEdBQUcsRUFBRSxLQUFLLEVBQUUsRUFBRTtnQkFDekMsSUFBSSxHQUFHLEVBQUU7b0JBQ0wsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFBO2lCQUNYO3FCQUFNO29CQUNILGdDQUFnQztvQkFDaEMsb0RBQW9EO29CQUVwRCxHQUFHLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFBO2lCQUNsQjtZQUNMLENBQUMsQ0FBQyxDQUFBO1FBQ04sQ0FBQyxDQUFDLENBQUM7SUFDUCxDQUFDO0NBQUE7QUFiRCw4QkFhQztBQUVELElBQUksT0FBTyxNQUFNLENBQUMsU0FBUyxDQUFDLFVBQVUsSUFBSSxXQUFXLEVBQUU7SUFDbkQsTUFBTSxDQUFDLFNBQVMsQ0FBQyxVQUFVLEdBQUcsVUFBVSxDQUFTLEVBQUUsQ0FBUztRQUN4RCxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ2pDLENBQUMsQ0FBQztDQUNMO0FBQ0QsU0FBZ0IsU0FBUyxDQUFDLEtBQWdCO0lBQ3RDLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxLQUFLLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO1FBQ25DLElBQUksS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUFFO1lBQ1YsT0FBTyxJQUFJLENBQUE7U0FDZDtLQUNKO0lBQ0QsT0FBTyxLQUFLLENBQUM7QUFDakIsQ0FBQztBQVBELDhCQU9DO0FBQ0QsU0FBZ0Isa0JBQWtCLENBQUMsTUFBYyxFQUFFLENBQVMsRUFBRSxDQUFTO0lBRW5FLE9BQU8sTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFFbkMsQ0FBQztBQUpELGdEQUlDIn0=","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.DataChannelStreaming = exports.DataChannel = exports.Disease = exports.ExampleRequest = exports.ConsumableLinkedList = exports.WonderRequest = exports.DeWonder = exports.AllWonderParams = exports.WonderQueryParam_GroupBy = exports.WonderQueryParam_Race = exports.WonderQueryParam_Gender = exports.WonderQueryParam_Measure = exports.WonderQueryParam_AgeGroup = exports.WonderQueryParam_Include = exports.WonderQueryParam = exports.WonderQueryParam_Util = exports.parseYearMonthString = exports.isYearMonthString = exports.MonthEnum = exports.YearStrings = exports.MonthNames = exports.isWQP_None = void 0;\r\n// import * as XMLParser from 'xml2js'\r\nif (true) {\r\n    global.fetch = require('node-fetch');\r\n}\r\nconst bristolboard_1 = require(\"bristolboard\");\r\nconst sorted_btree_1 = __importDefault(require(\"sorted-btree\"));\r\nconst FBF_Helpers_1 = require(\"./FBF_Helpers\");\r\nconst WonderDataImports_1 = require(\"./WonderData/WonderDataImports\");\r\n// export type WonderQueryParamName = (keyof typeof WonderQueryParam) \r\nfunction isWQP_None(param) {\r\n    return (param == 'None') || (param == WonderQueryParam_Util.None);\r\n}\r\nexports.isWQP_None = isWQP_None;\r\nvar MonthNames;\r\n(function (MonthNames) {\r\n    MonthNames[MonthNames[\"Jan\"] = 1] = \"Jan\";\r\n    MonthNames[MonthNames[\"Feb\"] = 2] = \"Feb\";\r\n    MonthNames[MonthNames[\"Mar\"] = 3] = \"Mar\";\r\n    MonthNames[MonthNames[\"Apr\"] = 4] = \"Apr\";\r\n    MonthNames[MonthNames[\"May\"] = 5] = \"May\";\r\n    MonthNames[MonthNames[\"Jun\"] = 6] = \"Jun\";\r\n    MonthNames[MonthNames[\"Jul\"] = 7] = \"Jul\";\r\n    MonthNames[MonthNames[\"Aug\"] = 8] = \"Aug\";\r\n    MonthNames[MonthNames[\"Sep\"] = 9] = \"Sep\";\r\n    MonthNames[MonthNames[\"Oct\"] = 10] = \"Oct\";\r\n    MonthNames[MonthNames[\"Nov\"] = 11] = \"Nov\";\r\n    MonthNames[MonthNames[\"Dec\"] = 12] = \"Dec\";\r\n})(MonthNames = exports.MonthNames || (exports.MonthNames = {}));\r\nfunction YearStrings(start = 1999, end = 2020) {\r\n    let out = [];\r\n    for (let i = start; i <= end; i++) {\r\n        out.push(`${i}`);\r\n    }\r\n    return out;\r\n}\r\nexports.YearStrings = YearStrings;\r\nvar MonthEnum;\r\n(function (MonthEnum) {\r\n    MonthEnum[MonthEnum[\"January\"] = 0] = \"January\";\r\n    MonthEnum[MonthEnum[\"February\"] = 1] = \"February\";\r\n    MonthEnum[MonthEnum[\"March\"] = 2] = \"March\";\r\n    MonthEnum[MonthEnum[\"April\"] = 3] = \"April\";\r\n    MonthEnum[MonthEnum[\"May\"] = 4] = \"May\";\r\n    MonthEnum[MonthEnum[\"June\"] = 5] = \"June\";\r\n    MonthEnum[MonthEnum[\"July\"] = 6] = \"July\";\r\n    MonthEnum[MonthEnum[\"August\"] = 7] = \"August\";\r\n    MonthEnum[MonthEnum[\"September\"] = 8] = \"September\";\r\n    MonthEnum[MonthEnum[\"October\"] = 9] = \"October\";\r\n    MonthEnum[MonthEnum[\"November\"] = 10] = \"November\";\r\n    MonthEnum[MonthEnum[\"December\"] = 11] = \"December\";\r\n})(MonthEnum = exports.MonthEnum || (exports.MonthEnum = {}));\r\nfunction isYearMonthString(str) {\r\n    return str.split('-').length == 2;\r\n}\r\nexports.isYearMonthString = isYearMonthString;\r\nfunction parseYearMonthString(str) {\r\n    let parts = str.split('-');\r\n    switch (parts.length) {\r\n        case 0:\r\n            return null;\r\n        case 1:\r\n            return [parts[0], -1];\r\n        case 2:\r\n            return [parts[0], MonthEnum[parts[1]]];\r\n    }\r\n}\r\nexports.parseYearMonthString = parseYearMonthString;\r\nvar WonderQueryParam_Util;\r\n(function (WonderQueryParam_Util) {\r\n    WonderQueryParam_Util[\"None\"] = \"*None*\";\r\n    WonderQueryParam_Util[\"All\"] = \"*All*\";\r\n})(WonderQueryParam_Util = exports.WonderQueryParam_Util || (exports.WonderQueryParam_Util = {}));\r\nvar WonderQueryParam;\r\n(function (WonderQueryParam) {\r\n    //FIV\r\n    WonderQueryParam[\"YearAndMonth\"] = \"D76.V1\";\r\n})(WonderQueryParam = exports.WonderQueryParam || (exports.WonderQueryParam = {}));\r\nvar WonderQueryParam_Include;\r\n(function (WonderQueryParam_Include) {\r\n    WonderQueryParam_Include[\"YearAndMonth\"] = \"D76.V1\";\r\n    WonderQueryParam_Include[\"CensusRegions\"] = \"D76.V10\";\r\n    WonderQueryParam_Include[\"ICD10Codes\"] = \"D76.V2\";\r\n    WonderQueryParam_Include[\"HHSRegions\"] = \"D76.V27\";\r\n    WonderQueryParam_Include[\"StatesAndCounties\"] = \"D76.V9\";\r\n})(WonderQueryParam_Include = exports.WonderQueryParam_Include || (exports.WonderQueryParam_Include = {}));\r\nvar WonderQueryParam_AgeGroup;\r\n(function (WonderQueryParam_AgeGroup) {\r\n    WonderQueryParam_AgeGroup[\"TenYear\"] = \"D76.V5\";\r\n    WonderQueryParam_AgeGroup[\"FiveYear\"] = \"D76.V51\";\r\n    WonderQueryParam_AgeGroup[\"SingleYear\"] = \"D76.V52\";\r\n    WonderQueryParam_AgeGroup[\"Infant\"] = \"D76.V6\";\r\n})(WonderQueryParam_AgeGroup = exports.WonderQueryParam_AgeGroup || (exports.WonderQueryParam_AgeGroup = {}));\r\nvar WonderQueryParam_Measure;\r\n(function (WonderQueryParam_Measure) {\r\n    WonderQueryParam_Measure[\"Deaths\"] = \"D76.M1\";\r\n    WonderQueryParam_Measure[\"Population\"] = \"D76.M2\";\r\n    WonderQueryParam_Measure[\"CrudeRate\"] = \"D76.M3\";\r\n    WonderQueryParam_Measure[\"CrudeRateStandardError\"] = \"D76.M31\";\r\n    WonderQueryParam_Measure[\"CrudeRate95ConfidenceInterval\"] = \"D76.M32\";\r\n    WonderQueryParam_Measure[\"AgeAdjustedRate\"] = \"D76.M4\";\r\n    WonderQueryParam_Measure[\"AgeAdjustedRateStandardError\"] = \"D76.M41\";\r\n    WonderQueryParam_Measure[\"AgeAdjustedRateConfidenceInterval\"] = \"D76.M42\";\r\n    WonderQueryParam_Measure[\"PercentOfTotalDeaths\"] = \"D76.M9\";\r\n})(WonderQueryParam_Measure = exports.WonderQueryParam_Measure || (exports.WonderQueryParam_Measure = {}));\r\nvar WonderQueryParam_Gender;\r\n(function (WonderQueryParam_Gender) {\r\n    WonderQueryParam_Gender[\"Male\"] = \"M\";\r\n    WonderQueryParam_Gender[\"Female\"] = \"F\";\r\n})(WonderQueryParam_Gender = exports.WonderQueryParam_Gender || (exports.WonderQueryParam_Gender = {}));\r\nvar WonderQueryParam_Race;\r\n(function (WonderQueryParam_Race) {\r\n    WonderQueryParam_Race[\"HispanicOrLatino\"] = \"2135-2\";\r\n    WonderQueryParam_Race[\"NotHispanicOrLatino\"] = \"2186-2\";\r\n    WonderQueryParam_Race[\"NotStated\"] = \"NS\";\r\n    WonderQueryParam_Race[\"AmericanIndianOrAlaskaNative\"] = \"1002-5\";\r\n    WonderQueryParam_Race[\"AsianOrPacificIslander\"] = \"A-PI\";\r\n    WonderQueryParam_Race[\"Black\"] = \"2054-5\";\r\n    WonderQueryParam_Race[\"White\"] = \"2106-3\";\r\n})(WonderQueryParam_Race = exports.WonderQueryParam_Race || (exports.WonderQueryParam_Race = {}));\r\nvar WonderQueryParam_GroupBy;\r\n(function (WonderQueryParam_GroupBy) {\r\n    WonderQueryParam_GroupBy[\"CensusRegion\"] = \"D76.V10-level1\";\r\n    WonderQueryParam_GroupBy[\"CensusDivision\"] = \"D76.V10-level2\";\r\n    WonderQueryParam_GroupBy[\"HHSRegion\"] = \"D76.V27-level1\";\r\n    WonderQueryParam_GroupBy[\"State\"] = \"D76.V9-level1\";\r\n    WonderQueryParam_GroupBy[\"County\"] = \"D76.V9-level2\";\r\n    WonderQueryParam_GroupBy[\"Urbanization2013\"] = \"D76.V19\";\r\n    WonderQueryParam_GroupBy[\"Urbanization2006\"] = \"D76.V11\";\r\n    WonderQueryParam_GroupBy[\"AgeGroups\"] = \"D76.V5\";\r\n    WonderQueryParam_GroupBy[\"Gender\"] = \"D76.V7\";\r\n    WonderQueryParam_GroupBy[\"HispanicOrigin\"] = \"D76.V17\";\r\n    WonderQueryParam_GroupBy[\"Race\"] = \"D76.V8\";\r\n    //timeThere \r\n    WonderQueryParam_GroupBy[\"Year\"] = \"D76.V1-level1\";\r\n    WonderQueryParam_GroupBy[\"Month\"] = \"D76.V1-level2\";\r\n    WonderQueryParam_GroupBy[\"Weekday\"] = \"D76.V24\";\r\n    WonderQueryParam_GroupBy[\"Autopsy\"] = \"D76.V20\";\r\n    WonderQueryParam_GroupBy[\"PlaceofDeath\"] = \"D76.V21\";\r\n    WonderQueryParam_GroupBy[\"ICD10\"] = \"D76.V2\";\r\n    WonderQueryParam_GroupBy[\"LeadingCausesofDeath\"] = \"D76.V28\";\r\n    WonderQueryParam_GroupBy[\"LeadingCausesofDeathInfants\"] = \"D76.V29\";\r\n    WonderQueryParam_GroupBy[\"ICDChapter\"] = \"D76.V2-level1\";\r\n    WonderQueryParam_GroupBy[\"ICDSubChapter\"] = \"D76.V2-level2\";\r\n    WonderQueryParam_GroupBy[\"CauseOfDeath\"] = \"D76.V2-level3\";\r\n    WonderQueryParam_GroupBy[\"ICD10_113CauseList\"] = \"D76.V4\";\r\n    WonderQueryParam_GroupBy[\"ICD10_130CauseListInfants\"] = \"D76.V12\";\r\n    WonderQueryParam_GroupBy[\"InjuryIntent\"] = \"D76.V22\";\r\n    WonderQueryParam_GroupBy[\"InjuryMechanismAndAllOtherLeadingCauses\"] = \"D76.V23\";\r\n    WonderQueryParam_GroupBy[\"DrugAlcoholInducedCauses\"] = \"D76.V25\";\r\n})(WonderQueryParam_GroupBy = exports.WonderQueryParam_GroupBy || (exports.WonderQueryParam_GroupBy = {}));\r\nexports.AllWonderParams = [WonderQueryParam_Include, WonderQueryParam_AgeGroup, WonderQueryParam_GroupBy, , WonderQueryParam_Measure, , WonderQueryParam_Util];\r\nlet WonderQueryParam_Reversed_Cache = null;\r\n// export function WonderQueryParam_Reversed() {\r\n//   if (WonderQueryParam_Reversed_Cache == null) {\r\n//     let WonderQueryParam_Reversed_Cache = {} as any\r\n//     for (let key in WonderQueryParam) {\r\n//       WonderQueryParam_Reversed_Cache[WonderQueryParam[key]] = key;\r\n//     }\r\n//   }\r\n//   return WonderQueryParam_Reversed_Cache;\r\n// }\r\nfunction DeWonder(text) {\r\n    let tmp = text;\r\n    let allTranslations = [];\r\n    for (let groupName in exports.AllWonderParams) {\r\n        let group = exports.AllWonderParams[groupName];\r\n        for (let key in group) {\r\n            allTranslations.push([groupName, group[key], key]);\r\n        }\r\n    }\r\n    allTranslations = allTranslations.sort((a, b) => (b[1].length - a[1].length));\r\n    for (let item of allTranslations) {\r\n        // console.log(`Replacing ${group[key]} with ${key}`)\r\n        tmp = (0, FBF_Helpers_1.replaceAllInString)(tmp, `F_${item[1]}`, `F_Only_${item[2]}`);\r\n        tmp = (0, FBF_Helpers_1.replaceAllInString)(tmp, `I_${item[1]}`, `I_Only_${item[2]}`);\r\n        tmp = (0, FBF_Helpers_1.replaceAllInString)(tmp, `V_${item[1]}`, `V_Only_${item[2]}`);\r\n        tmp = (0, FBF_Helpers_1.replaceAllInString)(tmp, item[1], item[2]);\r\n    }\r\n    return tmp;\r\n}\r\nexports.DeWonder = DeWonder;\r\nclass WonderRequest {\r\n    constructor() {\r\n        this.params = new Map();\r\n        this.groupByCount = 0;\r\n        this.groupByCountLimit = 5;\r\n        this.defaultParams = {\r\n            'dataset_code': ['D76'],\r\n            'B_2': [WonderQueryParam_Util.None],\r\n            'B_3': [WonderQueryParam_Util.None],\r\n            'B_4': [WonderQueryParam_Util.None],\r\n            'B_5': [WonderQueryParam_Util.None],\r\n            'O_age': [WonderQueryParam_AgeGroup.TenYear],\r\n            'O_location': [WonderQueryParam_Include.StatesAndCounties],\r\n            'O_aar_pop': ['0000'],\r\n            // 'O_aar_enable': ['false'],\r\n            'O_urban': [WonderQueryParam_GroupBy.Urbanization2013],\r\n            // 'O_aar_CI': ['true'],\r\n            'action-Send': ['Send'],\r\n            // 'O_aar_SE': ['true'],\r\n            'O_aar': ['aar_none'],\r\n            'M_1': [WonderQueryParam_Measure.Deaths],\r\n            'M_2': [WonderQueryParam_Measure.Population],\r\n            'M_3': [WonderQueryParam_Measure.CrudeRate],\r\n            'O_V10_fmode': ['freg'],\r\n            'O_V1_fmode': ['freg'],\r\n            'O_V25_fmode': ['freg'],\r\n            'O_V27_fmode': ['freg'],\r\n            'O_V2_fmode': ['freg'],\r\n            'O_V9_fmode': ['freg'],\r\n            'O_oc-sect1-request': ['close'],\r\n            'O_precision': ['1'],\r\n            'O_rate_per': ['100000'],\r\n            'O_show_supressed': ['true'],\r\n            'O_show_totals': ['false'],\r\n            'O_show_zeros': ['true'],\r\n            'O_timeout': ['600'],\r\n            'O_title': ['Example1'],\r\n            'O_javascript': ['off'],\r\n            'O_ucd': [WonderQueryParam_Include.ICD10Codes],\r\n            'F_D76.V1': [WonderQueryParam_Util.All],\r\n            'F_D76.V10': [WonderQueryParam_Util.All],\r\n            'F_D76.V2': [WonderQueryParam_Util.All],\r\n            'F_D76.V9': [WonderQueryParam_Util.All],\r\n            'V_D76.V7': [WonderQueryParam_Util.All],\r\n            'V_D76.V8': [WonderQueryParam_Util.All],\r\n            'V_D76.V9': [],\r\n            'V_D76.V6': ['00'],\r\n            'V_D76.V52': [WonderQueryParam_Util.All],\r\n            'V_D76.V5': [WonderQueryParam_Util.All],\r\n            'V_D76.V51': [WonderQueryParam_Util.All],\r\n            'V_D76.V17': [WonderQueryParam_Util.All],\r\n            'V_D76.V19': [WonderQueryParam_Util.All],\r\n            'V_D76.V2': [],\r\n            'V_D76.V20': [WonderQueryParam_Util.All],\r\n            'V_D76.V21': [WonderQueryParam_Util.All],\r\n            'V_D76.V22': [WonderQueryParam_Util.All],\r\n            'V_D76.V23': [WonderQueryParam_Util.All],\r\n            'V_D76.V24': [WonderQueryParam_Util.All],\r\n            'V_D76.V25': [],\r\n            'F_D76.V27': [WonderQueryParam_Util.All],\r\n            'O_show_suppressed': ['true'],\r\n            //values for non-standard age-adjusted rates\r\n            // 'VM_D76.M6_D76.V1_S': ['2004'],// [WonderQueryParam_Util.All],//years\r\n            // 'VM_D76.M6_D76.V17': [WonderQueryParam_Util.All],//Hispanic Origin\r\n            // 'VM_D76.M6_D76.V7': [WonderQueryParam_Util.All],//Gender\r\n            // 'VM_D76.M6_D76.V8': [WonderQueryParam_Util.All],//Race\r\n            'finder-stage-D76.V1': ['codeset'],\r\n            'finder-stage-D76.V10': ['codeset'],\r\n            'finder-stage-D76.V2': ['codeset'],\r\n            'finder-stage-D76.V25': ['codeset'],\r\n            'finder-stage-D76.V27': ['codeset'],\r\n            'finder-stage-D76.V9': ['codeset'],\r\n            'saved_id': [],\r\n            'stage': ['request']\r\n        };\r\n        this.defaultFIVParams = {};\r\n    }\r\n    addParam(name, value) {\r\n        if (typeof value == 'string') {\r\n            this.params.set(name, [value]);\r\n        }\r\n        else {\r\n            this.params.set(name, value);\r\n        }\r\n        return this;\r\n    }\r\n    urbanBy(version) {\r\n        let vCode = WonderQueryParam_GroupBy[version];\r\n        this.addParam('O_urban', vCode);\r\n        return this;\r\n    }\r\n    enableAgeAdjustedRate(isEnabled, confidenceInterval95 = isEnabled, standardError = isEnabled) {\r\n        this.addParam('O_aar_enable', isEnabled ? 'true' : 'false');\r\n        this.addParam('O_aar_CI', confidenceInterval95 ? 'true' : 'false');\r\n        this.addParam('O_aar_SE', standardError ? 'true' : 'false');\r\n        return this;\r\n    }\r\n    ageAdjustedRate(rateBy) {\r\n        this.addParam('O_arr', rateBy);\r\n        return this;\r\n    }\r\n    population(yearOfPopulationCount) {\r\n        this.addParam('O_aar_pop', yearOfPopulationCount);\r\n        return this;\r\n    }\r\n    locationBy(locByName) {\r\n        let locBy = WonderQueryParam_Include[locByName];\r\n        this.params.set('O_Location', [locBy]);\r\n        return this;\r\n    }\r\n    includeDates(dates) {\r\n        let paramName = `F_${WonderQueryParam_Include.YearAndMonth}`;\r\n        if (dates == 'all') {\r\n            this.params.set(paramName, [WonderQueryParam_Util.All]);\r\n            return;\r\n        }\r\n        return this;\r\n    }\r\n    enableJavascript(enabled) {\r\n        this.addParam('O_javascript', enabled ? 'on' : 'off');\r\n        return this;\r\n    }\r\n    measure(measureBy) {\r\n        let paramName = `M_${measureBy.replace('D.76.M', '')}`;\r\n        this.addParam(paramName, WonderQueryParam_Measure[measureBy]);\r\n    }\r\n    causeOfDeathBy(deathBy) {\r\n        let code = deathBy in WonderQueryParam_Include ? WonderQueryParam_Include[deathBy] : WonderQueryParam_GroupBy[deathBy];\r\n        this.addParam('O_ucd', [code]);\r\n        return this;\r\n    }\r\n    ageGroups(groupName) {\r\n        this.addParam(`O_age`, [WonderQueryParam_AgeGroup[groupName]]);\r\n        return this;\r\n    }\r\n    filterByYear(years) {\r\n        //let val = (typeof years == 'string') ? years : years.map(y => `${y} (${y})`).join(' ')\r\n        // return this.addParam('I_D76.V1', val);\r\n        return this.addParam(`F_D76.V1`, years);\r\n    }\r\n    groupBy(groupByName) {\r\n        if (this.groupByCount >= this.groupByCountLimit) {\r\n            throw new Error(`Cannot group by more than ${this.groupByCountLimit}`);\r\n        }\r\n        let parameterName = `B_${this.groupByCount + 1}`;\r\n        if (isWQP_None(groupByName)) {\r\n            this.addParam(parameterName, WonderQueryParam_Util.None);\r\n        }\r\n        else if (WonderQueryParam_GroupBy[groupByName]) {\r\n            let param = WonderQueryParam_GroupBy[groupByName];\r\n            this.addParam(parameterName, param);\r\n        }\r\n        else {\r\n            this.addParam(parameterName, groupByName);\r\n        }\r\n        this.groupByCount++;\r\n        return this;\r\n    }\r\n    toParamMap() {\r\n        this.setDefaults();\r\n        return this.params;\r\n    }\r\n    alternatives(k) {\r\n        if (k.length < 3) {\r\n            return [k];\r\n        }\r\n        let start = k.substring(0, 2);\r\n        let rest = k.substring(2);\r\n        switch (start) {\r\n            case 'F_':\r\n                return [k, `I_${rest}`, `V_${rest}`];\r\n            case 'I_':\r\n                return [k, `F_${rest}`, `V_${rest}`];\r\n            case 'V_':\r\n                return [k, `I_${rest}`, `F_${rest}`];\r\n            default:\r\n                return [k];\r\n        }\r\n    }\r\n    setDefaults() {\r\n        let ths = this;\r\n        for (let key in this.defaultParams) {\r\n            if (!((0, FBF_Helpers_1.isAllTrue)(ths.alternatives(key).map((altKey) => {\r\n                // console.log(`Checking alternative ${altKey}`)\r\n                if (ths.params.has(altKey)) {\r\n                    // console.log(`----Alt Found ${altKey}`)\r\n                }\r\n                return ths.params.has(altKey);\r\n            })))) {\r\n                // console.log(`Defaulting ${key} (${DeWonder(key)}) to ${this.defaultParams[key]}`)\r\n                this.params.set(key, this.defaultParams[key]);\r\n            }\r\n        }\r\n    }\r\n    toString() {\r\n        // console.log(`Building query string`)\r\n        let ths = this;\r\n        let toProcess = [];\r\n        let processed = new Map();\r\n        let name;\r\n        let keyList = new ConsumableLinkedList(this.params.keys());\r\n        keyList.consume((key) => {\r\n            if (key.startsWith('B_')) {\r\n                toProcess.push([key, ths.params.get(key)]);\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        // for (let i = 1; i <= 5; i++) {\r\n        //   name = `B_${i}`\r\n        //   toProcess.push([name, this.params.has(name) ? this.params.get(name) : [WonderQueryParam_Util.None]])\r\n        //   processed.set(name, true)\r\n        // }\r\n        // for (let key of this.params.keys()) {\r\n        //   if (key.startsWith('M_')) {\r\n        //     toProcess.push([key, this.params.get(key)])\r\n        //     processed.set(key, true)\r\n        //   }\r\n        // }\r\n        keyList.consume((key) => {\r\n            if (key.startsWith('M_')) {\r\n                toProcess.push([key, ths.params.get(key)]);\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        keyList.consume((key) => {\r\n            if (key.startsWith('O_')) {\r\n                toProcess.push([key, ths.params.get(key)]);\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        keyList.consume((key) => {\r\n            if (key.startsWith('F_') || key.startsWith('I_') || key.startsWith('V_')) {\r\n                toProcess.push([key, ths.params.get(key)]);\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        keyList.consume((key) => {\r\n            // console.log(`Uordered parameter ${key}`)\r\n            toProcess.push([key, ths.params.get(key)]);\r\n            return true;\r\n        });\r\n        // for (let key of this.params.keys()) {\r\n        //   if (!processed.has(key)) {\r\n        //     toProcess.push([key, this.params.get(key)])\r\n        //   }\r\n        // }\r\n        // console.log(`Full Query:\\n${toProcess.map((param: [string, string[]]) => `${param[0]}(${DeWonder(param[0])}) = \\n${param[1].join('\\n--')}\\n`)}`)\r\n        return toProcess.map((param, index) => {\r\n            // console.log(`Mapping ${param[0]} (${DeWonder(param[0])}) to `, param[1])\r\n            return `<parameter><name>${param[0]}</name>${param[1].length > 0 ? param[1].map(str => `<value>${str}</value>`).join('') : '<value />'}</parameter>`;\r\n        }).join('');\r\n    }\r\n    requestTable(setDefaults = true) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return WonderRequest.toTable(yield this.request(setDefaults));\r\n        });\r\n    }\r\n    request(setDefaults = true) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let clientSide = typeof window != 'undefined';\r\n            if (!this.params.has('B_1')) {\r\n                throw new Error(`Please group by at least one property`);\r\n            }\r\n            if (setDefaults) {\r\n                this.setDefaults();\r\n            }\r\n            let reqPartOfBody = this.toString();\r\n            // console.log(`Requesting`, reqPartOfBody)\r\n            // console.log(`Query: ${reqPartOfBody}`)\r\n            let fetchBody = `request_xml=<request-parameters><parameter>\r\n        <name>accept_datause_restrictions</name>\r\n        <value>true</value>\r\n        </parameter>${reqPartOfBody}</request-parameters>`;\r\n            let result = yield fetch(clientSide ? `http://${location.hostname}:5001/gdsn3-22/us-central1/WonderProxy` : `https://wonder.cdc.gov/controller/datarequest/D76`, {\r\n                method: 'POST',\r\n                body: fetchBody,\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded', 'Accept': 'application/xml' },\r\n                // mode: 'no-cors'\r\n            });\r\n            // console.log(result.status + \" \" + result.statusText)\r\n            let textResult = yield result.text();\r\n            // console.log(textResult);\r\n            // let jsonValue = await XMLParser.parseStringPromise(textResult, {})\r\n            // console.log('JSON__________----')\r\n            // console.log(jsonValue)\r\n            let json = yield (0, FBF_Helpers_1.XmlToJson)(textResult);\r\n            return json.page[0];\r\n        });\r\n    }\r\n    static toTable(data) {\r\n        var _a, _b;\r\n        try {\r\n            console.log(data);\r\n        }\r\n        catch (err) {\r\n            try {\r\n                console.log((_a = data.message) === null || _a === void 0 ? void 0 : _a.join('\\n'));\r\n            }\r\n            catch (errr) {\r\n                console.log(`Bad response`, data);\r\n            }\r\n            return null;\r\n        }\r\n        if (!data.response) {\r\n            try {\r\n                console.log((_b = data.message) === null || _b === void 0 ? void 0 : _b.join('\\n'));\r\n            }\r\n            catch (errr) {\r\n                console.log(`Bad response`, data);\r\n            }\r\n            return null;\r\n        }\r\n        let byCodes = (0, FBF_Helpers_1.flatten)(data.response[0].request[0].byvariables.map((v) => v.variable.map((vv) => vv.$.code)));\r\n        console.log('By codes', byCodes);\r\n        let measureCodes = data.response[0]['measure-selections'][0].measure.map((m) => m.$.code);\r\n        let columnCodes = (0, FBF_Helpers_1.concactinate)(byCodes, measureCodes);\r\n        console.log('Column Codes', measureCodes.map((c) => DeWonder(c)));\r\n        let repeatedColumns = [];\r\n        let columnsToRepeat = new Map();\r\n        let rows = [];\r\n        let totals = [];\r\n        let maximums = [];\r\n        data.response[0]['data-table'][0].r.forEach((row) => {\r\n            let column = [];\r\n            columnsToRepeat.clear();\r\n            for (let i = 0; i < repeatedColumns.length; i++) {\r\n                // console.log(`Repeating ${repeatedColumns[i][1]}`)\r\n                columnsToRepeat.set(repeatedColumns[i][2], repeatedColumns[i][1]);\r\n                repeatedColumns[i][0]--;\r\n                if (repeatedColumns[i][0] <= 0) {\r\n                    repeatedColumns.splice(i, 1);\r\n                }\r\n            }\r\n            row.c.forEach((col, colIndex) => {\r\n                var _a;\r\n                if (columnsToRepeat.has(colIndex)) {\r\n                    column.push(columnsToRepeat.get(colIndex));\r\n                }\r\n                let val = (typeof col.$.l == 'undefined') ?\r\n                    (col.$.v == \"Unreliable\" ? \"Unreliable\" : Number((_a = col.$.v) === null || _a === void 0 ? void 0 : _a.replaceAll(',', '')))\r\n                    : col.$.l;\r\n                if (col.$.r) {\r\n                    // console.log(`Repeating ${val} ${Number(col.$.r) - 1} times`)\r\n                    repeatedColumns.push([Number(col.$.r) - 1, val, colIndex]);\r\n                }\r\n                column.push(val);\r\n            });\r\n            while (totals.length < column.length) {\r\n                totals.push(0);\r\n            }\r\n            while (maximums.length < column.length) {\r\n                maximums.push(-1);\r\n            }\r\n            for (let i = 0; i < column.length; i++) {\r\n                if (typeof column[i] == 'number') {\r\n                    if (maximums[i] == -1 || column[i] > maximums[i] || Number.isNaN(maximums[i])) {\r\n                        maximums[i] = column[i];\r\n                    }\r\n                    totals[i] += column[i];\r\n                }\r\n                else {\r\n                    totals[i] = -1;\r\n                }\r\n            }\r\n            rows.push(column);\r\n        });\r\n        let output = { rowTotals: totals, rowMaximums: maximums, columnCodes: columnCodes, columnNames: columnCodes.map((code) => DeWonder(code)), rows: rows };\r\n        console.log(output);\r\n        return output;\r\n    }\r\n}\r\nexports.WonderRequest = WonderRequest;\r\nclass ConsumableLinkedList {\r\n    constructor(values) {\r\n        this.root = null;\r\n        if (!Array.isArray(values)) {\r\n            let vals = [];\r\n            let node = null;\r\n            for (let item of values) {\r\n                if (node == null) {\r\n                    this.root = { value: item, next: null };\r\n                    node = this.root;\r\n                }\r\n                else {\r\n                    node.next = { value: item, next: null };\r\n                    node = node.next;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.root = { value: values[0], next: null };\r\n            let node = this.root;\r\n            for (let i = 1; i < values.length; i++) {\r\n                node.next = { value: values[i], next: null };\r\n                node = node.next;\r\n            }\r\n        }\r\n    }\r\n    consume(onEach) {\r\n        let node = this.root;\r\n        let lastNode = null;\r\n        while (node != null) {\r\n            if (onEach(node.value)) {\r\n                if (lastNode == null) {\r\n                    //  console.log(`Consuming ${node.value} as root now ${this.toString()}`)\r\n                    this.root = node.next;\r\n                    node = this.root;\r\n                }\r\n                else {\r\n                    //  console.log(`Consuming ${node.value} in chain now ${this.toString()}`)\r\n                    lastNode.next = node.next;\r\n                    node = node.next;\r\n                }\r\n            }\r\n            else {\r\n                lastNode = node;\r\n                node = node.next;\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    toArray() {\r\n        let node = this.root;\r\n        let out = [];\r\n        while (node != null) {\r\n            out.push(node.value);\r\n            node = node.next;\r\n        }\r\n        return out;\r\n    }\r\n    toString() {\r\n        return this.toArray().join(', ');\r\n    }\r\n}\r\nexports.ConsumableLinkedList = ConsumableLinkedList;\r\nexports.ExampleRequest = '<request-parameters><parameter><name>B_1</name><value>D76.V1-level1</value></parameter><parameter><name>B_2</name><value>D76.V8</value></parameter><parameter><name>B_3</name><value>*None*</value></parameter><parameter><name>B_4</name><value>*None*</value></parameter><parameter><name>B_5</name><value>*None*</value></parameter><parameter><name>F_D76.V1</name><value>1999</value><value>2000</value><value>2001</value><value>2002</value><value>2003</value><value>2004</value><value>2005</value><value>2006</value><value>2007</value><value>2008</value><value>2009</value><value>2010</value><value>2011</value><value>2012</value><value>2013</value></parameter><parameter><name>F_D76.V10</name><value>*All*</value></parameter><parameter><name>F_D76.V2</name><value>C00-D48</value></parameter><parameter><name>F_D76.V25</name><value>*All*</value></parameter><parameter><name>F_D76.V27</name><value>*All*</value></parameter><parameter><name>F_D76.V9</name><value>*All*</value></parameter><parameter><name>I_D76.V1</name><value>1999 (1999) 2000 (2000) 2001 (2001) 2002 (2002) 2003 (2003) 2004 (2004) 2005 (2005) 2006 (2006) 2007 (2007) 2008 (2008) 2009 (2009) 2010 (2010) 2011 (2011) 2012 (2012) 2013 (2013) </value></parameter><parameter><name>I_D76.V10</name><value>*All* (The United States) </value></parameter><parameter><name>I_D76.V2</name><value>C00-D48 (Neoplasms) </value></parameter><parameter><name>I_D76.V25</name><value>All Causes of Death </value></parameter><parameter><name>I_D76.V27</name><value>*All* (The United States) </value></parameter><parameter><name>I_D76.V9</name><value>*All* (The United States) </value></parameter><parameter><name>M_1</name><value>D76.M1</value></parameter><parameter><name>M_2</name><value>D76.M2</value></parameter><parameter><name>M_3</name><value>D76.M3</value></parameter><parameter><name>M_9</name><value>D76.M9</value></parameter><parameter><name>O_V10_fmode</name><value>freg</value></parameter><parameter><name>O_V1_fmode</name><value>freg</value></parameter><parameter><name>O_V25_fmode</name><value>freg</value></parameter><parameter><name>O_V27_fmode</name><value>freg</value></parameter><parameter><name>O_V2_fmode</name><value>freg</value></parameter><parameter><name>O_V9_fmode</name><value>freg</value></parameter><parameter><name>O_aar</name><value>aar_std</value></parameter><parameter><name>O_aar_CI</name><value>true</value></parameter><parameter><name>O_aar_SE</name><value>true</value></parameter><parameter><name>O_aar_enable</name><value>true</value></parameter><parameter><name>O_aar_pop</name><value>0000</value></parameter><parameter><name>O_age</name><value>D76.V5</value></parameter><parameter><name>O_javascript</name><value>on</value></parameter><parameter><name>O_location</name><value>D76.V9</value></parameter><parameter><name>O_oc-sect1-request</name><value>close</value></parameter><parameter><name>O_precision</name><value>1</value></parameter><parameter><name>O_rate_per</name><value>100000</value></parameter><parameter><name>O_show_suppressed</name><value>true</value></parameter><parameter><name>O_show_totals</name><value>true</value></parameter><parameter><name>O_show_zeros</name><value>true</value></parameter><parameter><name>O_timeout</name><value>600</value></parameter><parameter><name>O_title</name><value>Example1</value></parameter><parameter><name>O_ucd</name><value>D76.V2</value></parameter><parameter><name>O_urban</name><value>D76.V19</value></parameter><parameter><name>VM_D76.M6_D76.V10</name><value/></parameter><parameter><name>VM_D76.M6_D76.V17</name><value>*All*</value></parameter><parameter><name>VM_D76.M6_D76.V1_S</name><value>*All*</value></parameter><parameter><name>VM_D76.M6_D76.V7</name><value>*All*</value></parameter><parameter><name>VM_D76.M6_D76.V8</name><value>*All*</value></parameter><parameter><name>V_D76.V1</name><value/></parameter><parameter><name>V_D76.V10</name><value/></parameter><parameter><name>V_D76.V11</name><value>*All*</value></parameter><parameter><name>V_D76.V12</name><value>*All*</value></parameter><parameter><name>V_D76.V17</name><value>*All*</value></parameter><parameter><name>V_D76.V19</name><value>*All*</value></parameter><parameter><name>V_D76.V2</name><value/></parameter><parameter><name>V_D76.V20</name><value>*All*</value></parameter><parameter><name>V_D76.V21</name><value>*All*</value></parameter><parameter><name>V_D76.V22</name><value>*All*</value></parameter><parameter><name>V_D76.V23</name><value>*All*</value></parameter><parameter><name>V_D76.V24</name><value>*All*</value></parameter><parameter><name>V_D76.V25</name><value/></parameter><parameter><name>V_D76.V27</name><value/></parameter><parameter><name>V_D76.V4</name><value>*All*</value></parameter><parameter><name>V_D76.V5</name><value>*All*</value></parameter><parameter><name>V_D76.V51</name><value>*All*</value></parameter><parameter><name>V_D76.V52</name><value>*All*</value></parameter><parameter><name>V_D76.V6</name><value>00</value></parameter><parameter><name>V_D76.V7</name><value>*All*</value></parameter><parameter><name>V_D76.V8</name><value>*All*</value></parameter><parameter><name>V_D76.V9</name><value/></parameter><parameter><name>action-Send</name><value>Send</value></parameter><parameter><name>dataset_code</name><value>D76</value></parameter><parameter><name>dataset_label</name><value>Underlying Cause of Death, 1999-2016</value></parameter><parameter><name>dataset_vintage</name><value>2016</value></parameter><parameter><name>finder-stage-D76.V1</name><value>codeset</value></parameter><parameter><name>finder-stage-D76.V10</name><value>codeset</value></parameter><parameter><name>finder-stage-D76.V2</name><value>codeset</value></parameter><parameter><name>finder-stage-D76.V25</name><value>codeset</value></parameter><parameter><name>finder-stage-D76.V27</name><value>codeset</value></parameter><parameter><name>finder-stage-D76.V9</name><value>codeset</value></parameter><parameter><name>saved_id</name><value/></parameter><parameter><name>stage</name><value>request</value></parameter></request-parameters>';\r\nfunction test() {\r\n    let val;\r\n    val;\r\n}\r\nclass Disease {\r\n    constructor(description, deathsByAge, population) {\r\n        this.description = description;\r\n        this.deathsByAge = deathsByAge;\r\n        this.population = population;\r\n    }\r\n    getAvailableChannels() {\r\n        let out = [];\r\n        for (let key in Object.keys(this.deathsByAge)) {\r\n            out.push([`DeathsByAge~${key}`, this.deathsByAge[key].title]);\r\n        }\r\n        return out;\r\n    }\r\n    getChannel(id) {\r\n        let parts = id.split('~');\r\n        switch (parts[0]) {\r\n            case 'DeathsByAge':\r\n                return this.deathsByAge[parts[1]];\r\n        }\r\n        return null;\r\n    }\r\n    toJson() {\r\n        return {\r\n            description: this.description,\r\n            deathsByAge: WonderDataImports_1.Database.ageGroupsToJson(this.deathsByAge),\r\n            population: this.population ? this.population.toJson() : null\r\n        };\r\n    }\r\n    static fromJson(json) {\r\n        return new Disease(json.description, WonderDataImports_1.Database.ageGroupsFromJson(json.deathsByAge), json.population ? DataChannel.fromJson(json.population) : null);\r\n    }\r\n}\r\nexports.Disease = Disease;\r\nclass DataChannel {\r\n    constructor(title, color = fColor.randomColor()) {\r\n        this.tree = new sorted_btree_1.default();\r\n        this.minValue = null;\r\n        this.maxValue = null;\r\n        this.title = title;\r\n        this.color = color;\r\n    }\r\n    set(time, value) {\r\n        if (this.minValue == null || value < this.minValue) {\r\n            this.minValue = value;\r\n        }\r\n        if (this.maxValue == null || value > this.maxValue) {\r\n            this.maxValue = value;\r\n        }\r\n        this.tree.set(time, value);\r\n    }\r\n    forRange(start, end, onEach) {\r\n        if (!this.tree) {\r\n            return;\r\n        }\r\n        let startNode = this.tree.getPairOrNextLower(start);\r\n        if (!startNode) {\r\n            startNode = this.tree.getPairOrNextHigher(start);\r\n        }\r\n        let endNode = this.tree.getPairOrNextHigher(end);\r\n        if (!endNode) {\r\n            endNode = this.tree.getPairOrNextLower(end);\r\n        }\r\n        this.tree.forRange(startNode[0], endNode[0], true, onEach);\r\n    }\r\n    static fromJson(json) {\r\n        let out = new DataChannel(json.title, bristolboard_1.FColor.fromHex(json.color, '', ''));\r\n        out.tree.setPairs(json.data);\r\n        out.minValue = json.valueRange[0];\r\n        out.maxValue = json.valueRange[1];\r\n        return out;\r\n    }\r\n    toJson() {\r\n        var _a;\r\n        let data = this.tree.toArray();\r\n        return {\r\n            title: this.title,\r\n            color: (_a = this.color) === null || _a === void 0 ? void 0 : _a.toHexString(),\r\n            timeDomain: [this.tree.minKey(), this.tree.maxKey()],\r\n            valueRange: [this.minValue, this.maxValue],\r\n            data: data\r\n        };\r\n    }\r\n}\r\nexports.DataChannel = DataChannel;\r\nclass DataChannelStreaming extends DataChannel {\r\n    constructor(id, color, source) {\r\n        super(id.split('~')[1], color);\r\n        this.pullingForward = false;\r\n        this.pullingBackward = false;\r\n        this.pullingRoot = false;\r\n        this.hasMoreBackwards = true;\r\n        this.hasMoreForewards = true;\r\n        this.source = source;\r\n        this.id = id;\r\n        this.tree = new sorted_btree_1.default();\r\n    }\r\n    get hasValue() {\r\n        return this.tree && this.tree.size > 0;\r\n    }\r\n    pullBackwards() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this.pullingBackward || !this.hasMoreBackwards) {\r\n                return false;\r\n            }\r\n            let ths = this;\r\n            this.pullingBackward = true;\r\n            let time = ths.tree.minKey();\r\n            let backwardsResp = yield this.source({\r\n                time: time, limit: 100,\r\n                channelId: this.id, direction: 'before'\r\n            });\r\n            if (backwardsResp.success) {\r\n                this.tree.setPairs(backwardsResp.data);\r\n                this.hasMoreBackwards = backwardsResp.hasMore;\r\n                this.pullingBackward = false;\r\n                return;\r\n                // rootResp.\r\n            }\r\n            throw new Error(`Failed to pull backward from ${time}`);\r\n        });\r\n    }\r\n    pullForwards() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this.pullingForward || !this.hasMoreForewards) {\r\n                return false;\r\n            }\r\n            let ths = this;\r\n            this.pullingForward = true;\r\n            let time = ths.tree.minKey();\r\n            let forewardResp = yield this.source({\r\n                time: time, limit: 100,\r\n                channelId: this.id, direction: 'after'\r\n            });\r\n            if (forewardResp.success) {\r\n                this.tree.setPairs(forewardResp.data);\r\n                this.hasMoreBackwards = forewardResp.hasMore;\r\n                this.pullingForward = false;\r\n                return;\r\n                // rootResp.\r\n            }\r\n            throw new Error(`Failed to pull forward from ${time}`);\r\n        });\r\n    }\r\n    pullRoot(time) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this.pullingRoot) {\r\n                return false;\r\n            }\r\n            this.pullingRoot = true;\r\n            let rootResp = yield this.source({\r\n                time: time, limit: 100,\r\n                channelId: this.id, direction: 'before'\r\n            });\r\n            if (rootResp.success) {\r\n                this.tree.setPairs(rootResp.data);\r\n                this.pullingRoot = false;\r\n                return;\r\n                // rootResp.\r\n            }\r\n            throw new Error(`Failed to pull root from ${time}`);\r\n        });\r\n    }\r\n    forRange(start, end, onEach) {\r\n        let found = false;\r\n        let ths = this;\r\n        if (this.hasValue) {\r\n            let lastTime = -1;\r\n            super.forRange(start, end, (time, value, count) => {\r\n                found = true;\r\n                lastTime = time;\r\n                switch (count) {\r\n                    case 0:\r\n                        console.log('found first value');\r\n                        if (time > start) {\r\n                            this.pullBackwards();\r\n                        }\r\n                }\r\n                onEach(time, value, count);\r\n            });\r\n            if (lastTime != -1 && lastTime < end) {\r\n                ths.pullForwards();\r\n            }\r\n        }\r\n        if (!found) {\r\n            this.pullRoot(end);\r\n        }\r\n        // super.forRange()\r\n    }\r\n}\r\nexports.DataChannelStreaming = DataChannelStreaming;\r\n//# sourceMappingURL=data:application/json;base64,","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.isFileError = exports.Database = void 0;\r\nconst FBF_Helpers_1 = require(\"../FBF_Helpers\");\r\nconst WonderDataImports_1 = require(\"./WonderDataImports\");\r\n// export function firebaseFile(url?: string) {\r\n//   return FirebaseStorage.ref(firebaseStorage, url)\r\n// }\r\n// export async function firebaseFileExists( filePath: String | FirebaseStorage.StorageReference) {\r\n//   let reference = (typeof filePath == 'string') ? firebaseFile(filePath) : (filePath as FirebaseStorage.StorageReference)\r\n//   return new Promise<boolean>((acc)=>{\r\n//     FirebaseStorage.getDownloadURL(reference).then(s=>acc(true)).catch(e=>acc(false))\r\n//   })\r\n// }\r\n// export async function downloadFirebaseFile( filePath: String | FirebaseStorage.StorageReference) {\r\n//   let reference = (typeof filePath == 'string') ? firebaseFile(filePath) : (filePath as FirebaseStorage.StorageReference)\r\n//   let url = await FirebaseStorage.getDownloadURL(reference)\r\n//   let resp = await fetch(url)\r\n//   let blob = await resp.blob()\r\n//   return blob.text()\r\n// }\r\n// export async function uploadFirebaseFile(content: string, filePath: String | FirebaseStorage.StorageReference) {\r\n//   let reference = (typeof filePath == 'string') ? firebaseFile(filePath) : (filePath as FirebaseStorage.StorageReference)\r\n//   return FirebaseStorage.uploadString(reference, content)\r\n// }\r\nconst RawRonaColumnsDefault = [0, 0, 0, '', 0, 0, '', '', '', 0, 0, 0, 0, 0, 0, ''];\r\nclass Database {\r\n    constructor(fileAccessor = null) {\r\n        this.deathsByCause = new Map();\r\n        this.populationByAge = new Map();\r\n        this.fileAccessor = null;\r\n        this.arrested = false;\r\n        this.updateListeners = new Map();\r\n        this.updateListenerCount = 0;\r\n        this.diseaseDirectoryPath = './directory.json';\r\n        this.diseaseDirectory = new Map();\r\n        this.deathsByICD = new Map();\r\n        this.fileAccessor = fileAccessor;\r\n        if (fileAccessor) {\r\n            let ths = this;\r\n            fileAccessor.exists(this.diseaseDirectoryPath).then(exists => {\r\n                if (exists) {\r\n                    fileAccessor.readFile(this.diseaseDirectoryPath).then(data => {\r\n                        if (Array.isArray(data)) {\r\n                            for (let description of data) {\r\n                                ths.diseaseDirectory.set(description.icdCode, description);\r\n                                ths.notifyListeners();\r\n                            }\r\n                        }\r\n                        else {\r\n                            console.log(`Failed to read file`, data);\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        else if (!(0, FBF_Helpers_1.isNode)()) {\r\n        }\r\n    }\r\n    getColorForAgeGroup(ageGroup) {\r\n        switch (ageGroup) {\r\n            case '1-4 years':\r\n                return fColor.blue.darken1;\r\n            case '15-24 years':\r\n                return fColor.blue.darken2;\r\n            case '25-34 years':\r\n                return fColor.blue.darken3;\r\n            default:\r\n                return fColor.blue.base;\r\n        }\r\n    }\r\n    addListener(onUpdate) {\r\n        let index = this.updateListenerCount++;\r\n        this.updateListeners.set(index, onUpdate);\r\n        return index;\r\n    }\r\n    removeListener(index) {\r\n        this.updateListeners.delete(index);\r\n    }\r\n    notifyListeners() {\r\n        for (let listener of this.updateListeners.values()) {\r\n            listener();\r\n        }\r\n    }\r\n    getPopulationForAge(ageGroup) {\r\n        let ths = this;\r\n        return this.populationByAge.getWithDefault(ageGroup, (ag) => new WonderDataImports_1.DataChannel(`AgeGroup${ag}`, ths.getColorForAgeGroup(ag)));\r\n    }\r\n    getDeathsForCause(causeName) {\r\n        if (!this.deathsByCause.has(causeName)) {\r\n            this.deathsByCause.set(causeName, new WonderDataImports_1.DataChannel(`DeathsForCause${causeName}`));\r\n        }\r\n        return this.deathsByCause.get(causeName);\r\n    }\r\n    getDeathsForICD(icdCode) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this.deathsByICD.has(icdCode)) {\r\n                return this.deathsByICD.get(icdCode);\r\n            }\r\n            if (this.diseaseDirectory.has(icdCode)) {\r\n                if (this.fileAccessor) {\r\n                    let filePath = this.diseasePath(icdCode);\r\n                    if (yield this.fileAccessor.exists(filePath)) {\r\n                        let fileResult = yield this.fileAccessor.readFile(filePath);\r\n                        console.log(`Got disease from file`, filePath);\r\n                        if (fileResult != null && !isFileError(fileResult)) {\r\n                            this.deathsByICD.set(icdCode, WonderDataImports_1.Disease.fromJson(fileResult));\r\n                            return WonderDataImports_1.Disease.fromJson(fileResult);\r\n                        }\r\n                        else {\r\n                            console.log(`Couldn't read ICD file ${filePath}`, fileResult);\r\n                        }\r\n                    }\r\n                }\r\n                let result = yield this.pullIcdCode(this.diseaseDirectory.get(icdCode));\r\n                let disease = new WonderDataImports_1.Disease(this.diseaseDirectory.get(icdCode), result);\r\n                return disease;\r\n            }\r\n        });\r\n    }\r\n    findIcdCodes() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let csvResp = yield fetch('https://raw.githubusercontent.com/k4m1113/ICD-10-CSV/master/codes.csv');\r\n            let csv = yield csvResp.text();\r\n            let lines = csv.split('\\n').map(line => {\r\n                line = line.replaceAll(`\"`, '');\r\n                let parts = line.split(',');\r\n                // 0: \"A00\"section\r\n                // 1: \"0\"item\r\n                // 2: \"A000\"junk\r\n                // 3: \"\\\"Cholera due to Vibrio cholerae 01\"technicalLabel\r\n                // 4: \" biovar cholerae\\\"\"junk\r\n                // 5: \"\\\"Cholera due to Vibrio cholerae 01\"junk\r\n                // 6: \" biovar cholerae\\\"\"\r\n                // 7: \"\\\"Cholera\\\"\"\r\n                return [parts[1] && parts[1].isNumber() ? `${parts[0]}.${parts[1]}` : parts[0], parts[3], parts[parts.length - 1]];\r\n            });\r\n            console.log(lines);\r\n            return lines;\r\n        });\r\n    }\r\n    pullIcdCode(description) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let ths = this;\r\n            try {\r\n                let data = yield new WonderDataImports_1.WonderRequest().groupBy('AgeGroups').groupBy('Month').addParam('F_D76.V2', description.icdCode).requestTable(true);\r\n                if (data != null) {\r\n                    let deathsByAge = {};\r\n                    let current = Date.now();\r\n                    let last = Date.now();\r\n                    let count = 0;\r\n                    description.maxPerMonth = Math.max(description.maxPerMonth, data.rowMaximums[2]);\r\n                    for (let row of data.rows) {\r\n                        if (typeof deathsByAge[row[0]] == 'undefined') {\r\n                            deathsByAge[row[0]] = new WonderDataImports_1.DataChannel(description.laymanName + ' ' + row[0], null);\r\n                        }\r\n                        let time = new Date(row[1].isNumber() ? (row[1].includes('/') ? `${row[1].split('/')[0]} ${row[1].split('/')[1]} 1` : `${row[1]} 1 1`) : row[1]).getTime();\r\n                        deathsByAge[row[0]].set(time, row[2]);\r\n                        current = Date.now();\r\n                        if (current - last > 500) {\r\n                            yield new Promise((acc) => { console.log('pop'); acc(); });\r\n                            console.log(`Popping event loop ${count}`);\r\n                            last = current;\r\n                        }\r\n                        if (ths.arrested) {\r\n                            break;\r\n                        }\r\n                        // console.log(`Processing icd ${row[0]} ${count}/${data.rows.length}`)\r\n                        count++;\r\n                    }\r\n                    let disease = new WonderDataImports_1.Disease(description, deathsByAge);\r\n                    this.deathsByICD.set(description.icdCode, disease);\r\n                    ths.diseaseDirectory.set(description.icdCode, description);\r\n                    console.log(`Got data for icd ${description.icdCode}`, deathsByAge);\r\n                    return deathsByAge;\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n            catch (err) {\r\n                console.log(`Failed to pull ${description.icdCode}`, err);\r\n            }\r\n        });\r\n    }\r\n    pullIcdCodes(max = -1) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let codes = yield this.findIcdCodes();\r\n            let ths = this;\r\n            let addedIcds = [];\r\n            yield codes.forEachAsync((code, index) => __awaiter(this, void 0, void 0, function* () {\r\n                if (ths.diseaseDirectory.has(code[0])) {\r\n                    if (max != -1) {\r\n                        max++;\r\n                    }\r\n                }\r\n                else {\r\n                    if (max != -1 && index >= max) {\r\n                        return 'BREAK';\r\n                    }\r\n                    console.log(`${max != -1 ? (max - index) + ' ' : ''}Pulling? data for ICD code ${code[0]}`, code);\r\n                    let description = { laymanName: code[2], technicalName: code[1], icdCode: code[0], maxPerMonth: -1 };\r\n                    let codeResult = yield ths.pullIcdCode(description);\r\n                    if (codeResult == null) {\r\n                        if (max != -1) {\r\n                            max++;\r\n                        }\r\n                    }\r\n                    else {\r\n                        // ths.diseaseDirectory.set(code[0], description)\r\n                        addedIcds.push(code[0]);\r\n                    }\r\n                }\r\n            }));\r\n            let output = this.diseaseDirectory.toArrayWithKeys().sort((a, b) => b[1].maxPerMonth - a[1].maxPerMonth).map(s => s[1]); //[s[1],ths.deathsByICD.get(s[0])])\r\n            console.log(output, output.map(s => [s.icdCode, ths.deathsByICD.get(s.icdCode)]));\r\n            if (this.fileAccessor) {\r\n                this.fileAccessor.writeFile(this.diseaseDirectoryPath, output);\r\n                for (let icd of addedIcds) {\r\n                    let disease = ths.deathsByICD.get(icd);\r\n                    let json = disease.toJson();\r\n                    if (json != null) {\r\n                        this.fileAccessor.writeFile(this.diseasePath(icd), json);\r\n                    }\r\n                }\r\n            }\r\n            return output;\r\n        });\r\n    }\r\n    diseasePath(icdCode) {\r\n        return `./byICD/${icdCode.replaceAll('.', '_')}.json`;\r\n    }\r\n    // diseaseToJson(icdCode: string) {\r\n    //   if (!this.deathsByICD.has(icdCode)) {\r\n    //     console.log(`Cannot jsonify non-existant code ${icdCode}`)\r\n    //     return null;\r\n    //   }\r\n    //   let out: DiseaseData_JSON = {\r\n    //     description: this.diseaseDirectory.get(icdCode),\r\n    //     deathsByAge: Database.ageGroupsToJson(this.deathsByICD.get(icdCode))\r\n    //   }\r\n    //   return out;\r\n    // }\r\n    // static fromJson(json: DataChannel_JSON): DataChannel {\r\n    //     let out = new DataChannel(json.title);\r\n    //     out.tree.setPairs(json.data)\r\n    //     return out;\r\n    // }\r\n    static ageGroupsToJson(ageGroupChannels) {\r\n        let out = {};\r\n        for (let key of Object.keys(ageGroupChannels)) {\r\n            out[key] = ageGroupChannels[key].toJson();\r\n        }\r\n        return out;\r\n    }\r\n    static ageGroupsFromJson(ageGroupChannels) {\r\n        let out = {};\r\n        for (let key of Object.keys(ageGroupChannels)) {\r\n            out[key] = WonderDataImports_1.DataChannel.fromJson(ageGroupChannels[key]);\r\n        }\r\n        return out;\r\n    }\r\n    pullCdcData() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let result = yield fetch('https://data.cdc.gov/api/views/9bhg-hcku/rows.csv');\r\n            let text = yield result.text();\r\n            let lines = text.split('\\n');\r\n            let columnNames = lines[0];\r\n            lines.splice(0, 1);\r\n            let values = lines.mapOrDrop((line, index) => {\r\n                let raw = line.split(',');\r\n                if (raw[3] != 'By Month' || raw[7] != 'All Sexes') {\r\n                    return 'DROP';\r\n                }\r\n                let out = [];\r\n                for (let i = 0; i < raw.length; i++) {\r\n                    switch (i) {\r\n                        case 0:\r\n                        case 1:\r\n                        case 2:\r\n                            out.push(new Date(raw[i]).getTime());\r\n                            break;\r\n                        case 4:\r\n                        case 5:\r\n                        case 9:\r\n                        case 10:\r\n                        case 11:\r\n                        case 12:\r\n                        case 13:\r\n                        case 14:\r\n                        case 14:\r\n                            out.push(Number(raw[i]));\r\n                            break;\r\n                        case 8:\r\n                            out.push(raw[i].replace('Under 1 year', '< 1 year').replace('85 years and over', '85+ years'));\r\n                            break;\r\n                        default:\r\n                            out.push(raw[i]);\r\n                            break;\r\n                    }\r\n                }\r\n                while (out.length < RawRonaColumnsDefault.length) {\r\n                    out.push(RawRonaColumnsDefault[out.length - 1]);\r\n                }\r\n                return out;\r\n                // return [raw[0], raw[1], raw[2], raw[3], raw[4], raw[5], raw[6], raw[7], raw[8], raw[9], raw[10], raw[11], raw[6], raw[6], raw[6], raw[6]] as RawColumns\r\n            });\r\n            let output = { columns: columnNames, rows: values };\r\n            console.log(output);\r\n            window['lastCdc'] = output;\r\n        });\r\n    }\r\n    pullPopulation() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let ths = this;\r\n            let population = yield new WonderDataImports_1.WonderRequest().groupBy('Year').groupBy('AgeGroups').requestTable(true);\r\n            population.rows.forEach((row) => {\r\n                let time = new Date(row[0].isNumber() ? `${row[0]} 1 1` : row[0]).getTime();\r\n                let tree = ths.getPopulationForAge(row[1]);\r\n                tree.set(time, row[3]);\r\n            });\r\n            return this.populationByAge;\r\n        });\r\n    }\r\n    pullDeathsByCause() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let ths = this;\r\n            for (let year = 1999; year <= 2020; year++) {\r\n                for (let month = 1; month <= 12; month++) {\r\n                    let yearMonth = `${year}/${month <= 9 ? '0' + month : month}`;\r\n                    console.log(`Pulling deaths in ${yearMonth}`);\r\n                    let deaths = yield new WonderDataImports_1.WonderRequest().groupBy('CauseOfDeath').groupBy('AgeGroups').groupBy('Month').filterByYear([yearMonth]).requestTable(true);\r\n                    let count = 0;\r\n                    deaths.rows.forEach((row, index) => {\r\n                        let time = new Date(row[2].isNumber() ? (row[2].includes('/') ? `${row[2].split('/')[0]} ${row[2].split('/')[1]} 1` : `${row[2]} 1 1`) : row[2]).getTime();\r\n                        let tree = ths.getDeathsForCause(row[0]);\r\n                        tree.set(time, row[3]);\r\n                        count++;\r\n                        if (count > 1000) {\r\n                            count = 0;\r\n                            // console.log(`Added ${index} rows`)\r\n                        }\r\n                    });\r\n                    ths.notifyListeners();\r\n                }\r\n            }\r\n            return this.deathsByCause;\r\n        });\r\n    }\r\n    buildDataChannel(id, color, side) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (side == 'Server') {\r\n                let out = new WonderDataImports_1.DataChannelStreaming(id, color, (request) => __awaiter(this, void 0, void 0, function* () {\r\n                    let resp = yield fetch(`http://${window.location.hostname}:5001/gdsn3-22/us-central1/DataChannels?id=${id}`);\r\n                    return null;\r\n                }));\r\n            }\r\n            else {\r\n                let out = new WonderDataImports_1.DataChannelStreaming(id, color, (request) => __awaiter(this, void 0, void 0, function* () {\r\n                    let resp = yield fetch(`http://${window.location.hostname}:5001/gdsn3-22/us-central1/DataChannels?id=${id}`);\r\n                    return null;\r\n                }));\r\n            }\r\n        });\r\n    }\r\n}\r\nexports.Database = Database;\r\nfunction isFileError(obj) {\r\n    return typeof obj['error'] == 'string';\r\n}\r\nexports.isFileError = isFileError;\r\n//# sourceMappingURL=data:application/json;base64,","\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__exportStar(require(\"./Database\"), exports);\r\n__exportStar(require(\"../WonderData\"), exports);\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiV29uZGVyRGF0YUltcG9ydHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmNGdW5jdGlvbnMvY29tbW9uL1dvbmRlckRhdGEvV29uZGVyRGF0YUltcG9ydHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUEsNkNBQTBCO0FBQzFCLGdEQUE2QiJ9","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.FirebaseServiceAccountCreds = void 0;\r\nexports.FirebaseServiceAccountCreds = {\r\n    \"type\": \"service_account\",\r\n    \"project_id\": \"gdsn3-22\",\r\n    \"private_key_id\": \"2ea223b637cc0d3e99e46aac2477e46e55214ad1\",\r\n    \"private_key\": \"-----BEGIN PRIVATE KEY-----\\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCK6d1wHgIY3ifE\\nN0VfHcjdi48MaAAQjrG+y+32JZ6k+XBJyeiWZx7htQ5edhysa8E3dIC/aMciUdmO\\ndhCtmCV3+cja66iMwLrJKP6/AECx6UlUPIYG829VLb0hMJnNIvy3+Muw8/InCAGK\\n7NqH23bLPmDHah6RtLUS1+g8s6AeVHVrsj0s+euRj3uqDg6Ep0873bKwPPwOLSUn\\nZzUU6xOrx0A4wdggRtDLeuMoIi2p5PiMpwj+hmoWUxRL9RkKs/H9zzRi/Kv01jGm\\nrBR/9zqL/qHou+1gzdGL1Ek8mq0YAhcrmLKt2C8vxKj/M4xMxdUWZjgpOiqO7mYB\\nvWFKM0QXAgMBAAECggEADB3+QjYROhjBdezZpkReLcUWA0pccb/2DTiTV0dMzAMz\\nd5xJ0jod3X5XnzHE/91JC2H5i7jDYLZXDdrf9Y8x+tcqXWj1A4zEPkvPJ4YJc/tv\\neWOWJVZoExFcUArXP6eaTR9B//t810lsKQbOwSRe+7eYkDcs13TgiUuVZxtxZMkZ\\nqh0dHWDv8iQMD3G8eMboW7yo8+HmsBB25iEIRDdHwsXcfA1BBNQOstRr3/Vfv2J9\\nOeGI3Lxu3InBZ5t+lYPtiUQMTWJvObmcoAsL4qMtzP2iO09LShGoM1Ux2RnyYXmp\\n3OB6wApv/gIOUk28g2jTqUEs1QH7Wl2lnnTFzndnsQKBgQDAwB9IwgGynZ+Bcks+\\nnXFnxxI8f6OM3YwcJEbwPlRzJ+YeGBD5rwRTr9fidGXA9Z9vJ5mDsGZAqWxS+4ot\\nfzLTn+WAfFDKs9YRno5GZiLIgXk9oXC/NkaCWpb6sCYN0CoyUEbAAGPUZDGYRY+o\\nk36wIYDlLoe0p9Fvt2Nh0eDtIwKBgQC4fzSmYv8Hld33X+TozveEhTLn0hKOqGmN\\ngjBQETZoaqtmK1xNvDw17PRLSnGnJ5aA/TcxnJWREM2meU66qH/v49uKlA/GUXjt\\n86awnnv3wCZPm2Jo8qEAc8gixOOktctihNEsbBSNDL59DM+9GcvbsNIQdLRqLzI4\\nDf+ls9s+fQKBgBGNbUvi3uS1FeFj1xZMoBcjObXoqawaQLgPVaZrBqW17G6xIlqa\\nZXp5eN9WWi3IMEye/ovPdIBO7V5hKaQbATXkSbH5oCHVXpkcJzih9Gjt4WyLVwkS\\nmDkmprkNcWmwmycZyFeTsYOV3C5Rp1NimxbO9j3ojtMUtS3HNXWi9yihAoGATaIx\\nTGZRvCZi7Wnrj88vNhM6dXPfHSpeqA4FOFvV0iA4mVhbkdZIW8Smk1vy8Qxmd0aV\\nyAmEojM45fkbmM24cAAobGqbLK8xvKcPGDjIH1s6g7r1sQWPm/ocWA0TYUaiG4WZ\\n4yBjkWqwaTxP2dmV/46rBgOluxy6+/1f+qDw+50CgYEAr3r+76Dqc9ng/EzNra+/\\nG79TU1bpLjb2qYT+p01XcAVCw2MocW3m8NaVtdmmkk751Yuy0JU+VsD1olYdTybY\\n0BK/rbEIZlv8ZBA+Iwn+ZHcN5H+MHojfz/Zs+Lo/1fP4ZV6d4i3EEGho89+odSFq\\nTozoL+2+GobFMqBrzG1Ogvk=\\n-----END PRIVATE KEY-----\\n\",\r\n    \"client_email\": \"firebase-adminsdk-816hb@gdsn3-22.iam.gserviceaccount.com\",\r\n    \"client_id\": \"109919458213611540968\",\r\n    \"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\",\r\n    \"token_uri\": \"https://oauth2.googleapis.com/token\",\r\n    \"auth_provider_x509_cert_url\": \"https://www.googleapis.com/oauth2/v1/certs\",\r\n    \"client_x509_cert_url\": \"https://www.googleapis.com/robot/v1/metadata/x509/firebase-adminsdk-816hb%40gdsn3-22.iam.gserviceaccount.com\"\r\n};\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlyZWJhc2VBZG1pbkNyZWRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjRnVuY3Rpb25zL2ZpcmViYXNlQWRtaW5DcmVkcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBYSxRQUFBLDJCQUEyQixHQUFHO0lBQ3pDLE1BQU0sRUFBRSxpQkFBaUI7SUFDekIsWUFBWSxFQUFFLFVBQVU7SUFDeEIsZ0JBQWdCLEVBQUUsMENBQTBDO0lBQzVELGFBQWEsRUFBRSxzc0RBQXNzRDtJQUNydEQsY0FBYyxFQUFFLDBEQUEwRDtJQUMxRSxXQUFXLEVBQUUsdUJBQXVCO0lBQ3BDLFVBQVUsRUFBRSwyQ0FBMkM7SUFDdkQsV0FBVyxFQUFFLHFDQUFxQztJQUNsRCw2QkFBNkIsRUFBRSw0Q0FBNEM7SUFDM0Usc0JBQXNCLEVBQUUsOEdBQThHO0NBQ3ZJLENBQUEifQ==","module.exports = require(\"bristolboard\");","module.exports = require(\"child_process\");","module.exports = require(\"crypto\");","module.exports = require(\"firebase-admin/app\");","module.exports = require(\"firebase-admin/storage\");","module.exports = require(\"firebase-functions\");","module.exports = require(\"fs\");","module.exports = require(\"node-fetch\");","module.exports = require(\"path\");","module.exports = require(\"sorted-btree\");","module.exports = require(\"xml2js\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./srcFunctions/WPFunctions.ts\");\n",""],"names":[],"sourceRoot":""}