{"version":3,"file":"index.js","mappings":";;;;;;;;;;AAAa;AACb;AACA,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,iBAAiB,GAAG,gBAAgB,GAAG,mBAAmB,GAAG,gBAAgB,GAAG,eAAe,GAAG,gBAAgB;AAClH,kBAAkB,mBAAO,CAAC,8CAAoB;AAC9C,qBAAqB,mBAAO,CAAC,8BAAY;AACzC,WAAW,mBAAO,CAAC,cAAI;AACvB,aAAa,mBAAO,CAAC,kBAAM;AAC3B,mBAAO,CAAC,kEAAsB;AAC9B,qBAAqB,mBAAO,CAAC,gEAAqB;AAClD,wBAAwB,mBAAO,CAAC,oCAAe;AAC/C,eAAe,mBAAO,CAAC,sBAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,8BAA8B,QAAQ;AAC/D;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL,CAAC;AACD,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,oDAAoD,SAAS;AAC7D;AACA;AACA,KAAK;AACL;AACA;AACA,qDAAqD,YAAY;AACjE;AACA;AACA;AACA;AACA,CAAC;AACD,eAAe;AACf;AACA;AACA,CAAC;AACD,gBAAgB;AAChB;AACA;AACA,iCAAiC,WAAW;AAC5C;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,qCAAqC,UAAU;AAC/C;AACA;AACA,mBAAmB;AACnB;AACA,+BAA+B,UAAU;AACzC;AACA,wDAAwD,SAAS;AACjE;AACA,+CAA+C,SAAS;AACxD;AACA;AACA;AACA;AACA;AACA,6CAA6C,UAAU;AACvD;AACA;AACA,6BAA6B,UAAU;AACvC,mBAAmB,kFAAkF;AACrG;AACA,KAAK;AACL;AACA,mCAAmC,WAAW;AAC9C;AACA;AACA;AACA;AACA,CAAC;AACD,gBAAgB;AAChB;AACA;AACA;AACA;AACA,CAAC;AACD,iBAAiB;AACjB;AACA;AACA;AACA,sCAAsC,6BAA6B;AACnE;AACA;AACA;AACA;AACA,sCAAsC,mCAAmC;AACzE;AACA;AACA;AACA,kCAAkC,kCAAkC;AACpE,KAAK;AACL,CAAC;AACD,2CAA2C;;;;;;;;;;ACtI9B;AACb;AACA,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,0BAA0B,GAAG,iBAAiB,GAAG,iBAAiB,GAAG,oBAAoB,GAAG,eAAe,GAAG,yBAAyB;AACvI,eAAe,uDAA6B;AAC5C;AACA;AACA,wBAAwB,iBAAiB;AACzC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,gBAAgB;AACpC;AACA;AACA,uCAAuC,EAAE;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,oBAAoB,gBAAgB;AACpC,wBAAwB,mBAAmB;AAC3C;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,4BAA4B,IAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,0BAA0B;AAC1B,2CAA2C;;;;;;;;;;AC1I9B;AACb;AACA,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,4BAA4B,GAAG,mBAAmB,GAAG,gBAAgB,GAAG,sBAAsB,GAAG,4BAA4B,GAAG,qBAAqB,GAAG,gBAAgB,GAAG,uBAAuB,GAAG,gCAAgC,GAAG,6BAA6B,GAAG,+BAA+B,GAAG,gCAAgC,GAAG,iCAAiC,GAAG,gCAAgC,GAAG,wBAAwB,GAAG,6BAA6B,GAAG,4BAA4B,GAAG,yBAAyB,GAAG,iBAAiB,GAAG,mBAAmB,GAAG,kBAAkB,GAAG,kBAAkB;AAC3lB;AACA,IAAI,IAAI;AACR,mBAAmB,mBAAO,CAAC,8BAAY;AACvC;AACA,uBAAuB,mBAAO,CAAC,kCAAc;AAC7C,uBAAuB,mBAAO,CAAC,kCAAc;AAC7C,sBAAsB,mBAAO,CAAC,2DAAe;AAC7C;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sCAAsC,kBAAkB,KAAK;AAC9D;AACA;AACA,wBAAwB,UAAU;AAClC,oBAAoB,EAAE;AACtB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oCAAoC,iBAAiB,KAAK;AAC3D;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,CAAC,4DAA4D,6BAA6B,KAAK;AAC/F;AACA;AACA;AACA;AACA,CAAC,kDAAkD,wBAAwB,KAAK;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kEAAkE,gCAAgC,KAAK;AACxG;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oEAAoE,iCAAiC,KAAK;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kEAAkE,gCAAgC,KAAK;AACxG;AACA;AACA;AACA;AACA,CAAC,gEAAgE,+BAA+B,KAAK;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4DAA4D,6BAA6B,KAAK;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kEAAkE,gCAAgC,KAAK;AACxG,uBAAuB;AACvB;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,YAAY,OAAO,IAAI;AAC3D,8DAA8D,QAAQ,aAAa,QAAQ;AAC3F,8DAA8D,QAAQ,aAAa,QAAQ;AAC3F,8DAA8D,QAAQ,aAAa,QAAQ;AAC3F;AACA;AACA;AACA;AACA,gBAAgB;AAChsCAAsC;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,gCAAgC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E,GAAG,GAAG,EAAE;AACnF;AACA;AACA;AACA;AACA;AACA,yDAAyD,uBAAuB;AAChF;AACA,iCAAiC,sBAAsB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,KAAK,QAAQ,KAAK;AAClD;AACA,gCAAgC,KAAK,QAAQ,KAAK;AAClD;AACA,gCAAgC,KAAK,QAAQ,KAAK;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,OAAO;AAC9D;AACA,oDAAoD,OAAO;AAC3D;AACA;AACA,aAAa;AACb,6CAA6C,KAAK,GAAG,cAAc,OAAO,wBAAwB;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,2BAA2B,QAAQ;AACnC,yBAAyB,EAAE;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,iDAAiD,IAAI;AACrD;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,uCAAuC,gDAAgD,SAAS,GAAG,mBAAmB,QAAQ,sBAAsB,KAAK;AACzJ;AACA,sCAAsC,UAAU,GAAG,mBAAmB;AACtE,uCAAuC,SAAS,SAAS,oDAAoD,IAAI,kCAAkC;AACnJ,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,cAAc;AACnD;AACA;AACA;AACA,sBAAsB,cAAc;AACpC,4DAA4D,kBAAkB;AAC9E;AACA;AACA,2BAA2B,kFAAkF;AAC7G;AACA,aAAa;AACb;AACA;AACA;AACA,gFAAgF;AAChF;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,4BAA4B;AACxD,4CAA4C,sBAAsB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,KAAK,EAAE,qBAAqB;AAC5E;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,mBAAmB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,uBAAuB;AACvB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA,4BAA4B,mBAAmB;AAC/C,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,YAAY,cAAc,gBAAgB;AAC3F;AACA;AACA;AACA;AACA,iDAAiD,YAAY,eAAe,gBAAgB;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gGAAgG,GAAG;AACnG;AACA;AACA;AACA,+EAA+E,UAAU;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,SAAS,GAAG,SAAS;AAClF,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,qCAAqC,4BAA4B,QAAQ;AAC5G;AACA;AACA;AACA,gEAAgE,iGAAiG;AACjK;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,QAAQ;AAC9D;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,gBAAgB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,2BAA2B;AAC3B;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,QAAQ;AACnE;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,kCAAkC,cAAc;AAChD,oCAAoC,aAAa;AACjD,uCAAuC,KAAK,GAAG,iCAAiC;AAChF,qDAAqD,UAAU;AAC/D;AACA;AACA;AACA,2FAA2F,sBAAsB,EAAE,sBAAsB,QAAQ,QAAQ;AACzJ;AACA;AACA;AACA;AACA;AACA,oDAAoD,OAAO;AAC3D;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,qDAAqD,yBAAyB,6CAA6C,GAAG;AAC9H;AACA,iBAAiB;AACjB;AACA;AACA;AACA,qDAAqD,yBAAyB,6CAA6C,GAAG;AAC9H;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,KAAK;AACjE,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,KAAK;AAChE,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,KAAK;AAC7D,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,2CAA2C;;;;;;;;;;ACr/B3C;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;UEtBA;UACA;UACA;UACA","sources":["webpack://gdsn3/./srcFunctions/WPFunctions.ts","webpack://gdsn3/./srcFunctions/common/FBF_Helpers.ts","webpack://gdsn3/./srcFunctions/common/WonderData.ts","webpack://gdsn3/external \"bristolboard\"","webpack://gdsn3/external \"child_process\"","webpack://gdsn3/external \"crypto\"","webpack://gdsn3/external \"firebase-functions\"","webpack://gdsn3/external \"fs\"","webpack://gdsn3/external \"node-fetch\"","webpack://gdsn3/external \"path\"","webpack://gdsn3/external \"sorted-btree\"","webpack://gdsn3/external \"xml2js\"","webpack://gdsn3/webpack/bootstrap","webpack://gdsn3/webpack/before-startup","webpack://gdsn3/webpack/startup","webpack://gdsn3/webpack/after-startup"],"sourcesContent":["\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.HashTypes = exports.Diseases = exports.WonderProxy = exports.RonaTest = exports.ReqTest = exports.listener = void 0;\r\nconst functions = require(\"firebase-functions\");\r\nconst node_fetch_1 = require(\"node-fetch\");\r\nconst fs = require(\"fs\");\r\nconst path = require(\"path\");\r\nrequire(\"./common/FBF_Helpers\");\r\nconst WonderData_1 = require(\"./common/WonderData\");\r\nconst child_process_1 = require(\"child_process\");\r\nconst crypto = require(\"crypto\");\r\n// // Start writing Firebase Functions\r\n// // https://firebase.google.com/docs/functions/typescript\r\n//\r\nconsole.log('test');\r\nlet database = new WonderData_1.Database({\r\n    readFile(filePath) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let absPath = path.resolve(__dirname, `../data/`, filePath);\r\n            if (!fs.existsSync(absPath)) {\r\n                return { error: `File doesn't exist: ${absPath}` };\r\n            }\r\n            let data = yield fs.promises.readFile(absPath);\r\n            return JSON.parse(data.toString());\r\n        });\r\n    },\r\n    writeFile(filePath, data) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let absPath = path.resolve(__dirname, `../data/`, filePath);\r\n            yield fs.promises.writeFile(absPath, typeof data == 'string' ? data : JSON.stringify(data));\r\n            return 'success';\r\n        });\r\n    },\r\n});\r\nexports.listener = functions.https.onRequest((req, res) => __awaiter(void 0, void 0, void 0, function* () {\r\n    res.setHeader('Content-Type', 'application/xml');\r\n    let exampleParams = WonderData_1.ExampleRequest.replace('</request-parameters>', '').replace('<request-parameters>', '').replaceAll('<value/>', '<value></value>').replaceAll('<parameter>', '').replaceAll('</name>', '').replaceAll('</value>', '').replaceAll('<name>', '').split('</parameter>').map(str => {\r\n        let tmp = str.split('<value>');\r\n        let name = tmp[0];\r\n        let rest = tmp.slice(1);\r\n        return [name, rest];\r\n    });\r\n    let reqTestParams = new WonderData_1.WonderRequest().groupBy('Year').groupBy('Race').addParam('F_D76.V25', WonderData_1.WonderQueryParam_Util.All).toParamMap();\r\n    let requestParams = new Map();\r\n    let inconsistencies = [];\r\n    exampleParams.forEach((value) => {\r\n        if (!reqTestParams.has(value[0])) {\r\n            inconsistencies.push(`Request missing ${value[0]}`);\r\n        }\r\n        requestParams.set(value[0], value[1]);\r\n    });\r\n    for (let exParamName in reqTestParams.keys()) {\r\n        if (!requestParams.has(exParamName)) {\r\n            inconsistencies.push(`Examples missing ${exParamName}`);\r\n        }\r\n    }\r\n    res.setHeader('Content-Type', 'application/json');\r\n    res.send(JSON.stringify(inconsistencies));\r\n}));\r\nexports.ReqTest = functions.https.onRequest((req, res) => __awaiter(void 0, void 0, void 0, function* () {\r\n    res.setHeader('Content-Type', 'application/xml');\r\n    res.send(new WonderData_1.WonderRequest().groupBy('Year').addParam('M_1', 'D76.M1').toString());\r\n}));\r\nexports.RonaTest = functions.https.onRequest((req, res) => __awaiter(void 0, void 0, void 0, function* () {\r\n    let data = yield new WonderData_1.WonderRequest().groupBy('Year').groupBy('AgeGroups').filterByYear(['1999', '2001']).request();\r\n    let exportPath = path.resolve(__dirname, '../data/exampleResponse.xml');\r\n    console.log(`saving to file${exportPath}`);\r\n    fs.writeFileSync(exportPath, JSON.stringify(data));\r\n    console.log('saved');\r\n    res.setHeader('Content-Type', 'application/json');\r\n    res.setHeader('Access-Control-Allow-Origin', '*');\r\n    res.send(data);\r\n}));\r\nfunction requestToFileName(fetchBody) {\r\n    console.log(`Req to file name\\n${fetchBody}`);\r\n    return crypto.createHash('md5').update(fetchBody).digest(\"hex\");\r\n}\r\nexports.WonderProxy = functions.https.onRequest((req, res) => __awaiter(void 0, void 0, void 0, function* () {\r\n    let fetchBody = req.body['request_xml'];\r\n    console.log(`Fetch body: ${fetchBody}`);\r\n    let fileName = requestToFileName(fetchBody);\r\n    let exportPath = path.resolve(__dirname, `../data/${fileName}.xml`);\r\n    if (fs.existsSync(exportPath)) {\r\n        console.log(`Using cache for request ${fileName}`);\r\n        res.setHeader('Content-Type', 'application/xml');\r\n        res.setHeader('Access-Control-Allow-Origin', '*');\r\n        res.sendFile(exportPath);\r\n        return;\r\n    }\r\n    console.log(`Sending query to wonder:\\n${fetchBody}`);\r\n    let result = yield (0, node_fetch_1.default)(`https://wonder.cdc.gov/controller/datarequest/D76`, {\r\n        method: 'POST',\r\n        body: `request_xml=${fetchBody}`,\r\n        headers: { 'Content-Type': 'application/x-www-form-urlencoded', 'Accept': 'application/xml' },\r\n        // mode: 'no-cors'\r\n    });\r\n    let resultText = yield result.text();\r\n    console.log(`saving to file: ${exportPath}`);\r\n    fs.writeFileSync(exportPath, resultText);\r\n    res.setHeader('Content-Type', 'application/xml');\r\n    res.setHeader('Access-Control-Allow-Origin', '*');\r\n    res.send(resultText);\r\n}));\r\nexports.Diseases = functions.https.onRequest((req, resp) => __awaiter(void 0, void 0, void 0, function* () {\r\n    let codes = yield database.pullIcdCodes(10);\r\n    resp.setHeader('Content-Type', 'application/json');\r\n    resp.setHeader('Access-Control-Allow-Origin', '*');\r\n    resp.send(JSON.stringify(codes));\r\n}));\r\nexports.HashTypes = functions.https.onRequest((req, res) => __awaiter(void 0, void 0, void 0, function* () {\r\n    (0, child_process_1.exec)('openssl list -digest-algorithms', (err, stdout, stderr) => {\r\n        if (err) {\r\n            console.log('err', err);\r\n            res.send(JSON.stringify({ status: 'Error', error: err }));\r\n            return;\r\n        }\r\n        if (stderr) {\r\n            console.log('stderr', stderr);\r\n            res.send(JSON.stringify({ status: 'STDError', error: stderr }));\r\n            return;\r\n        }\r\n        console.log('success', stdout);\r\n        res.send(JSON.stringify({ status: 'Success', value: stdout }));\r\n    });\r\n}));\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiV1BGdW5jdGlvbnMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmNGdW5jdGlvbnMvV1BGdW5jdGlvbnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUEsZ0RBQWdEO0FBQ2hELDJDQUE4QjtBQUU5Qix5QkFBd0I7QUFDeEIsNkJBQTRCO0FBQzVCLGdDQUE2QjtBQUM3QixvREFBOEc7QUFDOUcsaURBQW9DO0FBQ3BDLGlDQUFnQztBQUVoQyxzQ0FBc0M7QUFDdEMsMkRBQTJEO0FBQzNELEVBQUU7QUFDRixPQUFPLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFBO0FBRW5CLElBQUksUUFBUSxHQUFHLElBQUkscUJBQVEsQ0FBQztJQUNwQixRQUFRLENBQUksUUFBUTs7WUFDeEIsSUFBSSxPQUFPLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxTQUFTLEVBQUUsVUFBVSxFQUFFLFFBQVEsQ0FBQyxDQUFDO1lBQzVELElBQUksQ0FBQyxFQUFFLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxFQUFFO2dCQUMzQixPQUFPLEVBQUUsS0FBSyxFQUFFLHVCQUF1QixPQUFPLEVBQUUsRUFBRSxDQUFBO2FBQ25EO1lBQ0QsSUFBSSxJQUFJLEdBQUcsTUFBTSxFQUFFLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsQ0FBQTtZQUM5QyxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUE7UUFDcEMsQ0FBQztLQUFBO0lBQ0ssU0FBUyxDQUFJLFFBQWdCLEVBQUUsSUFBZ0I7O1lBQ25ELElBQUksT0FBTyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxFQUFFLFVBQVUsRUFBRSxRQUFRLENBQUMsQ0FBQztZQUM3RCxNQUFNLEVBQUUsQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLE9BQU8sRUFBRSxPQUFPLElBQUksSUFBSSxRQUFRLENBQUMsQ0FBQyxDQUFD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LENBQUMsRUFBRSxNQUFNLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDLENBQUE7WUFDekQsT0FBTztTQUNSO1FBQ0QsSUFBSSxNQUFNLEVBQUU7WUFDVixPQUFPLENBQUMsR0FBRyxDQUFDLFFBQVEsRUFBRSxNQUFNLENBQUMsQ0FBQTtZQUM3QixHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsRUFBRSxNQUFNLEVBQUUsVUFBVSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsQ0FBQyxDQUFDLENBQUE7WUFDL0QsT0FBTTtTQUNQO1FBQ0QsT0FBTyxDQUFDLEdBQUcsQ0FBQyxTQUFTLEVBQUUsTUFBTSxDQUFDLENBQUE7UUFDOUIsR0FBRyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLEVBQUUsTUFBTSxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLENBQUMsQ0FBQyxDQUFBO0lBQ2hFLENBQUMsQ0FBQyxDQUFBO0FBQ0osQ0FBQyxDQUFBLENBQUMsQ0FBQSJ9","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.replaceAllInString = exports.isAllTrue = exports.XmlToJson = exports.concactinate = exports.flatten = exports.ensureFBF_Helpers = void 0;\r\nconst Xml2JS = require('xml2js').parseString;\r\nArray.prototype.forEachAsync = function (onEach) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        for (let i = 0; i < this.length; i++) {\r\n            if ((yield onEach(this[i], i, this)) == 'BREAK') {\r\n                break;\r\n            }\r\n        }\r\n    });\r\n};\r\nMap.prototype.keysAsArray = function () {\r\n    let ths = this;\r\n    let out = [];\r\n    for (let key of ths.keys()) {\r\n        out.push(key);\r\n    }\r\n    return out;\r\n};\r\nArray.prototype.mapOrDrop = function (shouldKeep) {\r\n    let ths = this;\r\n    let out = [];\r\n    for (let i = 0; i < ths.length; i++) {\r\n        let fresh = shouldKeep(this[i], i);\r\n        if (fresh == 'DROP') {\r\n            // console.log(`Dropping ${i}`,this[i])\r\n        }\r\n        else {\r\n            out.push(fresh);\r\n        }\r\n    }\r\n    return out;\r\n};\r\nMap.prototype.getWithDefault = function (key, defaultValue) {\r\n    let ths = this;\r\n    if (!ths.has(key)) {\r\n        ths.set(key, defaultValue(key));\r\n    }\r\n    return ths.get(key);\r\n};\r\nArray.prototype.pushAll = function (stuff) {\r\n    if (Array.isArray(stuff)) {\r\n        for (let item of stuff) {\r\n            this.push(item);\r\n        }\r\n    }\r\n    else {\r\n        this.push(stuff);\r\n    }\r\n};\r\nString.prototype.isBoolean = function () {\r\n    return this.toLowerCase() == 'true' || this.toLowerCase() == 'false';\r\n};\r\nString.prototype.isNumber = function () {\r\n    return !Number.isNaN(Number(this));\r\n};\r\nif (typeof Map.prototype.toArray == 'undefined') {\r\n    console.log(`Shimming Map.toArray`);\r\n    Map.prototype.toArray = function () {\r\n        let ths = this;\r\n        let out = [];\r\n        for (let key of ths.keys()) {\r\n            out.push([key, ths.get(key)]);\r\n        }\r\n        return out;\r\n    };\r\n}\r\nfunction ensureFBF_Helpers() {\r\n    console.log();\r\n}\r\nexports.ensureFBF_Helpers = ensureFBF_Helpers;\r\nfunction flatten(arr) {\r\n    let out = [];\r\n    for (let i = 0; i < arr.length; i++) {\r\n        for (let j = 0; j < arr[i].length; j++) {\r\n            out.push(arr[i][j]);\r\n        }\r\n    }\r\n    return out;\r\n}\r\nexports.flatten = flatten;\r\nfunction concactinate(a, b) {\r\n    let out = [];\r\n    a.forEach((aa) => {\r\n        out.push(aa);\r\n    });\r\n    b.forEach((bb) => {\r\n        out.push(bb);\r\n    });\r\n    return out;\r\n}\r\nexports.concactinate = concactinate;\r\nfunction XmlToJson(xml) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        return new Promise((acc, rej) => {\r\n            Xml2JS(`<data>${xml}</data>`, (err, value) => {\r\n                if (err) {\r\n                    rej(err);\r\n                }\r\n                else {\r\n                    // console.log('cleaning',value)\r\n                    // let result = cleanXmlToJson(value) as XmlElement;\r\n                    acc(value.data);\r\n                }\r\n            });\r\n        });\r\n    });\r\n}\r\nexports.XmlToJson = XmlToJson;\r\nif (typeof String.prototype.replaceAll == 'undefined') {\r\n    String.prototype.replaceAll = function (a, b) {\r\n        return this.split(a).join(b);\r\n    };\r\n}\r\nfunction isAllTrue(bools) {\r\n    for (let i = 0; i < bools.length; i++) {\r\n        if (bools[i]) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexports.isAllTrue = isAllTrue;\r\nfunction replaceAllInString(target, a, b) {\r\n    return target.split(a).join(b);\r\n}\r\nexports.replaceAllInString = replaceAllInString;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRkJGX0hlbHBlcnMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmNGdW5jdGlvbnMvY29tbW9uL0ZCRl9IZWxwZXJzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUVBLE1BQU0sTUFBTSxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQyxXQUFXLENBQUM7QUF1QjdDLEtBQUssQ0FBQyxTQUFTLENBQUMsWUFBWSxHQUFHLFVBQW1CLE1BQTBFOztRQUN4SCxLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUNsQyxJQUFHLENBQUEsTUFBTSxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxJQUFJLENBQUMsS0FBSSxPQUFPLEVBQUM7Z0JBQ3pDLE1BQU07YUFDVDtTQUNKO0lBQ0wsQ0FBQztDQUFBLENBQUE7QUFDRCxHQUFHLENBQUMsU0FBUyxDQUFDLFdBQVcsR0FBRztJQUN4QixJQUFJLEdBQUcsR0FBRyxJQUFpQixDQUFBO0lBQzNCLElBQUksR0FBRyxHQUFRLEVBQUUsQ0FBQTtJQUNqQixLQUFLLElBQUksR0FBRyxJQUFJLEdBQUcsQ0FBQyxJQUFJLEVBQUUsRUFBRTtRQUN4QixHQUFHLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFBO0tBQ2hCO0lBQ0QsT0FBTyxHQUFHLENBQUM7QUFDZixDQUFDLENBQUE7QUFDRCxLQUFLLENBQUMsU0FBUyxDQUFDLFNBQVMsR0FBRyxVQUFnQixVQUFxRDtJQUM3RixJQUFJLEdBQUcsR0FBRyxJQUFnQixDQUFBO0lBQzFCLElBQUksR0FBRyxHQUFRLEVBQUUsQ0FBQTtJQUNqQixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsR0FBRyxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUNqQyxJQUFJLEtBQUss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","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.DataChannelStreaming = exports.DataChannel = exports.Database = exports.ExampleRequest = exports.ConsumableLinkedList = exports.WonderRequest = exports.DeWonder = exports.AllWonderParams = exports.WonderQueryParam_GroupBy = exports.WonderQueryParam_Race = exports.WonderQueryParam_Gender = exports.WonderQueryParam_Measure = exports.WonderQueryParam_AgeGroup = exports.WonderQueryParam_Include = exports.WonderQueryParam = exports.WonderQueryParam_Util = exports.parseYearMonthString = exports.isYearMonthString = exports.MonthEnum = exports.YearStrings = exports.MonthNames = exports.isWQP_None = void 0;\r\n// import * as XMLParser from 'xml2js'\r\nif (true) {\r\n    global.fetch = require('node-fetch');\r\n}\r\nconst bristolboard_1 = require(\"bristolboard\");\r\nconst sorted_btree_1 = require(\"sorted-btree\");\r\nconst FBF_Helpers_1 = require(\"./FBF_Helpers\");\r\n// export type WonderQueryParamName = (keyof typeof WonderQueryParam) \r\nfunction isWQP_None(param) {\r\n    return (param == 'None') || (param == WonderQueryParam_Util.None);\r\n}\r\nexports.isWQP_None = isWQP_None;\r\nvar MonthNames;\r\n(function (MonthNames) {\r\n    MonthNames[MonthNames[\"Jan\"] = 1] = \"Jan\";\r\n    MonthNames[MonthNames[\"Feb\"] = 2] = \"Feb\";\r\n    MonthNames[MonthNames[\"Mar\"] = 3] = \"Mar\";\r\n    MonthNames[MonthNames[\"Apr\"] = 4] = \"Apr\";\r\n    MonthNames[MonthNames[\"May\"] = 5] = \"May\";\r\n    MonthNames[MonthNames[\"Jun\"] = 6] = \"Jun\";\r\n    MonthNames[MonthNames[\"Jul\"] = 7] = \"Jul\";\r\n    MonthNames[MonthNames[\"Aug\"] = 8] = \"Aug\";\r\n    MonthNames[MonthNames[\"Sep\"] = 9] = \"Sep\";\r\n    MonthNames[MonthNames[\"Oct\"] = 10] = \"Oct\";\r\n    MonthNames[MonthNames[\"Nov\"] = 11] = \"Nov\";\r\n    MonthNames[MonthNames[\"Dec\"] = 12] = \"Dec\";\r\n})(MonthNames = exports.MonthNames || (exports.MonthNames = {}));\r\nfunction YearStrings(start = 1999, end = 2020) {\r\n    let out = [];\r\n    for (let i = start; i <= end; i++) {\r\n        out.push(`${i}`);\r\n    }\r\n    return out;\r\n}\r\nexports.YearStrings = YearStrings;\r\nvar MonthEnum;\r\n(function (MonthEnum) {\r\n    MonthEnum[MonthEnum[\"January\"] = 0] = \"January\";\r\n    MonthEnum[MonthEnum[\"February\"] = 1] = \"February\";\r\n    MonthEnum[MonthEnum[\"March\"] = 2] = \"March\";\r\n    MonthEnum[MonthEnum[\"April\"] = 3] = \"April\";\r\n    MonthEnum[MonthEnum[\"May\"] = 4] = \"May\";\r\n    MonthEnum[MonthEnum[\"June\"] = 5] = \"June\";\r\n    MonthEnum[MonthEnum[\"July\"] = 6] = \"July\";\r\n    MonthEnum[MonthEnum[\"August\"] = 7] = \"August\";\r\n    MonthEnum[MonthEnum[\"September\"] = 8] = \"September\";\r\n    MonthEnum[MonthEnum[\"October\"] = 9] = \"October\";\r\n    MonthEnum[MonthEnum[\"November\"] = 10] = \"November\";\r\n    MonthEnum[MonthEnum[\"December\"] = 11] = \"December\";\r\n})(MonthEnum = exports.MonthEnum || (exports.MonthEnum = {}));\r\nfunction isYearMonthString(str) {\r\n    return str.split('-').length == 2;\r\n}\r\nexports.isYearMonthString = isYearMonthString;\r\nfunction parseYearMonthString(str) {\r\n    let parts = str.split('-');\r\n    switch (parts.length) {\r\n        case 0:\r\n            return null;\r\n        case 1:\r\n            return [parts[0], -1];\r\n        case 2:\r\n            return [parts[0], MonthEnum[parts[1]]];\r\n    }\r\n}\r\nexports.parseYearMonthString = parseYearMonthString;\r\nvar WonderQueryParam_Util;\r\n(function (WonderQueryParam_Util) {\r\n    WonderQueryParam_Util[\"None\"] = \"*None*\";\r\n    WonderQueryParam_Util[\"All\"] = \"*All*\";\r\n})(WonderQueryParam_Util = exports.WonderQueryParam_Util || (exports.WonderQueryParam_Util = {}));\r\nvar WonderQueryParam;\r\n(function (WonderQueryParam) {\r\n    //FIV\r\n    WonderQueryParam[\"YearAndMonth\"] = \"D76.V1\";\r\n})(WonderQueryParam = exports.WonderQueryParam || (exports.WonderQueryParam = {}));\r\nvar WonderQueryParam_Include;\r\n(function (WonderQueryParam_Include) {\r\n    WonderQueryParam_Include[\"YearAndMonth\"] = \"D76.V1\";\r\n    WonderQueryParam_Include[\"CensusRegions\"] = \"D76.V10\";\r\n    WonderQueryParam_Include[\"ICD10Codes\"] = \"D76.V2\";\r\n    WonderQueryParam_Include[\"HHSRegions\"] = \"D76.V27\";\r\n    WonderQueryParam_Include[\"StatesAndCounties\"] = \"D76.V9\";\r\n})(WonderQueryParam_Include = exports.WonderQueryParam_Include || (exports.WonderQueryParam_Include = {}));\r\nvar WonderQueryParam_AgeGroup;\r\n(function (WonderQueryParam_AgeGroup) {\r\n    WonderQueryParam_AgeGroup[\"TenYear\"] = \"D76.V5\";\r\n    WonderQueryParam_AgeGroup[\"FiveYear\"] = \"D76.V51\";\r\n    WonderQueryParam_AgeGroup[\"SingleYear\"] = \"D76.V52\";\r\n    WonderQueryParam_AgeGroup[\"Infant\"] = \"D76.V6\";\r\n})(WonderQueryParam_AgeGroup = exports.WonderQueryParam_AgeGroup || (exports.WonderQueryParam_AgeGroup = {}));\r\nvar WonderQueryParam_Measure;\r\n(function (WonderQueryParam_Measure) {\r\n    WonderQueryParam_Measure[\"Deaths\"] = \"D76.M1\";\r\n    WonderQueryParam_Measure[\"Population\"] = \"D76.M2\";\r\n    WonderQueryParam_Measure[\"CrudeRate\"] = \"D76.M3\";\r\n    WonderQueryParam_Measure[\"CrudeRateStandardError\"] = \"D76.M31\";\r\n    WonderQueryParam_Measure[\"CrudeRate95ConfidenceInterval\"] = \"D76.M32\";\r\n    WonderQueryParam_Measure[\"AgeAdjustedRate\"] = \"D76.M4\";\r\n    WonderQueryParam_Measure[\"AgeAdjustedRateStandardError\"] = \"D76.M41\";\r\n    WonderQueryParam_Measure[\"AgeAdjustedRateConfidenceInterval\"] = \"D76.M42\";\r\n    WonderQueryParam_Measure[\"PercentOfTotalDeaths\"] = \"D76.M9\";\r\n})(WonderQueryParam_Measure = exports.WonderQueryParam_Measure || (exports.WonderQueryParam_Measure = {}));\r\nvar WonderQueryParam_Gender;\r\n(function (WonderQueryParam_Gender) {\r\n    WonderQueryParam_Gender[\"Male\"] = \"M\";\r\n    WonderQueryParam_Gender[\"Female\"] = \"F\";\r\n})(WonderQueryParam_Gender = exports.WonderQueryParam_Gender || (exports.WonderQueryParam_Gender = {}));\r\nvar WonderQueryParam_Race;\r\n(function (WonderQueryParam_Race) {\r\n    WonderQueryParam_Race[\"HispanicOrLatino\"] = \"2135-2\";\r\n    WonderQueryParam_Race[\"NotHispanicOrLatino\"] = \"2186-2\";\r\n    WonderQueryParam_Race[\"NotStated\"] = \"NS\";\r\n    WonderQueryParam_Race[\"AmericanIndianOrAlaskaNative\"] = \"1002-5\";\r\n    WonderQueryParam_Race[\"AsianOrPacificIslander\"] = \"A-PI\";\r\n    WonderQueryParam_Race[\"Black\"] = \"2054-5\";\r\n    WonderQueryParam_Race[\"White\"] = \"2106-3\";\r\n})(WonderQueryParam_Race = exports.WonderQueryParam_Race || (exports.WonderQueryParam_Race = {}));\r\nvar WonderQueryParam_GroupBy;\r\n(function (WonderQueryParam_GroupBy) {\r\n    WonderQueryParam_GroupBy[\"CensusRegion\"] = \"D76.V10-level1\";\r\n    WonderQueryParam_GroupBy[\"CensusDivision\"] = \"D76.V10-level2\";\r\n    WonderQueryParam_GroupBy[\"HHSRegion\"] = \"D76.V27-level1\";\r\n    WonderQueryParam_GroupBy[\"State\"] = \"D76.V9-level1\";\r\n    WonderQueryParam_GroupBy[\"County\"] = \"D76.V9-level2\";\r\n    WonderQueryParam_GroupBy[\"Urbanization2013\"] = \"D76.V19\";\r\n    WonderQueryParam_GroupBy[\"Urbanization2006\"] = \"D76.V11\";\r\n    WonderQueryParam_GroupBy[\"AgeGroups\"] = \"D76.V5\";\r\n    WonderQueryParam_GroupBy[\"Gender\"] = \"D76.V7\";\r\n    WonderQueryParam_GroupBy[\"HispanicOrigin\"] = \"D76.V17\";\r\n    WonderQueryParam_GroupBy[\"Race\"] = \"D76.V8\";\r\n    //timeThere \r\n    WonderQueryParam_GroupBy[\"Year\"] = \"D76.V1-level1\";\r\n    WonderQueryParam_GroupBy[\"Month\"] = \"D76.V1-level2\";\r\n    WonderQueryParam_GroupBy[\"Weekday\"] = \"D76.V24\";\r\n    WonderQueryParam_GroupBy[\"Autopsy\"] = \"D76.V20\";\r\n    WonderQueryParam_GroupBy[\"PlaceofDeath\"] = \"D76.V21\";\r\n    WonderQueryParam_GroupBy[\"ICD10\"] = \"D76.V2\";\r\n    WonderQueryParam_GroupBy[\"LeadingCausesofDeath\"] = \"D76.V28\";\r\n    WonderQueryParam_GroupBy[\"LeadingCausesofDeathInfants\"] = \"D76.V29\";\r\n    WonderQueryParam_GroupBy[\"ICDChapter\"] = \"D76.V2-level1\";\r\n    WonderQueryParam_GroupBy[\"ICDSubChapter\"] = \"D76.V2-level2\";\r\n    WonderQueryParam_GroupBy[\"CauseOfDeath\"] = \"D76.V2-level3\";\r\n    WonderQueryParam_GroupBy[\"ICD10_113CauseList\"] = \"D76.V4\";\r\n    WonderQueryParam_GroupBy[\"ICD10_130CauseListInfants\"] = \"D76.V12\";\r\n    WonderQueryParam_GroupBy[\"InjuryIntent\"] = \"D76.V22\";\r\n    WonderQueryParam_GroupBy[\"InjuryMechanismAndAllOtherLeadingCauses\"] = \"D76.V23\";\r\n    WonderQueryParam_GroupBy[\"DrugAlcoholInducedCauses\"] = \"D76.V25\";\r\n})(WonderQueryParam_GroupBy = exports.WonderQueryParam_GroupBy || (exports.WonderQueryParam_GroupBy = {}));\r\nexports.AllWonderParams = [WonderQueryParam_Include, WonderQueryParam_AgeGroup, WonderQueryParam_GroupBy, , WonderQueryParam_Measure, , WonderQueryParam_Util];\r\nlet WonderQueryParam_Reversed_Cache = null;\r\n// export function WonderQueryParam_Reversed() {\r\n//   if (WonderQueryParam_Reversed_Cache == null) {\r\n//     let WonderQueryParam_Reversed_Cache = {} as any\r\n//     for (let key in WonderQueryParam) {\r\n//       WonderQueryParam_Reversed_Cache[WonderQueryParam[key]] = key;\r\n//     }\r\n//   }\r\n//   return WonderQueryParam_Reversed_Cache;\r\n// }\r\nfunction DeWonder(text) {\r\n    let tmp = text;\r\n    let allTranslations = [];\r\n    for (let groupName in exports.AllWonderParams) {\r\n        let group = exports.AllWonderParams[groupName];\r\n        for (let key in group) {\r\n            allTranslations.push([groupName, group[key], key]);\r\n        }\r\n    }\r\n    allTranslations = allTranslations.sort((a, b) => (b[1].length - a[1].length));\r\n    for (let item of allTranslations) {\r\n        // console.log(`Replacing ${group[key]} with ${key}`)\r\n        tmp = (0, FBF_Helpers_1.replaceAllInString)(tmp, `F_${item[1]}`, `F_Only_${item[2]}`);\r\n        tmp = (0, FBF_Helpers_1.replaceAllInString)(tmp, `I_${item[1]}`, `I_Only_${item[2]}`);\r\n        tmp = (0, FBF_Helpers_1.replaceAllInString)(tmp, `V_${item[1]}`, `V_Only_${item[2]}`);\r\n        tmp = (0, FBF_Helpers_1.replaceAllInString)(tmp, item[1], item[2]);\r\n    }\r\n    return tmp;\r\n}\r\nexports.DeWonder = DeWonder;\r\nclass WonderRequest {\r\n    constructor() {\r\n        this.params = new Map();\r\n        this.groupByCount = 0;\r\n        this.groupByCountLimit = 5;\r\n        this.defaultParams = {\r\n            'dataset_code': ['D76'],\r\n            'B_2': [WonderQueryParam_Util.None],\r\n            'B_3': [WonderQueryParam_Util.None],\r\n            'B_4': [WonderQueryParam_Util.None],\r\n            'B_5': [WonderQueryParam_Util.None],\r\n            'O_age': [WonderQueryParam_AgeGroup.TenYear],\r\n            'O_location': [WonderQueryParam_Include.StatesAndCounties],\r\n            'O_aar_pop': ['0000'],\r\n            // 'O_aar_enable': ['false'],\r\n            'O_urban': [WonderQueryParam_GroupBy.Urbanization2013],\r\n            // 'O_aar_CI': ['true'],\r\n            'action-Send': ['Send'],\r\n            // 'O_aar_SE': ['true'],\r\n            'O_aar': ['aar_none'],\r\n            'M_1': [WonderQueryParam_Measure.Deaths],\r\n            'M_2': [WonderQueryParam_Measure.Population],\r\n            'M_3': [WonderQueryParam_Measure.CrudeRate],\r\n            'O_V10_fmode': ['freg'],\r\n            'O_V1_fmode': ['freg'],\r\n            'O_V25_fmode': ['freg'],\r\n            'O_V27_fmode': ['freg'],\r\n            'O_V2_fmode': ['freg'],\r\n            'O_V9_fmode': ['freg'],\r\n            'O_oc-sect1-request': ['close'],\r\n            'O_precision': ['1'],\r\n            'O_rate_per': ['100000'],\r\n            'O_show_supressed': ['true'],\r\n            'O_show_totals': ['false'],\r\n            'O_show_zeros': ['true'],\r\n            'O_timeout': ['600'],\r\n            'O_title': ['Example1'],\r\n            'O_javascript': ['off'],\r\n            'O_ucd': [WonderQueryParam_Include.ICD10Codes],\r\n            'F_D76.V1': [WonderQueryParam_Util.All],\r\n            'F_D76.V10': [WonderQueryParam_Util.All],\r\n            'F_D76.V2': [WonderQueryParam_Util.All],\r\n            'F_D76.V9': [WonderQueryParam_Util.All],\r\n            'V_D76.V7': [WonderQueryParam_Util.All],\r\n            'V_D76.V8': [WonderQueryParam_Util.All],\r\n            'V_D76.V9': [],\r\n            'V_D76.V6': ['00'],\r\n            'V_D76.V52': [WonderQueryParam_Util.All],\r\n            'V_D76.V5': [WonderQueryParam_Util.All],\r\n            'V_D76.V51': [WonderQueryParam_Util.All],\r\n            'V_D76.V17': [WonderQueryParam_Util.All],\r\n            'V_D76.V19': [WonderQueryParam_Util.All],\r\n            'V_D76.V2': [],\r\n            'V_D76.V20': [WonderQueryParam_Util.All],\r\n            'V_D76.V21': [WonderQueryParam_Util.All],\r\n            'V_D76.V22': [WonderQueryParam_Util.All],\r\n            'V_D76.V23': [WonderQueryParam_Util.All],\r\n            'V_D76.V24': [WonderQueryParam_Util.All],\r\n            'V_D76.V25': [],\r\n            'F_D76.V27': [WonderQueryParam_Util.All],\r\n            'O_show_suppressed': ['true'],\r\n            //values for non-standard age-adjusted rates\r\n            // 'VM_D76.M6_D76.V1_S': ['2004'],// [WonderQueryParam_Util.All],//years\r\n            // 'VM_D76.M6_D76.V17': [WonderQueryParam_Util.All],//Hispanic Origin\r\n            // 'VM_D76.M6_D76.V7': [WonderQueryParam_Util.All],//Gender\r\n            // 'VM_D76.M6_D76.V8': [WonderQueryParam_Util.All],//Race\r\n            'finder-stage-D76.V1': ['codeset'],\r\n            'finder-stage-D76.V10': ['codeset'],\r\n            'finder-stage-D76.V2': ['codeset'],\r\n            'finder-stage-D76.V25': ['codeset'],\r\n            'finder-stage-D76.V27': ['codeset'],\r\n            'finder-stage-D76.V9': ['codeset'],\r\n            'saved_id': [],\r\n            'stage': ['request']\r\n        };\r\n        this.defaultFIVParams = {};\r\n    }\r\n    addParam(name, value) {\r\n        if (typeof value == 'string') {\r\n            this.params.set(name, [value]);\r\n        }\r\n        else {\r\n            this.params.set(name, value);\r\n        }\r\n        return this;\r\n    }\r\n    urbanBy(version) {\r\n        let vCode = WonderQueryParam_GroupBy[version];\r\n        this.addParam('O_urban', vCode);\r\n        return this;\r\n    }\r\n    enableAgeAdjustedRate(isEnabled, confidenceInterval95 = isEnabled, standardError = isEnabled) {\r\n        this.addParam('O_aar_enable', isEnabled ? 'true' : 'false');\r\n        this.addParam('O_aar_CI', confidenceInterval95 ? 'true' : 'false');\r\n        this.addParam('O_aar_SE', standardError ? 'true' : 'false');\r\n        return this;\r\n    }\r\n    ageAdjustedRate(rateBy) {\r\n        this.addParam('O_arr', rateBy);\r\n        return this;\r\n    }\r\n    population(yearOfPopulationCount) {\r\n        this.addParam('O_aar_pop', yearOfPopulationCount);\r\n        return this;\r\n    }\r\n    locationBy(locByName) {\r\n        let locBy = WonderQueryParam_Include[locByName];\r\n        this.params.set('O_Location', [locBy]);\r\n        return this;\r\n    }\r\n    includeDates(dates) {\r\n        let paramName = `F_${WonderQueryParam_Include.YearAndMonth}`;\r\n        if (dates == 'all') {\r\n            this.params.set(paramName, [WonderQueryParam_Util.All]);\r\n            return;\r\n        }\r\n        return this;\r\n    }\r\n    enableJavascript(enabled) {\r\n        this.addParam('O_javascript', enabled ? 'on' : 'off');\r\n        return this;\r\n    }\r\n    measure(measureBy) {\r\n        let paramName = `M_${measureBy.replace('D.76.M', '')}`;\r\n        this.addParam(paramName, WonderQueryParam_Measure[measureBy]);\r\n    }\r\n    causeOfDeathBy(deathBy) {\r\n        let code = deathBy in WonderQueryParam_Include ? WonderQueryParam_Include[deathBy] : WonderQueryParam_GroupBy[deathBy];\r\n        this.addParam('O_ucd', [code]);\r\n        return this;\r\n    }\r\n    ageGroups(groupName) {\r\n        this.addParam(`O_age`, [WonderQueryParam_AgeGroup[groupName]]);\r\n        return this;\r\n    }\r\n    filterByYear(years) {\r\n        //let val = (typeof years == 'string') ? years : years.map(y => `${y} (${y})`).join(' ')\r\n        // return this.addParam('I_D76.V1', val);\r\n        return this.addParam(`F_D76.V1`, years);\r\n    }\r\n    groupBy(groupByName) {\r\n        if (this.groupByCount >= this.groupByCountLimit) {\r\n            throw new Error(`Cannot group by more than ${this.groupByCountLimit}`);\r\n        }\r\n        let parameterName = `B_${this.groupByCount + 1}`;\r\n        if (isWQP_None(groupByName)) {\r\n            this.addParam(parameterName, WonderQueryParam_Util.None);\r\n        }\r\n        else if (WonderQueryParam_GroupBy[groupByName]) {\r\n            let param = WonderQueryParam_GroupBy[groupByName];\r\n            this.addParam(parameterName, param);\r\n        }\r\n        else {\r\n            this.addParam(parameterName, groupByName);\r\n        }\r\n        this.groupByCount++;\r\n        return this;\r\n    }\r\n    toParamMap() {\r\n        this.setDefaults();\r\n        return this.params;\r\n    }\r\n    alternatives(k) {\r\n        if (k.length < 3) {\r\n            return [k];\r\n        }\r\n        let start = k.substring(0, 2);\r\n        let rest = k.substring(2);\r\n        switch (start) {\r\n            case 'F_':\r\n                return [k, `I_${rest}`, `V_${rest}`];\r\n            case 'I_':\r\n                return [k, `F_${rest}`, `V_${rest}`];\r\n            case 'V_':\r\n                return [k, `I_${rest}`, `F_${rest}`];\r\n            default:\r\n                return [k];\r\n        }\r\n    }\r\n    setDefaults() {\r\n        let ths = this;\r\n        for (let key in this.defaultParams) {\r\n            if (!((0, FBF_Helpers_1.isAllTrue)(ths.alternatives(key).map((altKey) => {\r\n                // console.log(`Checking alternative ${altKey}`)\r\n                if (ths.params.has(altKey)) {\r\n                    // console.log(`----Alt Found ${altKey}`)\r\n                }\r\n                return ths.params.has(altKey);\r\n            })))) {\r\n                // console.log(`Defaulting ${key} (${DeWonder(key)}) to ${this.defaultParams[key]}`)\r\n                this.params.set(key, this.defaultParams[key]);\r\n            }\r\n        }\r\n    }\r\n    toString() {\r\n        // console.log(`Building query string`)\r\n        let ths = this;\r\n        let toProcess = [];\r\n        let processed = new Map();\r\n        let name;\r\n        let keyList = new ConsumableLinkedList(this.params.keys());\r\n        keyList.consume((key) => {\r\n            if (key.startsWith('B_')) {\r\n                toProcess.push([key, ths.params.get(key)]);\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        // for (let i = 1; i <= 5; i++) {\r\n        //   name = `B_${i}`\r\n        //   toProcess.push([name, this.params.has(name) ? this.params.get(name) : [WonderQueryParam_Util.None]])\r\n        //   processed.set(name, true)\r\n        // }\r\n        // for (let key of this.params.keys()) {\r\n        //   if (key.startsWith('M_')) {\r\n        //     toProcess.push([key, this.params.get(key)])\r\n        //     processed.set(key, true)\r\n        //   }\r\n        // }\r\n        keyList.consume((key) => {\r\n            if (key.startsWith('M_')) {\r\n                toProcess.push([key, ths.params.get(key)]);\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        keyList.consume((key) => {\r\n            if (key.startsWith('O_')) {\r\n                toProcess.push([key, ths.params.get(key)]);\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        keyList.consume((key) => {\r\n            if (key.startsWith('F_') || key.startsWith('I_') || key.startsWith('V_')) {\r\n                toProcess.push([key, ths.params.get(key)]);\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        keyList.consume((key) => {\r\n            // console.log(`Uordered parameter ${key}`)\r\n            toProcess.push([key, ths.params.get(key)]);\r\n            return true;\r\n        });\r\n        // for (let key of this.params.keys()) {\r\n        //   if (!processed.has(key)) {\r\n        //     toProcess.push([key, this.params.get(key)])\r\n        //   }\r\n        // }\r\n        // console.log(`Full Query:\\n${toProcess.map((param: [string, string[]]) => `${param[0]}(${DeWonder(param[0])}) = \\n${param[1].join('\\n--')}\\n`)}`)\r\n        return toProcess.map((param, index) => {\r\n            // console.log(`Mapping ${param[0]} (${DeWonder(param[0])}) to `, param[1])\r\n            return `<parameter><name>${param[0]}</name>${param[1].length > 0 ? param[1].map(str => `<value>${str}</value>`).join('') : '<value />'}</parameter>`;\r\n        }).join('');\r\n    }\r\n    requestTable(setDefaults = true) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return WonderRequest.toTable(yield this.request(setDefaults));\r\n        });\r\n    }\r\n    request(setDefaults = true) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let clientSide = typeof window != 'undefined';\r\n            if (!this.params.has('B_1')) {\r\n                throw new Error(`Please group by at least one property`);\r\n            }\r\n            if (setDefaults) {\r\n                this.setDefaults();\r\n            }\r\n            let reqPartOfBody = this.toString();\r\n            // console.log(`Requesting`, reqPartOfBody)\r\n            // console.log(`Query: ${reqPartOfBody}`)\r\n            let fetchBody = `request_xml=<request-parameters><parameter>\r\n        <name>accept_datause_restrictions</name>\r\n        <value>true</value>\r\n        </parameter>${reqPartOfBody}</request-parameters>`;\r\n            let result = yield fetch(clientSide ? `http://${location.hostname}:5001/gdsn3-22/us-central1/WonderProxy` : `https://wonder.cdc.gov/controller/datarequest/D76`, {\r\n                method: 'POST',\r\n                body: fetchBody,\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded', 'Accept': 'application/xml' },\r\n                // mode: 'no-cors'\r\n            });\r\n            console.log(result.status + \" \" + result.statusText);\r\n            let textResult = yield result.text();\r\n            // console.log(textResult);\r\n            // let jsonValue = await XMLParser.parseStringPromise(textResult, {})\r\n            // console.log('JSON__________----')\r\n            // console.log(jsonValue)\r\n            let json = yield (0, FBF_Helpers_1.XmlToJson)(textResult);\r\n            return json.page[0];\r\n        });\r\n    }\r\n    static toTable(data) {\r\n        var _a, _b;\r\n        try {\r\n            console.log(data);\r\n        }\r\n        catch (err) {\r\n            try {\r\n                console.log((_a = data.message) === null || _a === void 0 ? void 0 : _a.join('\\n'));\r\n            }\r\n            catch (errr) {\r\n                console.log(`Bad response`, data);\r\n            }\r\n            return null;\r\n        }\r\n        if (!data.response) {\r\n            try {\r\n                console.log((_b = data.message) === null || _b === void 0 ? void 0 : _b.join('\\n'));\r\n            }\r\n            catch (errr) {\r\n                console.log(`Bad response`, data);\r\n            }\r\n            return null;\r\n        }\r\n        let byCodes = (0, FBF_Helpers_1.flatten)(data.response[0].request[0].byvariables.map((v) => v.variable.map((vv) => vv.$.code)));\r\n        console.log('By codes', byCodes);\r\n        let measureCodes = data.response[0]['measure-selections'][0].measure.map((m) => m.$.code);\r\n        let columnCodes = (0, FBF_Helpers_1.concactinate)(byCodes, measureCodes);\r\n        console.log('Column Codes', measureCodes.map((c) => DeWonder(c)));\r\n        let repeatedColumns = [];\r\n        let columnsToRepeat = new Map();\r\n        let rows = [];\r\n        let totals = [];\r\n        let maximums = [];\r\n        data.response[0]['data-table'][0].r.forEach((row) => {\r\n            let column = [];\r\n            columnsToRepeat.clear();\r\n            for (let i = 0; i < repeatedColumns.length; i++) {\r\n                // console.log(`Repeating ${repeatedColumns[i][1]}`)\r\n                columnsToRepeat.set(repeatedColumns[i][2], repeatedColumns[i][1]);\r\n                repeatedColumns[i][0]--;\r\n                if (repeatedColumns[i][0] <= 0) {\r\n                    repeatedColumns.splice(i, 1);\r\n                }\r\n            }\r\n            row.c.forEach((col, colIndex) => {\r\n                var _a;\r\n                if (columnsToRepeat.has(colIndex)) {\r\n                    column.push(columnsToRepeat.get(colIndex));\r\n                }\r\n                let val = (typeof col.$.l == 'undefined') ?\r\n                    (col.$.v == \"Unreliable\" ? \"Unreliable\" : Number((_a = col.$.v) === null || _a === void 0 ? void 0 : _a.replaceAll(',', '')))\r\n                    : col.$.l;\r\n                if (col.$.r) {\r\n                    // console.log(`Repeating ${val} ${Number(col.$.r) - 1} times`)\r\n                    repeatedColumns.push([Number(col.$.r) - 1, val, colIndex]);\r\n                }\r\n                column.push(val);\r\n            });\r\n            while (totals.length < column.length) {\r\n                totals.push(0);\r\n            }\r\n            while (maximums.length < column.length) {\r\n                maximums.push(-1);\r\n            }\r\n            for (let i = 0; i < column.length; i++) {\r\n                if (typeof column[i] == 'number') {\r\n                    if (maximums[i] == -1 || column[i] > maximums[i] || Number.isNaN(maximums[i])) {\r\n                        maximums[i] = column[i];\r\n                    }\r\n                    totals[i] += column[i];\r\n                }\r\n                else {\r\n                    totals[i] = -1;\r\n                }\r\n            }\r\n            rows.push(column);\r\n        });\r\n        let output = { rowTotals: totals, rowMaximums: maximums, columnCodes: columnCodes, columnNames: columnCodes.map((code) => DeWonder(code)), rows: rows };\r\n        console.log(output);\r\n        return output;\r\n    }\r\n}\r\nexports.WonderRequest = WonderRequest;\r\nclass ConsumableLinkedList {\r\n    constructor(values) {\r\n        this.root = null;\r\n        if (!Array.isArray(values)) {\r\n            let vals = [];\r\n            let node = null;\r\n            for (let item of values) {\r\n                if (node == null) {\r\n                    this.root = { value: item, next: null };\r\n                    node = this.root;\r\n                }\r\n                else {\r\n                    node.next = { value: item, next: null };\r\n                    node = node.next;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.root = { value: values[0], next: null };\r\n            let node = this.root;\r\n            for (let i = 1; i < values.length; i++) {\r\n                node.next = { value: values[i], next: null };\r\n                node = node.next;\r\n            }\r\n        }\r\n    }\r\n    consume(onEach) {\r\n        let node = this.root;\r\n        let lastNode = null;\r\n        while (node != null) {\r\n            if (onEach(node.value)) {\r\n                if (lastNode == null) {\r\n                    //  console.log(`Consuming ${node.value} as root now ${this.toString()}`)\r\n                    this.root = node.next;\r\n                    node = this.root;\r\n                }\r\n                else {\r\n                    //  console.log(`Consuming ${node.value} in chain now ${this.toString()}`)\r\n                    lastNode.next = node.next;\r\n                    node = node.next;\r\n                }\r\n            }\r\n            else {\r\n                lastNode = node;\r\n                node = node.next;\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    toArray() {\r\n        let node = this.root;\r\n        let out = [];\r\n        while (node != null) {\r\n            out.push(node.value);\r\n            node = node.next;\r\n        }\r\n        return out;\r\n    }\r\n    toString() {\r\n        return this.toArray().join(', ');\r\n    }\r\n}\r\nexports.ConsumableLinkedList = ConsumableLinkedList;\r\nexports.ExampleRequest = '<request-parameters><parameter><name>B_1</name><value>D76.V1-level1</value></parameter><parameter><name>B_2</name><value>D76.V8</value></parameter><parameter><name>B_3</name><value>*None*</value></parameter><parameter><name>B_4</name><value>*None*</value></parameter><parameter><name>B_5</name><value>*None*</value></parameter><parameter><name>F_D76.V1</name><value>1999</value><value>2000</value><value>2001</value><value>2002</value><value>2003</value><value>2004</value><value>2005</value><value>2006</value><value>2007</value><value>2008</value><value>2009</value><value>2010</value><value>2011</value><value>2012</value><value>2013</value></parameter><parameter><name>F_D76.V10</name><value>*All*</value></parameter><parameter><name>F_D76.V2</name><value>C00-D48</value></parameter><parameter><name>F_D76.V25</name><value>*All*</value></parameter><parameter><name>F_D76.V27</name><value>*All*</value></parameter><parameter><name>F_D76.V9</name><value>*All*</value></parameter><parameter><name>I_D76.V1</name><value>1999 (1999) 2000 (2000) 2001 (2001) 2002 (2002) 2003 (2003) 2004 (2004) 2005 (2005) 2006 (2006) 2007 (2007) 2008 (2008) 2009 (2009) 2010 (2010) 2011 (2011) 2012 (2012) 2013 (2013) </value></parameter><parameter><name>I_D76.V10</name><value>*All* (The United States) </value></parameter><parameter><name>I_D76.V2</name><value>C00-D48 (Neoplasms) </value></parameter><parameter><name>I_D76.V25</name><value>All Causes of Death </value></parameter><parameter><name>I_D76.V27</name><value>*All* (The United States) </value></parameter><parameter><name>I_D76.V9</name><value>*All* (The United States) </value></parameter><parameter><name>M_1</name><value>D76.M1</value></parameter><parameter><name>M_2</name><value>D76.M2</value></parameter><parameter><name>M_3</name><value>D76.M3</value></parameter><parameter><name>M_9</name><value>D76.M9</value></parameter><parameter><name>O_V10_fmode</name><value>freg</value></parameter><parameter><name>O_V1_fmode</name><value>freg</value></parameter><parameter><name>O_V25_fmode</name><value>freg</value></parameter><parameter><name>O_V27_fmode</name><value>freg</value></parameter><parameter><name>O_V2_fmode</name><value>freg</value></parameter><parameter><name>O_V9_fmode</name><value>freg</value></parameter><parameter><name>O_aar</name><value>aar_std</value></parameter><parameter><name>O_aar_CI</name><value>true</value></parameter><parameter><name>O_aar_SE</name><value>true</value></parameter><parameter><name>O_aar_enable</name><value>true</value></parameter><parameter><name>O_aar_pop</name><value>0000</value></parameter><parameter><name>O_age</name><value>D76.V5</value></parameter><parameter><name>O_javascript</name><value>on</value></parameter><parameter><name>O_location</name><value>D76.V9</value></parameter><parameter><name>O_oc-sect1-request</name><value>close</value></parameter><parameter><name>O_precision</name><value>1</value></parameter><parameter><name>O_rate_per</name><value>100000</value></parameter><parameter><name>O_show_suppressed</name><value>true</value></parameter><parameter><name>O_show_totals</name><value>true</value></parameter><parameter><name>O_show_zeros</name><value>true</value></parameter><parameter><name>O_timeout</name><value>600</value></parameter><parameter><name>O_title</name><value>Example1</value></parameter><parameter><name>O_ucd</name><value>D76.V2</value></parameter><parameter><name>O_urban</name><value>D76.V19</value></parameter><parameter><name>VM_D76.M6_D76.V10</name><value/></parameter><parameter><name>VM_D76.M6_D76.V17</name><value>*All*</value></parameter><parameter><name>VM_D76.M6_D76.V1_S</name><value>*All*</value></parameter><parameter><name>VM_D76.M6_D76.V7</name><value>*All*</value></parameter><parameter><name>VM_D76.M6_D76.V8</name><value>*All*</value></parameter><parameter><name>V_D76.V1</name><value/></parameter><parameter><name>V_D76.V10</name><value/></parameter><parameter><name>V_D76.V11</name><value>*All*</value></parameter><parameter><name>V_D76.V12</name><value>*All*</value></parameter><parameter><name>V_D76.V17</name><value>*All*</value></parameter><parameter><name>V_D76.V19</name><value>*All*</value></parameter><parameter><name>V_D76.V2</name><value/></parameter><parameter><name>V_D76.V20</name><value>*All*</value></parameter><parameter><name>V_D76.V21</name><value>*All*</value></parameter><parameter><name>V_D76.V22</name><value>*All*</value></parameter><parameter><name>V_D76.V23</name><value>*All*</value></parameter><parameter><name>V_D76.V24</name><value>*All*</value></parameter><parameter><name>V_D76.V25</name><value/></parameter><parameter><name>V_D76.V27</name><value/></parameter><parameter><name>V_D76.V4</name><value>*All*</value></parameter><parameter><name>V_D76.V5</name><value>*All*</value></parameter><parameter><name>V_D76.V51</name><value>*All*</value></parameter><parameter><name>V_D76.V52</name><value>*All*</value></parameter><parameter><name>V_D76.V6</name><value>00</value></parameter><parameter><name>V_D76.V7</name><value>*All*</value></parameter><parameter><name>V_D76.V8</name><value>*All*</value></parameter><parameter><name>V_D76.V9</name><value/></parameter><parameter><name>action-Send</name><value>Send</value></parameter><parameter><name>dataset_code</name><value>D76</value></parameter><parameter><name>dataset_label</name><value>Underlying Cause of Death, 1999-2016</value></parameter><parameter><name>dataset_vintage</name><value>2016</value></parameter><parameter><name>finder-stage-D76.V1</name><value>codeset</value></parameter><parameter><name>finder-stage-D76.V10</name><value>codeset</value></parameter><parameter><name>finder-stage-D76.V2</name><value>codeset</value></parameter><parameter><name>finder-stage-D76.V25</name><value>codeset</value></parameter><parameter><name>finder-stage-D76.V27</name><value>codeset</value></parameter><parameter><name>finder-stage-D76.V9</name><value>codeset</value></parameter><parameter><name>saved_id</name><value/></parameter><parameter><name>stage</name><value>request</value></parameter></request-parameters>';\r\nfunction test() {\r\n    let val;\r\n    val;\r\n}\r\nconst RawRonaColumnsDefault = [0, 0, 0, '', 0, 0, '', '', '', 0, 0, 0, 0, 0, 0, ''];\r\nclass Database {\r\n    constructor(fileAccessor = null) {\r\n        this.deathsByCause = new Map();\r\n        this.populationByAge = new Map();\r\n        this.fileAccessor = null;\r\n        this.updateListeners = new Map();\r\n        this.updateListenerCount = 0;\r\n        this.diseaseDirectoryPath = './directory.json';\r\n        this.diseaseDirectory = new Map();\r\n        this.fileAccessor = fileAccessor;\r\n        if (fileAccessor) {\r\n            let ths = this;\r\n            fileAccessor.readFile(this.diseaseDirectoryPath).then(data => {\r\n                if (Array.isArray(data)) {\r\n                    for (let description of data) {\r\n                        ths.diseaseDirectory.set(description.icdCode, description);\r\n                    }\r\n                }\r\n                else {\r\n                    console.log(`Failed to read file`, data);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    getColorForAgeGroup(ageGroup) {\r\n        switch (ageGroup) {\r\n            case '1-4 years':\r\n                return fColor.blue.darken1;\r\n            case '15-24 years':\r\n                return fColor.blue.darken2;\r\n            case '25-34 years':\r\n                return fColor.blue.darken3;\r\n            default:\r\n                return fColor.blue.base;\r\n        }\r\n    }\r\n    addListener(onUpdate) {\r\n        let index = this.updateListenerCount++;\r\n        this.updateListeners.set(index, onUpdate);\r\n        return index;\r\n    }\r\n    removeListener(index) {\r\n        this.updateListeners.delete(index);\r\n    }\r\n    notifyListeners() {\r\n        for (let listener of this.updateListeners.values()) {\r\n            listener();\r\n        }\r\n    }\r\n    getPopulationForAge(ageGroup) {\r\n        let ths = this;\r\n        return this.populationByAge.getWithDefault(ageGroup, (ag) => new DataChannel(`AgeGroup${ag}`, ths.getColorForAgeGroup(ag)));\r\n    }\r\n    getDeathsForCause(causeName) {\r\n        if (!this.deathsByCause.has(causeName)) {\r\n            this.deathsByCause.set(causeName, new DataChannel(`DeathsForCause${causeName}`));\r\n        }\r\n        return this.deathsByCause.get(causeName);\r\n    }\r\n    findIcdCodes() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let csvResp = yield fetch('https://raw.githubusercontent.com/k4m1113/ICD-10-CSV/master/codes.csv');\r\n            let csv = yield csvResp.text();\r\n            let lines = csv.split('\\n').map(line => {\r\n                line = line.replaceAll(`\"`, '');\r\n                let parts = line.split(',');\r\n                // 0: \"A00\"section\r\n                // 1: \"0\"item\r\n                // 2: \"A000\"junk\r\n                // 3: \"\\\"Cholera due to Vibrio cholerae 01\"technicalLabel\r\n                // 4: \" biovar cholerae\\\"\"junk\r\n                // 5: \"\\\"Cholera due to Vibrio cholerae 01\"junk\r\n                // 6: \" biovar cholerae\\\"\"\r\n                // 7: \"\\\"Cholera\\\"\"\r\n                return [parts[1] && parts[1].isNumber() ? `${parts[0]}.${parts[1]}` : parts[0], parts[3], parts[parts.length - 1]];\r\n            });\r\n            console.log(lines);\r\n            return lines;\r\n        });\r\n    }\r\n    pullIcdCodes(max = -1) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let codes = yield this.findIcdCodes();\r\n            let ths = this;\r\n            yield codes.forEachAsync((code, index) => __awaiter(this, void 0, void 0, function* () {\r\n                if (ths.diseaseDirectory.has(code[0])) {\r\n                    if (max != -1) {\r\n                        max++;\r\n                    }\r\n                }\r\n                else {\r\n                    if (max != -1 && index >= max) {\r\n                        return 'BREAK';\r\n                    }\r\n                    console.log(`${max != -1 ? (max - index) + ' ' : ''}Pulling data for ICD code ${code[0]}`, code);\r\n                    try {\r\n                        let data = yield new WonderRequest().groupBy('AgeGroups').groupBy('Month').addParam('F_D76.V2', code[0]).requestTable(true);\r\n                        if (data != null) {\r\n                            ths.diseaseDirectory.set(code[0], { laymanName: code[2], technicalName: code[1], icdCode: code[0], maxPerMonth: data.rowMaximums[2] });\r\n                        }\r\n                        else {\r\n                            if (max != -1) {\r\n                                max++;\r\n                            }\r\n                        }\r\n                    }\r\n                    catch (err) {\r\n                        console.log(`Failed to pull ${code[0]}`, err);\r\n                    }\r\n                }\r\n            }));\r\n            let output = this.diseaseDirectory.toArrayWithKeys().sort((a, b) => b[1].maxPerMonth - a[1].maxPerMonth).map(s => s[1]);\r\n            console.log(output);\r\n            if (this.fileAccessor) {\r\n                this.fileAccessor.writeFile(this.diseaseDirectoryPath, output);\r\n            }\r\n            return output;\r\n        });\r\n    }\r\n    pullCdcData() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let result = yield fetch('https://data.cdc.gov/api/views/9bhg-hcku/rows.csv');\r\n            let text = yield result.text();\r\n            let lines = text.split('\\n');\r\n            let columnNames = lines[0];\r\n            lines.splice(0, 1);\r\n            let values = lines.mapOrDrop((line, index) => {\r\n                let raw = line.split(',');\r\n                if (raw[3] != 'By Month' || raw[7] != 'All Sexes') {\r\n                    return 'DROP';\r\n                }\r\n                let out = [];\r\n                for (let i = 0; i < raw.length; i++) {\r\n                    switch (i) {\r\n                        case 0:\r\n                        case 1:\r\n                        case 2:\r\n                            out.push(new Date(raw[i]).getTime());\r\n                            break;\r\n                        case 4:\r\n                        case 5:\r\n                        case 9:\r\n                        case 10:\r\n                        case 11:\r\n                        case 12:\r\n                        case 13:\r\n                        case 14:\r\n                        case 14:\r\n                            out.push(Number(raw[i]));\r\n                            break;\r\n                        case 8:\r\n                            out.push(raw[i].replace('Under 1 year', '< 1 year').replace('85 years and over', '85+ years'));\r\n                            break;\r\n                        default:\r\n                            out.push(raw[i]);\r\n                            break;\r\n                    }\r\n                }\r\n                while (out.length < RawRonaColumnsDefault.length) {\r\n                    out.push(RawRonaColumnsDefault[out.length - 1]);\r\n                }\r\n                return out;\r\n                // return [raw[0], raw[1], raw[2], raw[3], raw[4], raw[5], raw[6], raw[7], raw[8], raw[9], raw[10], raw[11], raw[6], raw[6], raw[6], raw[6]] as RawColumns\r\n            });\r\n            let output = { columns: columnNames, rows: values };\r\n            console.log(output);\r\n            window['lastCdc'] = output;\r\n        });\r\n    }\r\n    pullPopulation() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let ths = this;\r\n            let population = yield new WonderRequest().groupBy('Year').groupBy('AgeGroups').requestTable(true);\r\n            population.rows.forEach((row) => {\r\n                let time = new Date(row[0].isNumber() ? `${row[0]} 1 1` : row[0]).getTime();\r\n                let tree = ths.getPopulationForAge(row[1]);\r\n                tree.set(time, row[3]);\r\n            });\r\n            return this.populationByAge;\r\n        });\r\n    }\r\n    pullDeathsByCause() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let ths = this;\r\n            for (let year = 1999; year <= 2020; year++) {\r\n                for (let month = 1; month <= 12; month++) {\r\n                    let yearMonth = `${year}/${month <= 9 ? '0' + month : month}`;\r\n                    console.log(`Pulling deaths in ${yearMonth}`);\r\n                    let deaths = yield new WonderRequest().groupBy('CauseOfDeath').groupBy('AgeGroups').groupBy('Month').filterByYear([yearMonth]).requestTable(true);\r\n                    let count = 0;\r\n                    deaths.rows.forEach((row, index) => {\r\n                        let time = new Date(row[2].isNumber() ? (row[2].includes('/') ? `${row[2].split('/')[0]} ${row[2].split('/')[1]} 1` : `${row[2]} 1 1`) : row[2]).getTime();\r\n                        let tree = ths.getDeathsForCause(row[0]);\r\n                        tree.set(time, row[3]);\r\n                        count++;\r\n                        if (count > 1000) {\r\n                            count = 0;\r\n                            // console.log(`Added ${index} rows`)\r\n                        }\r\n                    });\r\n                    ths.notifyListeners();\r\n                }\r\n            }\r\n            return this.deathsByCause;\r\n        });\r\n    }\r\n    buildDataChannel(id, color, side) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (side == 'Server') {\r\n                let out = new DataChannelStreaming(id, color, (request) => __awaiter(this, void 0, void 0, function* () {\r\n                    let resp = yield fetch(`http://${window.location.hostname}:5001/gdsn3-22/us-central1/DataChannels?id=${id}`);\r\n                    return null;\r\n                }));\r\n            }\r\n            else {\r\n                let out = new DataChannelStreaming(id, color, (request) => __awaiter(this, void 0, void 0, function* () {\r\n                    let resp = yield fetch(`http://${window.location.hostname}:5001/gdsn3-22/us-central1/DataChannels?id=${id}`);\r\n                    return null;\r\n                }));\r\n            }\r\n        });\r\n    }\r\n}\r\nexports.Database = Database;\r\nclass DataChannel {\r\n    constructor(title, color = fColor.randomColor()) {\r\n        this.tree = new sorted_btree_1.default();\r\n        this.minValue = null;\r\n        this.maxValue = null;\r\n        this.title = title;\r\n        this.color = color;\r\n    }\r\n    set(time, value) {\r\n        if (this.minValue == null || value < this.minValue) {\r\n            this.minValue = value;\r\n        }\r\n        if (this.maxValue == null || value > this.maxValue) {\r\n            this.maxValue = value;\r\n        }\r\n        this.tree.set(time, value);\r\n    }\r\n    forRange(start, end, onEach) {\r\n        if (!this.tree) {\r\n            return;\r\n        }\r\n        let startNode = this.tree.getPairOrNextLower(start);\r\n        if (!startNode) {\r\n            startNode = this.tree.getPairOrNextHigher(start);\r\n        }\r\n        let endNode = this.tree.getPairOrNextHigher(end);\r\n        if (!endNode) {\r\n            endNode = this.tree.getPairOrNextLower(end);\r\n        }\r\n        this.tree.forRange(startNode[0], endNode[0], true, onEach);\r\n    }\r\n    static fromJson(json) {\r\n        let out = new DataChannel(json.title, bristolboard_1.FColor.fromHex(json.color, '', ''));\r\n        out.tree.setPairs(json.data);\r\n        return out;\r\n    }\r\n    toJson() {\r\n        let data = this.tree.toArray();\r\n        return {\r\n            title: this.title,\r\n            color: this.color.toHexString(),\r\n            data: data\r\n        };\r\n    }\r\n}\r\nexports.DataChannel = DataChannel;\r\nclass DataChannelStreaming extends DataChannel {\r\n    constructor(id, color, source) {\r\n        super(id.split('~')[1], color);\r\n        this.pullingForward = false;\r\n        this.pullingBackward = false;\r\n        this.pullingRoot = false;\r\n        this.hasMoreBackwards = true;\r\n        this.hasMoreForewards = true;\r\n        this.source = source;\r\n        this.id = id;\r\n        this.tree = new sorted_btree_1.default();\r\n    }\r\n    get hasValue() {\r\n        return this.tree && this.tree.size > 0;\r\n    }\r\n    pullBackwards() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this.pullingBackward || !this.hasMoreBackwards) {\r\n                return false;\r\n            }\r\n            let ths = this;\r\n            this.pullingBackward = true;\r\n            let time = ths.tree.minKey();\r\n            let backwardsResp = yield this.source({\r\n                time: time, limit: 100,\r\n                channelId: this.id, direction: 'before'\r\n            });\r\n            if (backwardsResp.success) {\r\n                this.tree.setPairs(backwardsResp.data);\r\n                this.hasMoreBackwards = backwardsResp.hasMore;\r\n                this.pullingBackward = false;\r\n                return;\r\n                // rootResp.\r\n            }\r\n            throw new Error(`Failed to pull backward from ${time}`);\r\n        });\r\n    }\r\n    pullForwards() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this.pullingForward || !this.hasMoreForewards) {\r\n                return false;\r\n            }\r\n            let ths = this;\r\n            this.pullingForward = true;\r\n            let time = ths.tree.minKey();\r\n            let forewardResp = yield this.source({\r\n                time: time, limit: 100,\r\n                channelId: this.id, direction: 'after'\r\n            });\r\n            if (forewardResp.success) {\r\n                this.tree.setPairs(forewardResp.data);\r\n                this.hasMoreBackwards = forewardResp.hasMore;\r\n                this.pullingForward = false;\r\n                return;\r\n                // rootResp.\r\n            }\r\n            throw new Error(`Failed to pull forward from ${time}`);\r\n        });\r\n    }\r\n    pullRoot(time) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this.pullingRoot) {\r\n                return false;\r\n            }\r\n            this.pullingRoot = true;\r\n            let rootResp = yield this.source({\r\n                time: time, limit: 100,\r\n                channelId: this.id, direction: 'before'\r\n            });\r\n            if (rootResp.success) {\r\n                this.tree.setPairs(rootResp.data);\r\n                this.pullingRoot = false;\r\n                return;\r\n                // rootResp.\r\n            }\r\n            throw new Error(`Failed to pull root from ${time}`);\r\n        });\r\n    }\r\n    forRange(start, end, onEach) {\r\n        let found = false;\r\n        let ths = this;\r\n        if (this.hasValue) {\r\n            let lastTime = -1;\r\n            super.forRange(start, end, (time, value, count) => {\r\n                found = true;\r\n                lastTime = time;\r\n                switch (count) {\r\n                    case 0:\r\n                        console.log('found first value');\r\n                        if (time > start) {\r\n                            this.pullBackwards();\r\n                        }\r\n                }\r\n                onEach(time, value, count);\r\n            });\r\n            if (lastTime != -1 && lastTime < end) {\r\n                ths.pullForwards();\r\n            }\r\n        }\r\n        if (!found) {\r\n            this.pullRoot(end);\r\n        }\r\n        // super.forRange()\r\n    }\r\n}\r\nexports.DataChannelStreaming = DataChannelStreaming;\r\n//# sourceMappingURL=data:application/json;base64,","module.exports = require(\"bristolboard\");","module.exports = require(\"child_process\");","module.exports = require(\"crypto\");","module.exports = require(\"firebase-functions\");","module.exports = require(\"fs\");","module.exports = require(\"node-fetch\");","module.exports = require(\"path\");","module.exports = require(\"sorted-btree\");","module.exports = require(\"xml2js\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./srcFunctions/WPFunctions.ts\");\n",""],"names":[],"sourceRoot":""}