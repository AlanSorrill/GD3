{"version":3,"file":"index.js","mappings":";;;;;;;;;;AAAa;AACb;AACA,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,iBAAiB,GAAG,mBAAmB,GAAG,gBAAgB,GAAG,eAAe,GAAG,gBAAgB;AAC/F,kBAAkB,mBAAO,CAAC,8CAAoB;AAC9C,qBAAqB,mBAAO,CAAC,8BAAY;AACzC,WAAW,mBAAO,CAAC,cAAI;AACvB,aAAa,mBAAO,CAAC,kBAAM;AAC3B,mBAAO,CAAC,kEAAsB;AAC9B,qBAAqB,mBAAO,CAAC,gEAAqB;AAClD,wBAAwB,mBAAO,CAAC,oCAAe;AAC/C,eAAe,mBAAO,CAAC,sBAAQ;AAC/B;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,oDAAoD,SAAS;AAC7D;AACA;AACA,KAAK;AACL;AACA;AACA,qDAAqD,YAAY;AACjE;AACA;AACA;AACA;AACA,CAAC;AACD,eAAe;AACf;AACA;AACA,CAAC;AACD,gBAAgB;AAChB;AACA;AACA,iCAAiC,WAAW;AAC5C;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,qCAAqC,UAAU;AAC/C;AACA;AACA,mBAAmB;AACnB;AACA,+BAA+B,UAAU;AACzC;AACA,wDAAwD,SAAS;AACjE;AACA,+CAA+C,SAAS;AACxD;AACA;AACA;AACA;AACA;AACA,6CAA6C,UAAU;AACvD;AACA;AACA,6BAA6B,UAAU;AACvC,mBAAmB,kFAAkF;AACrG;AACA,KAAK;AACL;AACA,mCAAmC,WAAW;AAC9C;AACA;AACA;AACA;AACA,CAAC;AACD,iBAAiB;AACjB;AACA;AACA;AACA,sCAAsC,6BAA6B;AACnE;AACA;AACA;AACA;AACA,sCAAsC,mCAAmC;AACzE;AACA;AACA;AACA,kCAAkC,kCAAkC;AACpE,KAAK;AACL,CAAC;AACD,2CAA2C;;;;;;;;;;AC7G9B;AACb;AACA,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,0BAA0B,GAAG,iBAAiB,GAAG,iBAAiB,GAAG,oBAAoB,GAAG,eAAe,GAAG,yBAAyB;AACvI,eAAe,yDAA6B;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,gBAAgB;AACpC;AACA;AACA,uCAAuC,EAAE;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,oBAAoB,gBAAgB;AACpC,wBAAwB,mBAAmB;AAC3C;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,4BAA4B,IAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,0BAA0B;AAC1B,2CAA2C;;;;;;;;;;ACjI9B;AACb;AACA,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,4BAA4B,GAAG,mBAAmB,GAAG,gBAAgB,GAAG,sBAAsB,GAAG,4BAA4B,GAAG,qBAAqB,GAAG,gBAAgB,GAAG,uBAAuB,GAAG,gCAAgC,GAAG,6BAA6B,GAAG,+BAA+B,GAAG,gCAAgC,GAAG,iCAAiC,GAAG,gCAAgC,GAAG,wBAAwB,GAAG,6BAA6B,GAAG,4BAA4B,GAAG,yBAAyB,GAAG,iBAAiB,GAAG,mBAAmB,GAAG,kBAAkB,GAAG,kBAAkB;AAC3lB;AACA,IAAI,IAAI;AACR,mBAAmB,mBAAO,CAAC,8BAAY;AACvC;AACA,uBAAuB,mBAAO,CAAC,kCAAc;AAC7C,uBAAuB,mBAAO,CAAC,kCAAc;AAC7C,sBAAsB,mBAAO,CAAC,2DAAe;AAC7C;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sCAAsC,kBAAkB,KAAK;AAC9D;AACA;AACA,wBAAwB,UAAU;AAClC,oBAAoB,EAAE;AACtB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oCAAoC,iBAAiB,KAAK;AAC3D;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,CAAC,4DAA4D,6BAA6B,KAAK;AAC/F;AACA;AACA;AACA;AACA,CAAC,kDAAkD,wBAAwB,KAAK;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kEAAkE,gCAAgC,KAAK;AACxG;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oEAAoE,iCAAiC,KAAK;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kEAAkE,gCAAgC,KAAK;AACxG;AACA;AACA;AACA;AACA,CAAC,gEAAgE,+BAA+B,KAAK;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4DAA4D,6BAA6B,KAAK;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kEAAkE,gCAAgC,KAAK;AACxG,uBAAuB;AACvB;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,YAAY,OAAO,IAAI;AAC3D,8DAA8D,QAAQ,aAAa,QAAQ;AAC3F,8DAA8D,QAAQ,aAAa,QAAQ;AAC3F,8DAA8D,QAAQ,aAAa,QAAQ;AAC3F;AACA;AACA;AACA;AACA,gBAAgB;AAChsCAAsC;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,gCAAgC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E,GAAG,GAAG,EAAE;AACnF;AACA;AACA;AACA;AACA;AACA,yDAAyD,uBAAuB;AAChF;AACA,iCAAiC,sBAAsB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,KAAK,QAAQ,KAAK;AAClD;AACA,gCAAgC,KAAK,QAAQ,KAAK;AAClD;AACA,gCAAgC,KAAK,QAAQ,KAAK;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,OAAO;AAC9D;AACA,oDAAoD,OAAO;AAC3D;AACA;AACA,aAAa;AACb,6CAA6C,KAAK,GAAG,cAAc,OAAO,wBAAwB;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,2BAA2B,QAAQ;AACnC,yBAAyB,EAAE;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,iDAAiD,IAAI;AACrD;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,uCAAuC,gDAAgD,SAAS,GAAG,mBAAmB,QAAQ,sBAAsB,KAAK;AACzJ;AACA,sCAAsC,UAAU,GAAG,mBAAmB;AACtE,uCAAuC,SAAS,SAAS,oDAAoD,IAAI,kCAAkC;AACnJ,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,cAAc;AACnD;AACA;AACA;AACA,sBAAsB,cAAc;AACpC,4DAA4D,kBAAkB;AAC9E;AACA;AACA,2BAA2B,kFAAkF;AAC7G;AACA,aAAa;AACb;AACA;AACA;AACA,gFAAgF;AAChF;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,4BAA4B;AACxD,4CAA4C,sBAAsB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,KAAK,EAAE,qBAAqB;AAC5E;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT,uBAAuB;AACvB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA,4BAA4B,mBAAmB;AAC/C,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,YAAY,cAAc,gBAAgB;AAC3F;AACA;AACA;AACA;AACA,iDAAiD,YAAY,eAAe,gBAAgB;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gGAAgG,GAAG;AACnG;AACA;AACA;AACA,+EAA+E,UAAU;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,gBAAgB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,2BAA2B;AAC3B;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,QAAQ;AACnE;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,kCAAkC,cAAc;AAChD,oCAAoC,aAAa;AACjD,uCAAuC,KAAK,GAAG,iCAAiC;AAChF,qDAAqD,UAAU;AAC/D;AACA;AACA;AACA,2FAA2F,sBAAsB,EAAE,sBAAsB,QAAQ,QAAQ;AACzJ;AACA;AACA;AACA;AACA;AACA,oDAAoD,OAAO;AAC3D;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;AACA,+DAA+D;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,sBAAsB;AACrE,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,0BAA0B,UAAU;AACpC,aAAa;AACb;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,2CAA2C;;;;;;;;;;ACxzB3C;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;UEtBA;UACA;UACA;UACA","sources":["webpack://gdsn3/./srcFunctions/WPFunctions.ts","webpack://gdsn3/./srcFunctions/common/FBF_Helpers.ts","webpack://gdsn3/./srcFunctions/common/WonderData.ts","webpack://gdsn3/external commonjs \"bristolboard\"","webpack://gdsn3/external commonjs \"firebase-functions\"","webpack://gdsn3/external commonjs \"node-fetch\"","webpack://gdsn3/external commonjs \"sorted-btree\"","webpack://gdsn3/external commonjs \"xml2js\"","webpack://gdsn3/external node-commonjs \"child_process\"","webpack://gdsn3/external node-commonjs \"crypto\"","webpack://gdsn3/external node-commonjs \"fs\"","webpack://gdsn3/external node-commonjs \"path\"","webpack://gdsn3/webpack/bootstrap","webpack://gdsn3/webpack/before-startup","webpack://gdsn3/webpack/startup","webpack://gdsn3/webpack/after-startup"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HashTypes = exports.WonderProxy = exports.RonaTest = exports.ReqTest = exports.listener = void 0;\nconst functions = require(\"firebase-functions\");\nconst node_fetch_1 = require(\"node-fetch\");\nconst fs = require(\"fs\");\nconst path = require(\"path\");\nrequire(\"./common/FBF_Helpers\");\nconst WonderData_1 = require(\"./common/WonderData\");\nconst child_process_1 = require(\"child_process\");\nconst crypto = require(\"crypto\");\n// // Start writing Firebase Functions\n// // https://firebase.google.com/docs/functions/typescript\n//\nconsole.log('test');\nexports.listener = functions.https.onRequest((req, res) => __awaiter(void 0, void 0, void 0, function* () {\n    res.setHeader('Content-Type', 'application/xml');\n    let exampleParams = WonderData_1.ExampleRequest.replace('</request-parameters>', '').replace('<request-parameters>', '').replaceAll('<value/>', '<value></value>').replaceAll('<parameter>', '').replaceAll('</name>', '').replaceAll('</value>', '').replaceAll('<name>', '').split('</parameter>').map(str => {\n        let tmp = str.split('<value>');\n        let name = tmp[0];\n        let rest = tmp.slice(1);\n        return [name, rest];\n    });\n    let reqTestParams = new WonderData_1.WonderRequest().groupBy('Year').groupBy('Race').addParam('F_D76.V25', WonderData_1.WonderQueryParam_Util.All).toParamMap();\n    let requestParams = new Map();\n    let inconsistencies = [];\n    exampleParams.forEach((value) => {\n        if (!reqTestParams.has(value[0])) {\n            inconsistencies.push(`Request missing ${value[0]}`);\n        }\n        requestParams.set(value[0], value[1]);\n    });\n    for (let exParamName in reqTestParams.keys()) {\n        if (!requestParams.has(exParamName)) {\n            inconsistencies.push(`Examples missing ${exParamName}`);\n        }\n    }\n    res.setHeader('Content-Type', 'application/json');\n    res.send(JSON.stringify(inconsistencies));\n}));\nexports.ReqTest = functions.https.onRequest((req, res) => __awaiter(void 0, void 0, void 0, function* () {\n    res.setHeader('Content-Type', 'application/xml');\n    res.send(new WonderData_1.WonderRequest().groupBy('Year').addParam('M_1', 'D76.M1').toString());\n}));\nexports.RonaTest = functions.https.onRequest((req, res) => __awaiter(void 0, void 0, void 0, function* () {\n    let data = yield new WonderData_1.WonderRequest().groupBy('Year').groupBy('AgeGroups').filterByYear(['1999', '2001']).request();\n    let exportPath = path.resolve(__dirname, '../data/exampleResponse.json');\n    console.log(`saving to file${exportPath}`);\n    fs.writeFileSync(exportPath, JSON.stringify(data));\n    console.log('saved');\n    res.setHeader('Content-Type', 'application/json');\n    res.setHeader('Access-Control-Allow-Origin', '*');\n    res.send(data);\n}));\nfunction requestToFileName(fetchBody) {\n    console.log(`Req to file name\\n${fetchBody}`);\n    return crypto.createHash('md5').update(fetchBody).digest(\"hex\");\n}\nexports.WonderProxy = functions.https.onRequest((req, res) => __awaiter(void 0, void 0, void 0, function* () {\n    let fetchBody = req.body['request_xml'];\n    console.log(`Fetch body: ${fetchBody}`);\n    let fileName = requestToFileName(fetchBody);\n    let exportPath = path.resolve(__dirname, `../data/${fileName}.xml`);\n    if (fs.existsSync(exportPath)) {\n        console.log(`Using cache for request ${fileName}`);\n        res.setHeader('Content-Type', 'application/xml');\n        res.setHeader('Access-Control-Allow-Origin', '*');\n        res.sendFile(exportPath);\n        return;\n    }\n    console.log(`Sending query to wonder:\\n${fetchBody}`);\n    let result = yield (0, node_fetch_1.default)(`https://wonder.cdc.gov/controller/datarequest/D76`, {\n        method: 'POST',\n        body: `request_xml=${fetchBody}`,\n        headers: { 'Content-Type': 'application/x-www-form-urlencoded', 'Accept': 'application/xml' },\n        // mode: 'no-cors'\n    });\n    let resultText = yield result.text();\n    console.log(`saving to file: ${exportPath}`);\n    fs.writeFileSync(exportPath, resultText);\n    res.setHeader('Content-Type', 'application/xml');\n    res.setHeader('Access-Control-Allow-Origin', '*');\n    res.send(resultText);\n}));\nexports.HashTypes = functions.https.onRequest((req, res) => __awaiter(void 0, void 0, void 0, function* () {\n    (0, child_process_1.exec)('openssl list -digest-algorithms', (err, stdout, stderr) => {\n        if (err) {\n            console.log('err', err);\n            res.send(JSON.stringify({ status: 'Error', error: err }));\n            return;\n        }\n        if (stderr) {\n            console.log('stderr', stderr);\n            res.send(JSON.stringify({ status: 'STDError', error: stderr }));\n            return;\n        }\n        console.log('success', stdout);\n        res.send(JSON.stringify({ status: 'Success', value: stdout }));\n    });\n}));\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiV1BGdW5jdGlvbnMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmNGdW5jdGlvbnMvV1BGdW5jdGlvbnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUEsZ0RBQWdEO0FBQ2hELDJDQUE4QjtBQUU5Qix5QkFBd0I7QUFDeEIsNkJBQTRCO0FBQzVCLGdDQUE2QjtBQUM3QixvREFBb0c7QUFDcEcsaURBQW9DO0FBQ3BDLGlDQUFnQztBQUVoQyxzQ0FBc0M7QUFDdEMsMkRBQTJEO0FBQzNELEVBQUU7QUFDRixPQUFPLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFBO0FBRU4sUUFBQSxRQUFRLEdBQUcsU0FBUyxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsQ0FBTyxHQUFHLEVBQUUsR0FBRyxFQUFFLEVBQUU7SUFDbkUsR0FBRyxDQUFDLFNBQVMsQ0FBQyxjQUFjLEVBQUUsaUJBQWlCLENBQUMsQ0FBQTtJQUNoRCxJQUFJLGFBQWEsR0FBeUIsMkJBQWMsQ0FBQyxPQUFPLENBQUMsdUJBQXVCLEVBQUUsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLHNCQUFzQixFQUFFLEVBQUUsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxVQUFVLEVBQUUsaUJBQWlCLENBQUMsQ0FBQyxVQUFVLENBQUMsYUFBYSxFQUFFLEVBQUUsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxTQUFTLEVBQUUsRUFBRSxDQUFDLENBQUMsVUFBVSxDQUFDLFVBQVUsRUFBRSxFQUFFLENBQUMsQ0FBQyxVQUFVLENBQUMsUUFBUSxFQUFFLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxjQUFjLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLEVBQUU7UUFDdFQsSUFBSSxHQUFHLEdBQUcsR0FBRyxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUMvQixJQUFJLElBQUksR0FBRyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUE7UUFDakIsSUFBSSxJQUFJLEdB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","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.replaceAllInString = exports.isAllTrue = exports.XmlToJson = exports.concactinate = exports.flatten = exports.ensureFBF_Helpers = void 0;\nconst Xml2JS = require('xml2js').parseString;\nMap.prototype.keysAsArray = function () {\n    let ths = this;\n    let out = [];\n    for (let key of ths.keys()) {\n        out.push(key);\n    }\n    return out;\n};\nArray.prototype.mapOrDrop = function (shouldKeep) {\n    let ths = this;\n    let out = [];\n    for (let i = 0; i < ths.length; i++) {\n        let fresh = shouldKeep(this[i], i);\n        if (fresh == 'DROP') {\n            // console.log(`Dropping ${i}`,this[i])\n        }\n        else {\n            out.push(fresh);\n        }\n    }\n    return out;\n};\nMap.prototype.getWithDefault = function (key, defaultValue) {\n    let ths = this;\n    if (!ths.has(key)) {\n        ths.set(key, defaultValue(key));\n    }\n    return ths.get(key);\n};\nArray.prototype.pushAll = function (stuff) {\n    if (Array.isArray(stuff)) {\n        for (let item of stuff) {\n            this.push(item);\n        }\n    }\n    else {\n        this.push(stuff);\n    }\n};\nString.prototype.isBoolean = function () {\n    return this.toLowerCase() == 'true' || this.toLowerCase() == 'false';\n};\nString.prototype.isNumber = function () {\n    return !Number.isNaN(Number(this));\n};\nif (typeof Map.prototype.toArray == 'undefined') {\n    console.log(`Shimming Map.toArray`);\n    Map.prototype.toArray = function () {\n        let ths = this;\n        let out = [];\n        for (let key of ths.keys()) {\n            out.push([key, ths.get(key)]);\n        }\n        return out;\n    };\n}\nfunction ensureFBF_Helpers() {\n    console.log();\n}\nexports.ensureFBF_Helpers = ensureFBF_Helpers;\nfunction flatten(arr) {\n    let out = [];\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = 0; j < arr[i].length; j++) {\n            out.push(arr[i][j]);\n        }\n    }\n    return out;\n}\nexports.flatten = flatten;\nfunction concactinate(a, b) {\n    let out = [];\n    a.forEach((aa) => {\n        out.push(aa);\n    });\n    b.forEach((bb) => {\n        out.push(bb);\n    });\n    return out;\n}\nexports.concactinate = concactinate;\nfunction XmlToJson(xml) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((acc, rej) => {\n            Xml2JS(`<data>${xml}</data>`, (err, value) => {\n                if (err) {\n                    rej(err);\n                }\n                else {\n                    // console.log('cleaning',value)\n                    // let result = cleanXmlToJson(value) as XmlElement;\n                    acc(value.data);\n                }\n            });\n        });\n    });\n}\nexports.XmlToJson = XmlToJson;\nif (typeof String.prototype.replaceAll == 'undefined') {\n    String.prototype.replaceAll = function (a, b) {\n        return this.split(a).join(b);\n    };\n}\nfunction isAllTrue(bools) {\n    for (let i = 0; i < bools.length; i++) {\n        if (bools[i]) {\n            return true;\n        }\n    }\n    return false;\n}\nexports.isAllTrue = isAllTrue;\nfunction replaceAllInString(target, a, b) {\n    return target.split(a).join(b);\n}\nexports.replaceAllInString = replaceAllInString;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRkJGX0hlbHBlcnMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmNGdW5jdGlvbnMvY29tbW9uL0ZCRl9IZWxwZXJzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUVBLE1BQU0sTUFBTSxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQyxXQUFXLENBQUM7QUFzQjdDLEdBQUcsQ0FBQyxTQUFTLENBQUMsV0FBVyxHQUFHO0lBQ3hCLElBQUksR0FBRyxHQUFHLElBQWdCLENBQUE7SUFDMUIsSUFBSSxHQUFHLEdBQVEsRUFBRSxDQUFBO0lBQ2pCLEtBQUksSUFBSSxHQUFHLElBQUksR0FBRyxDQUFDLElBQUksRUFBRSxFQUFDO1FBQ3RCLEdBQUcsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUE7S0FDaEI7SUFDRCxPQUFPLEdBQUcsQ0FBQztBQUNmLENBQUMsQ0FBQTtBQUNELEtBQUssQ0FBQyxTQUFTLENBQUMsU0FBUyxHQUFHLFVBQWdCLFVBQXFEO0lBQzdGLElBQUksR0FBRyxHQUFHLElBQWdCLENBQUE7SUFDMUIsSUFBSSxHQUFHLEdBQVEsRUFBRSxDQUFBO0lBQ2pCLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxHQUFHLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO1FBQ2pDLElBQUksS0FBSyxHQUFHLFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUE7UUFDbEMsSUFBSSxLQUFLLElBQUksTUFBTSxFQUFFO1lBQ2pCLHVDQUF1QztTQUMxQzthQUFNO1lBQ0gsR0FBRyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQTtTQUNsQjtLQUNKO0lBQ0QsT0FBTyxHQUFHLENBQUM7QUFDZixDQUFDLENBQUE7QUFDRCxHQUFHLENBQUMsU0FBUyxDQUFDLGNBQWMsR0FBRyxVQUFnQixHQUFNLEVBQUUsWUFBMkI7SUFDOUUsSUFB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","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DataChannelStreaming = exports.DataChannel = exports.Database = exports.ExampleRequest = exports.ConsumableLinkedList = exports.WonderRequest = exports.DeWonder = exports.AllWonderParams = exports.WonderQueryParam_GroupBy = exports.WonderQueryParam_Race = exports.WonderQueryParam_Gender = exports.WonderQueryParam_Measure = exports.WonderQueryParam_AgeGroup = exports.WonderQueryParam_Include = exports.WonderQueryParam = exports.WonderQueryParam_Util = exports.parseYearMonthString = exports.isYearMonthString = exports.MonthEnum = exports.YearStrings = exports.MonthNames = exports.isWQP_None = void 0;\n// import * as XMLParser from 'xml2js'\nif (true) {\n    global.fetch = require('node-fetch');\n}\nconst bristolboard_1 = require(\"bristolboard\");\nconst sorted_btree_1 = require(\"sorted-btree\");\nconst FBF_Helpers_1 = require(\"./FBF_Helpers\");\n// export type WonderQueryParamName = (keyof typeof WonderQueryParam) \nfunction isWQP_None(param) {\n    return (param == 'None') || (param == WonderQueryParam_Util.None);\n}\nexports.isWQP_None = isWQP_None;\nvar MonthNames;\n(function (MonthNames) {\n    MonthNames[MonthNames[\"Jan\"] = 1] = \"Jan\";\n    MonthNames[MonthNames[\"Feb\"] = 2] = \"Feb\";\n    MonthNames[MonthNames[\"Mar\"] = 3] = \"Mar\";\n    MonthNames[MonthNames[\"Apr\"] = 4] = \"Apr\";\n    MonthNames[MonthNames[\"May\"] = 5] = \"May\";\n    MonthNames[MonthNames[\"Jun\"] = 6] = \"Jun\";\n    MonthNames[MonthNames[\"Jul\"] = 7] = \"Jul\";\n    MonthNames[MonthNames[\"Aug\"] = 8] = \"Aug\";\n    MonthNames[MonthNames[\"Sep\"] = 9] = \"Sep\";\n    MonthNames[MonthNames[\"Oct\"] = 10] = \"Oct\";\n    MonthNames[MonthNames[\"Nov\"] = 11] = \"Nov\";\n    MonthNames[MonthNames[\"Dec\"] = 12] = \"Dec\";\n})(MonthNames = exports.MonthNames || (exports.MonthNames = {}));\nfunction YearStrings(start = 1999, end = 2020) {\n    let out = [];\n    for (let i = start; i <= end; i++) {\n        out.push(`${i}`);\n    }\n    return out;\n}\nexports.YearStrings = YearStrings;\nvar MonthEnum;\n(function (MonthEnum) {\n    MonthEnum[MonthEnum[\"January\"] = 0] = \"January\";\n    MonthEnum[MonthEnum[\"February\"] = 1] = \"February\";\n    MonthEnum[MonthEnum[\"March\"] = 2] = \"March\";\n    MonthEnum[MonthEnum[\"April\"] = 3] = \"April\";\n    MonthEnum[MonthEnum[\"May\"] = 4] = \"May\";\n    MonthEnum[MonthEnum[\"June\"] = 5] = \"June\";\n    MonthEnum[MonthEnum[\"July\"] = 6] = \"July\";\n    MonthEnum[MonthEnum[\"August\"] = 7] = \"August\";\n    MonthEnum[MonthEnum[\"September\"] = 8] = \"September\";\n    MonthEnum[MonthEnum[\"October\"] = 9] = \"October\";\n    MonthEnum[MonthEnum[\"November\"] = 10] = \"November\";\n    MonthEnum[MonthEnum[\"December\"] = 11] = \"December\";\n})(MonthEnum = exports.MonthEnum || (exports.MonthEnum = {}));\nfunction isYearMonthString(str) {\n    return str.split('-').length == 2;\n}\nexports.isYearMonthString = isYearMonthString;\nfunction parseYearMonthString(str) {\n    let parts = str.split('-');\n    switch (parts.length) {\n        case 0:\n            return null;\n        case 1:\n            return [parts[0], -1];\n        case 2:\n            return [parts[0], MonthEnum[parts[1]]];\n    }\n}\nexports.parseYearMonthString = parseYearMonthString;\nvar WonderQueryParam_Util;\n(function (WonderQueryParam_Util) {\n    WonderQueryParam_Util[\"None\"] = \"*None*\";\n    WonderQueryParam_Util[\"All\"] = \"*All*\";\n})(WonderQueryParam_Util = exports.WonderQueryParam_Util || (exports.WonderQueryParam_Util = {}));\nvar WonderQueryParam;\n(function (WonderQueryParam) {\n    //FIV\n    WonderQueryParam[\"YearAndMonth\"] = \"D76.V1\";\n})(WonderQueryParam = exports.WonderQueryParam || (exports.WonderQueryParam = {}));\nvar WonderQueryParam_Include;\n(function (WonderQueryParam_Include) {\n    WonderQueryParam_Include[\"YearAndMonth\"] = \"D76.V1\";\n    WonderQueryParam_Include[\"CensusRegions\"] = \"D76.V10\";\n    WonderQueryParam_Include[\"ICD10Codes\"] = \"D76.V2\";\n    WonderQueryParam_Include[\"HHSRegions\"] = \"D76.V27\";\n    WonderQueryParam_Include[\"StatesAndCounties\"] = \"D76.V9\";\n})(WonderQueryParam_Include = exports.WonderQueryParam_Include || (exports.WonderQueryParam_Include = {}));\nvar WonderQueryParam_AgeGroup;\n(function (WonderQueryParam_AgeGroup) {\n    WonderQueryParam_AgeGroup[\"TenYear\"] = \"D76.V5\";\n    WonderQueryParam_AgeGroup[\"FiveYear\"] = \"D76.V51\";\n    WonderQueryParam_AgeGroup[\"SingleYear\"] = \"D76.V52\";\n    WonderQueryParam_AgeGroup[\"Infant\"] = \"D76.V6\";\n})(WonderQueryParam_AgeGroup = exports.WonderQueryParam_AgeGroup || (exports.WonderQueryParam_AgeGroup = {}));\nvar WonderQueryParam_Measure;\n(function (WonderQueryParam_Measure) {\n    WonderQueryParam_Measure[\"Deaths\"] = \"D76.M1\";\n    WonderQueryParam_Measure[\"Population\"] = \"D76.M2\";\n    WonderQueryParam_Measure[\"CrudeRate\"] = \"D76.M3\";\n    WonderQueryParam_Measure[\"CrudeRateStandardError\"] = \"D76.M31\";\n    WonderQueryParam_Measure[\"CrudeRate95ConfidenceInterval\"] = \"D76.M32\";\n    WonderQueryParam_Measure[\"AgeAdjustedRate\"] = \"D76.M4\";\n    WonderQueryParam_Measure[\"AgeAdjustedRateStandardError\"] = \"D76.M41\";\n    WonderQueryParam_Measure[\"AgeAdjustedRateConfidenceInterval\"] = \"D76.M42\";\n    WonderQueryParam_Measure[\"PercentOfTotalDeaths\"] = \"D76.M9\";\n})(WonderQueryParam_Measure = exports.WonderQueryParam_Measure || (exports.WonderQueryParam_Measure = {}));\nvar WonderQueryParam_Gender;\n(function (WonderQueryParam_Gender) {\n    WonderQueryParam_Gender[\"Male\"] = \"M\";\n    WonderQueryParam_Gender[\"Female\"] = \"F\";\n})(WonderQueryParam_Gender = exports.WonderQueryParam_Gender || (exports.WonderQueryParam_Gender = {}));\nvar WonderQueryParam_Race;\n(function (WonderQueryParam_Race) {\n    WonderQueryParam_Race[\"HispanicOrLatino\"] = \"2135-2\";\n    WonderQueryParam_Race[\"NotHispanicOrLatino\"] = \"2186-2\";\n    WonderQueryParam_Race[\"NotStated\"] = \"NS\";\n    WonderQueryParam_Race[\"AmericanIndianOrAlaskaNative\"] = \"1002-5\";\n    WonderQueryParam_Race[\"AsianOrPacificIslander\"] = \"A-PI\";\n    WonderQueryParam_Race[\"Black\"] = \"2054-5\";\n    WonderQueryParam_Race[\"White\"] = \"2106-3\";\n})(WonderQueryParam_Race = exports.WonderQueryParam_Race || (exports.WonderQueryParam_Race = {}));\nvar WonderQueryParam_GroupBy;\n(function (WonderQueryParam_GroupBy) {\n    WonderQueryParam_GroupBy[\"CensusRegion\"] = \"D76.V10-level1\";\n    WonderQueryParam_GroupBy[\"CensusDivision\"] = \"D76.V10-level2\";\n    WonderQueryParam_GroupBy[\"HHSRegion\"] = \"D76.V27-level1\";\n    WonderQueryParam_GroupBy[\"State\"] = \"D76.V9-level1\";\n    WonderQueryParam_GroupBy[\"County\"] = \"D76.V9-level2\";\n    WonderQueryParam_GroupBy[\"Urbanization2013\"] = \"D76.V19\";\n    WonderQueryParam_GroupBy[\"Urbanization2006\"] = \"D76.V11\";\n    WonderQueryParam_GroupBy[\"AgeGroups\"] = \"D76.V5\";\n    WonderQueryParam_GroupBy[\"Gender\"] = \"D76.V7\";\n    WonderQueryParam_GroupBy[\"HispanicOrigin\"] = \"D76.V17\";\n    WonderQueryParam_GroupBy[\"Race\"] = \"D76.V8\";\n    //time\n    WonderQueryParam_GroupBy[\"Year\"] = \"D76.V1-level1\";\n    WonderQueryParam_GroupBy[\"Month\"] = \"D76.V1-level2\";\n    WonderQueryParam_GroupBy[\"Weekday\"] = \"D76.V24\";\n    WonderQueryParam_GroupBy[\"Autopsy\"] = \"D76.V20\";\n    WonderQueryParam_GroupBy[\"PlaceofDeath\"] = \"D76.V21\";\n    WonderQueryParam_GroupBy[\"LeadingCausesofDeath\"] = \"D76.V28\";\n    WonderQueryParam_GroupBy[\"LeadingCausesofDeathInfants\"] = \"D76.V29\";\n    WonderQueryParam_GroupBy[\"ICDChapter\"] = \"D76.V2-level1\";\n    WonderQueryParam_GroupBy[\"ICDSubChapter\"] = \"D76.V2-level2\";\n    WonderQueryParam_GroupBy[\"CauseOfdeath\"] = \"D76.V2-level3\";\n    WonderQueryParam_GroupBy[\"ICD10_113CauseList\"] = \"D76.V4\";\n    WonderQueryParam_GroupBy[\"ICD10_130CauseListInfants\"] = \"D76.V12\";\n    WonderQueryParam_GroupBy[\"InjuryIntent\"] = \"D76.V22\";\n    WonderQueryParam_GroupBy[\"InjuryMechanismAndAllOtherLeadingCauses\"] = \"D76.V23\";\n    WonderQueryParam_GroupBy[\"DrugAlcoholInducedCauses\"] = \"D76.V25\";\n})(WonderQueryParam_GroupBy = exports.WonderQueryParam_GroupBy || (exports.WonderQueryParam_GroupBy = {}));\nexports.AllWonderParams = [WonderQueryParam_Include, WonderQueryParam_AgeGroup, WonderQueryParam_GroupBy, , WonderQueryParam_Measure, , WonderQueryParam_Util];\nlet WonderQueryParam_Reversed_Cache = null;\n// export function WonderQueryParam_Reversed() {\n//   if (WonderQueryParam_Reversed_Cache == null) {\n//     let WonderQueryParam_Reversed_Cache = {} as any\n//     for (let key in WonderQueryParam) {\n//       WonderQueryParam_Reversed_Cache[WonderQueryParam[key]] = key;\n//     }\n//   }\n//   return WonderQueryParam_Reversed_Cache;\n// }\nfunction DeWonder(text) {\n    let tmp = text;\n    let allTranslations = [];\n    for (let groupName in exports.AllWonderParams) {\n        let group = exports.AllWonderParams[groupName];\n        for (let key in group) {\n            allTranslations.push([groupName, group[key], key]);\n        }\n    }\n    allTranslations = allTranslations.sort((a, b) => (b[1].length - a[1].length));\n    for (let item of allTranslations) {\n        // console.log(`Replacing ${group[key]} with ${key}`)\n        tmp = (0, FBF_Helpers_1.replaceAllInString)(tmp, `F_${item[1]}`, `F_Only_${item[2]}`);\n        tmp = (0, FBF_Helpers_1.replaceAllInString)(tmp, `I_${item[1]}`, `I_Only_${item[2]}`);\n        tmp = (0, FBF_Helpers_1.replaceAllInString)(tmp, `V_${item[1]}`, `V_Only_${item[2]}`);\n        tmp = (0, FBF_Helpers_1.replaceAllInString)(tmp, item[1], item[2]);\n    }\n    return tmp;\n}\nexports.DeWonder = DeWonder;\nclass WonderRequest {\n    constructor() {\n        this.params = new Map();\n        this.groupByCount = 0;\n        this.groupByCountLimit = 5;\n        this.defaultParams = {\n            'dataset_code': ['D76'],\n            'B_2': [WonderQueryParam_Util.None],\n            'B_3': [WonderQueryParam_Util.None],\n            'B_4': [WonderQueryParam_Util.None],\n            'B_5': [WonderQueryParam_Util.None],\n            'O_age': [WonderQueryParam_AgeGroup.TenYear],\n            'O_location': [WonderQueryParam_Include.StatesAndCounties],\n            'O_aar_pop': ['0000'],\n            // 'O_aar_enable': ['false'],\n            'O_urban': [WonderQueryParam_GroupBy.Urbanization2013],\n            // 'O_aar_CI': ['true'],\n            'action-Send': ['Send'],\n            // 'O_aar_SE': ['true'],\n            'O_aar': ['aar_none'],\n            'M_1': [WonderQueryParam_Measure.Deaths],\n            'M_2': [WonderQueryParam_Measure.Population],\n            'M_3': [WonderQueryParam_Measure.CrudeRate],\n            'O_V10_fmode': ['freg'],\n            'O_V1_fmode': ['freg'],\n            'O_V25_fmode': ['freg'],\n            'O_V27_fmode': ['freg'],\n            'O_V2_fmode': ['freg'],\n            'O_V9_fmode': ['freg'],\n            'O_oc-sect1-request': ['close'],\n            'O_precision': ['1'],\n            'O_rate_per': ['100000'],\n            'O_show_supressed': ['true'],\n            'O_show_totals': ['false'],\n            'O_show_zeros': ['true'],\n            'O_timeout': ['600'],\n            'O_title': ['Example1'],\n            'O_javascript': ['off'],\n            'O_ucd': [WonderQueryParam_Include.ICD10Codes],\n            'F_D76.V1': [WonderQueryParam_Util.All],\n            'F_D76.V10': [WonderQueryParam_Util.All],\n            'F_D76.V2': [WonderQueryParam_Util.All],\n            'F_D76.V9': [WonderQueryParam_Util.All],\n            'V_D76.V7': [WonderQueryParam_Util.All],\n            'V_D76.V8': [WonderQueryParam_Util.All],\n            'V_D76.V9': [],\n            'V_D76.V6': ['00'],\n            'V_D76.V52': [WonderQueryParam_Util.All],\n            'V_D76.V5': [WonderQueryParam_Util.All],\n            'V_D76.V51': [WonderQueryParam_Util.All],\n            'V_D76.V17': [WonderQueryParam_Util.All],\n            'V_D76.V19': [WonderQueryParam_Util.All],\n            'V_D76.V2': [],\n            'V_D76.V20': [WonderQueryParam_Util.All],\n            'V_D76.V21': [WonderQueryParam_Util.All],\n            'V_D76.V22': [WonderQueryParam_Util.All],\n            'V_D76.V23': [WonderQueryParam_Util.All],\n            'V_D76.V24': [WonderQueryParam_Util.All],\n            'V_D76.V25': [],\n            'F_D76.V27': [WonderQueryParam_Util.All],\n            'O_show_suppressed': ['true'],\n            //values for non-standard age-adjusted rates\n            // 'VM_D76.M6_D76.V1_S': ['2004'],// [WonderQueryParam_Util.All],//years\n            // 'VM_D76.M6_D76.V17': [WonderQueryParam_Util.All],//Hispanic Origin\n            // 'VM_D76.M6_D76.V7': [WonderQueryParam_Util.All],//Gender\n            // 'VM_D76.M6_D76.V8': [WonderQueryParam_Util.All],//Race\n            'finder-stage-D76.V1': ['codeset'],\n            'finder-stage-D76.V10': ['codeset'],\n            'finder-stage-D76.V2': ['codeset'],\n            'finder-stage-D76.V25': ['codeset'],\n            'finder-stage-D76.V27': ['codeset'],\n            'finder-stage-D76.V9': ['codeset'],\n            'saved_id': [],\n            'stage': ['request']\n        };\n        this.defaultFIVParams = {};\n    }\n    addParam(name, value) {\n        if (typeof value == 'string') {\n            this.params.set(name, [value]);\n        }\n        else {\n            this.params.set(name, value);\n        }\n        return this;\n    }\n    urbanBy(version) {\n        let vCode = WonderQueryParam_GroupBy[version];\n        this.addParam('O_urban', vCode);\n        return this;\n    }\n    enableAgeAdjustedRate(isEnabled, confidenceInterval95 = isEnabled, standardError = isEnabled) {\n        this.addParam('O_aar_enable', isEnabled ? 'true' : 'false');\n        this.addParam('O_aar_CI', confidenceInterval95 ? 'true' : 'false');\n        this.addParam('O_aar_SE', standardError ? 'true' : 'false');\n        return this;\n    }\n    ageAdjustedRate(rateBy) {\n        this.addParam('O_arr', rateBy);\n        return this;\n    }\n    population(yearOfPopulationCount) {\n        this.addParam('O_aar_pop', yearOfPopulationCount);\n        return this;\n    }\n    locationBy(locByName) {\n        let locBy = WonderQueryParam_Include[locByName];\n        this.params.set('O_Location', [locBy]);\n        return this;\n    }\n    includeDates(dates) {\n        let paramName = `F_${WonderQueryParam_Include.YearAndMonth}`;\n        if (dates == 'all') {\n            this.params.set(paramName, [WonderQueryParam_Util.All]);\n            return;\n        }\n        return this;\n    }\n    enableJavascript(enabled) {\n        this.addParam('O_javascript', enabled ? 'on' : 'off');\n        return this;\n    }\n    measure(measureBy) {\n        let paramName = `M_${measureBy.replace('D.76.M', '')}`;\n        this.addParam(paramName, WonderQueryParam_Measure[measureBy]);\n    }\n    causeOfDeathBy(deathBy) {\n        let code = deathBy in WonderQueryParam_Include ? WonderQueryParam_Include[deathBy] : WonderQueryParam_GroupBy[deathBy];\n        this.addParam('O_ucd', [code]);\n        return this;\n    }\n    ageGroups(groupName) {\n        this.addParam(`O_age`, [WonderQueryParam_AgeGroup[groupName]]);\n        return this;\n    }\n    filterByYear(years) {\n        //let val = (typeof years == 'string') ? years : years.map(y => `${y} (${y})`).join(' ')\n        // return this.addParam('I_D76.V1', val);\n        return this.addParam(`F_D76.V1`, years);\n    }\n    groupBy(groupByName) {\n        if (this.groupByCount >= this.groupByCountLimit) {\n            throw new Error(`Cannot group by more than ${this.groupByCountLimit}`);\n        }\n        let parameterName = `B_${this.groupByCount + 1}`;\n        if (isWQP_None(groupByName)) {\n            this.addParam(parameterName, WonderQueryParam_Util.None);\n        }\n        else {\n            let param = WonderQueryParam_GroupBy[groupByName];\n            this.addParam(parameterName, param);\n        }\n        this.groupByCount++;\n        return this;\n    }\n    toParamMap() {\n        this.setDefaults();\n        return this.params;\n    }\n    alternatives(k) {\n        if (k.length < 3) {\n            return [k];\n        }\n        let start = k.substring(0, 2);\n        let rest = k.substring(2);\n        switch (start) {\n            case 'F_':\n                return [k, `I_${rest}`, `V_${rest}`];\n            case 'I_':\n                return [k, `F_${rest}`, `V_${rest}`];\n            case 'V_':\n                return [k, `I_${rest}`, `F_${rest}`];\n            default:\n                return [k];\n        }\n    }\n    setDefaults() {\n        let ths = this;\n        for (let key in this.defaultParams) {\n            if (!((0, FBF_Helpers_1.isAllTrue)(ths.alternatives(key).map((altKey) => {\n                // console.log(`Checking alternative ${altKey}`)\n                if (ths.params.has(altKey)) {\n                    // console.log(`----Alt Found ${altKey}`)\n                }\n                return ths.params.has(altKey);\n            })))) {\n                // console.log(`Defaulting ${key} (${DeWonder(key)}) to ${this.defaultParams[key]}`)\n                this.params.set(key, this.defaultParams[key]);\n            }\n        }\n    }\n    toString() {\n        // console.log(`Building query string`)\n        let ths = this;\n        let toProcess = [];\n        let processed = new Map();\n        let name;\n        let keyList = new ConsumableLinkedList(this.params.keys());\n        keyList.consume((key) => {\n            if (key.startsWith('B_')) {\n                toProcess.push([key, ths.params.get(key)]);\n                return true;\n            }\n            return false;\n        });\n        // for (let i = 1; i <= 5; i++) {\n        //   name = `B_${i}`\n        //   toProcess.push([name, this.params.has(name) ? this.params.get(name) : [WonderQueryParam_Util.None]])\n        //   processed.set(name, true)\n        // }\n        // for (let key of this.params.keys()) {\n        //   if (key.startsWith('M_')) {\n        //     toProcess.push([key, this.params.get(key)])\n        //     processed.set(key, true)\n        //   }\n        // }\n        keyList.consume((key) => {\n            if (key.startsWith('M_')) {\n                toProcess.push([key, ths.params.get(key)]);\n                return true;\n            }\n            return false;\n        });\n        keyList.consume((key) => {\n            if (key.startsWith('O_')) {\n                toProcess.push([key, ths.params.get(key)]);\n                return true;\n            }\n            return false;\n        });\n        keyList.consume((key) => {\n            if (key.startsWith('F_') || key.startsWith('I_') || key.startsWith('V_')) {\n                toProcess.push([key, ths.params.get(key)]);\n                return true;\n            }\n            return false;\n        });\n        keyList.consume((key) => {\n            // console.log(`Uordered parameter ${key}`)\n            toProcess.push([key, ths.params.get(key)]);\n            return true;\n        });\n        // for (let key of this.params.keys()) {\n        //   if (!processed.has(key)) {\n        //     toProcess.push([key, this.params.get(key)])\n        //   }\n        // }\n        // console.log(`Full Query:\\n${toProcess.map((param: [string, string[]]) => `${param[0]}(${DeWonder(param[0])}) = \\n${param[1].join('\\n--')}\\n`)}`)\n        return toProcess.map((param, index) => {\n            // console.log(`Mapping ${param[0]} (${DeWonder(param[0])}) to `, param[1])\n            return `<parameter><name>${param[0]}</name>${param[1].length > 0 ? param[1].map(str => `<value>${str}</value>`).join('') : '<value />'}</parameter>`;\n        }).join('');\n    }\n    requestTable(setDefaults = true, clientSide = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return WonderRequest.toTable(yield this.request(setDefaults, clientSide));\n        });\n    }\n    request(setDefaults = true, clientSide = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.params.has('B_1')) {\n                throw new Error(`Please group by at least one property`);\n            }\n            if (setDefaults) {\n                this.setDefaults();\n            }\n            let reqPartOfBody = this.toString();\n            // console.log(`Requesting`, reqPartOfBody)\n            // console.log(`Query: ${reqPartOfBody}`)\n            let fetchBody = `request_xml=<request-parameters><parameter>\n        <name>accept_datause_restrictions</name>\n        <value>true</value>\n        </parameter>${reqPartOfBody}</request-parameters>`;\n            let result = yield fetch(clientSide ? `http://${location.hostname}:5001/gdsn3-22/us-central1/WonderProxy` : `https://wonder.cdc.gov/controller/datarequest/D76`, {\n                method: 'POST',\n                body: fetchBody,\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded', 'Accept': 'application/xml' },\n                // mode: 'no-cors'\n            });\n            console.log(result.status + \" \" + result.statusText);\n            let textResult = yield result.text();\n            // console.log(textResult);\n            // let jsonValue = await XMLParser.parseStringPromise(textResult, {})\n            // console.log('JSON__________----')\n            // console.log(jsonValue)\n            let json = yield (0, FBF_Helpers_1.XmlToJson)(textResult);\n            return json.page[0];\n        });\n    }\n    static toTable(data) {\n        var _a;\n        try {\n            console.log(data.response[0]['data-table'][0]);\n        }\n        catch (err) {\n            try {\n                console.log((_a = data.message) === null || _a === void 0 ? void 0 : _a.join('\\n'));\n            }\n            catch (errr) {\n                console.log(`Bad response`, data);\n            }\n            return null;\n        }\n        let byCodes = (0, FBF_Helpers_1.flatten)(data.response[0].request[0].byvariables.map((v) => v.variable.map((vv) => vv.$.code)));\n        console.log('By codes', byCodes);\n        let measureCodes = data.response[0]['measure-selections'][0].measure.map((m) => m.$.code);\n        let columnCodes = (0, FBF_Helpers_1.concactinate)(byCodes, measureCodes);\n        console.log('Column Codes', measureCodes.map((c) => DeWonder(c)));\n        let repeatedColumns = [];\n        let columnsToRepeat = new Map();\n        let rows = [];\n        data.response[0]['data-table'][0].r.forEach((row) => {\n            let column = [];\n            columnsToRepeat.clear();\n            for (let i = 0; i < repeatedColumns.length; i++) {\n                // console.log(`Repeating ${repeatedColumns[i][1]}`)\n                columnsToRepeat.set(repeatedColumns[i][2], repeatedColumns[i][1]);\n                repeatedColumns[i][0]--;\n                if (repeatedColumns[i][0] <= 0) {\n                    repeatedColumns.splice(i, 1);\n                }\n            }\n            row.c.forEach((col, colIndex) => {\n                var _a;\n                if (columnsToRepeat.has(colIndex)) {\n                    column.push(columnsToRepeat.get(colIndex));\n                }\n                let val = (typeof col.$.l == 'undefined') ?\n                    (col.$.v == \"Unreliable\" ? \"Unreliable\" : Number((_a = col.$.v) === null || _a === void 0 ? void 0 : _a.replaceAll(',', '')))\n                    : col.$.l;\n                if (col.$.r) {\n                    // console.log(`Repeating ${val} ${Number(col.$.r) - 1} times`)\n                    repeatedColumns.push([Number(col.$.r) - 1, val, colIndex]);\n                }\n                column.push(val);\n            });\n            rows.push(column);\n        });\n        let output = { columnCodes: columnCodes, columnNames: columnCodes.map((code) => DeWonder(code)), rows: rows };\n        console.log(output);\n        return output;\n    }\n}\nexports.WonderRequest = WonderRequest;\nclass ConsumableLinkedList {\n    constructor(values) {\n        this.root = null;\n        if (!Array.isArray(values)) {\n            let vals = [];\n            let node = null;\n            for (let item of values) {\n                if (node == null) {\n                    this.root = { value: item, next: null };\n                    node = this.root;\n                }\n                else {\n                    node.next = { value: item, next: null };\n                    node = node.next;\n                }\n            }\n        }\n        else {\n            this.root = { value: values[0], next: null };\n            let node = this.root;\n            for (let i = 1; i < values.length; i++) {\n                node.next = { value: values[i], next: null };\n                node = node.next;\n            }\n        }\n    }\n    consume(onEach) {\n        let node = this.root;\n        let lastNode = null;\n        while (node != null) {\n            if (onEach(node.value)) {\n                if (lastNode == null) {\n                    //  console.log(`Consuming ${node.value} as root now ${this.toString()}`)\n                    this.root = node.next;\n                    node = this.root;\n                }\n                else {\n                    //  console.log(`Consuming ${node.value} in chain now ${this.toString()}`)\n                    lastNode.next = node.next;\n                    node = node.next;\n                }\n            }\n            else {\n                lastNode = node;\n                node = node.next;\n            }\n        }\n        return this;\n    }\n    toArray() {\n        let node = this.root;\n        let out = [];\n        while (node != null) {\n            out.push(node.value);\n            node = node.next;\n        }\n        return out;\n    }\n    toString() {\n        return this.toArray().join(', ');\n    }\n}\nexports.ConsumableLinkedList = ConsumableLinkedList;\nexports.ExampleRequest = '<request-parameters><parameter><name>B_1</name><value>D76.V1-level1</value></parameter><parameter><name>B_2</name><value>D76.V8</value></parameter><parameter><name>B_3</name><value>*None*</value></parameter><parameter><name>B_4</name><value>*None*</value></parameter><parameter><name>B_5</name><value>*None*</value></parameter><parameter><name>F_D76.V1</name><value>1999</value><value>2000</value><value>2001</value><value>2002</value><value>2003</value><value>2004</value><value>2005</value><value>2006</value><value>2007</value><value>2008</value><value>2009</value><value>2010</value><value>2011</value><value>2012</value><value>2013</value></parameter><parameter><name>F_D76.V10</name><value>*All*</value></parameter><parameter><name>F_D76.V2</name><value>C00-D48</value></parameter><parameter><name>F_D76.V25</name><value>*All*</value></parameter><parameter><name>F_D76.V27</name><value>*All*</value></parameter><parameter><name>F_D76.V9</name><value>*All*</value></parameter><parameter><name>I_D76.V1</name><value>1999 (1999) 2000 (2000) 2001 (2001) 2002 (2002) 2003 (2003) 2004 (2004) 2005 (2005) 2006 (2006) 2007 (2007) 2008 (2008) 2009 (2009) 2010 (2010) 2011 (2011) 2012 (2012) 2013 (2013) </value></parameter><parameter><name>I_D76.V10</name><value>*All* (The United States) </value></parameter><parameter><name>I_D76.V2</name><value>C00-D48 (Neoplasms) </value></parameter><parameter><name>I_D76.V25</name><value>All Causes of Death </value></parameter><parameter><name>I_D76.V27</name><value>*All* (The United States) </value></parameter><parameter><name>I_D76.V9</name><value>*All* (The United States) </value></parameter><parameter><name>M_1</name><value>D76.M1</value></parameter><parameter><name>M_2</name><value>D76.M2</value></parameter><parameter><name>M_3</name><value>D76.M3</value></parameter><parameter><name>M_9</name><value>D76.M9</value></parameter><parameter><name>O_V10_fmode</name><value>freg</value></parameter><parameter><name>O_V1_fmode</name><value>freg</value></parameter><parameter><name>O_V25_fmode</name><value>freg</value></parameter><parameter><name>O_V27_fmode</name><value>freg</value></parameter><parameter><name>O_V2_fmode</name><value>freg</value></parameter><parameter><name>O_V9_fmode</name><value>freg</value></parameter><parameter><name>O_aar</name><value>aar_std</value></parameter><parameter><name>O_aar_CI</name><value>true</value></parameter><parameter><name>O_aar_SE</name><value>true</value></parameter><parameter><name>O_aar_enable</name><value>true</value></parameter><parameter><name>O_aar_pop</name><value>0000</value></parameter><parameter><name>O_age</name><value>D76.V5</value></parameter><parameter><name>O_javascript</name><value>on</value></parameter><parameter><name>O_location</name><value>D76.V9</value></parameter><parameter><name>O_oc-sect1-request</name><value>close</value></parameter><parameter><name>O_precision</name><value>1</value></parameter><parameter><name>O_rate_per</name><value>100000</value></parameter><parameter><name>O_show_suppressed</name><value>true</value></parameter><parameter><name>O_show_totals</name><value>true</value></parameter><parameter><name>O_show_zeros</name><value>true</value></parameter><parameter><name>O_timeout</name><value>600</value></parameter><parameter><name>O_title</name><value>Example1</value></parameter><parameter><name>O_ucd</name><value>D76.V2</value></parameter><parameter><name>O_urban</name><value>D76.V19</value></parameter><parameter><name>VM_D76.M6_D76.V10</name><value/></parameter><parameter><name>VM_D76.M6_D76.V17</name><value>*All*</value></parameter><parameter><name>VM_D76.M6_D76.V1_S</name><value>*All*</value></parameter><parameter><name>VM_D76.M6_D76.V7</name><value>*All*</value></parameter><parameter><name>VM_D76.M6_D76.V8</name><value>*All*</value></parameter><parameter><name>V_D76.V1</name><value/></parameter><parameter><name>V_D76.V10</name><value/></parameter><parameter><name>V_D76.V11</name><value>*All*</value></parameter><parameter><name>V_D76.V12</name><value>*All*</value></parameter><parameter><name>V_D76.V17</name><value>*All*</value></parameter><parameter><name>V_D76.V19</name><value>*All*</value></parameter><parameter><name>V_D76.V2</name><value/></parameter><parameter><name>V_D76.V20</name><value>*All*</value></parameter><parameter><name>V_D76.V21</name><value>*All*</value></parameter><parameter><name>V_D76.V22</name><value>*All*</value></parameter><parameter><name>V_D76.V23</name><value>*All*</value></parameter><parameter><name>V_D76.V24</name><value>*All*</value></parameter><parameter><name>V_D76.V25</name><value/></parameter><parameter><name>V_D76.V27</name><value/></parameter><parameter><name>V_D76.V4</name><value>*All*</value></parameter><parameter><name>V_D76.V5</name><value>*All*</value></parameter><parameter><name>V_D76.V51</name><value>*All*</value></parameter><parameter><name>V_D76.V52</name><value>*All*</value></parameter><parameter><name>V_D76.V6</name><value>00</value></parameter><parameter><name>V_D76.V7</name><value>*All*</value></parameter><parameter><name>V_D76.V8</name><value>*All*</value></parameter><parameter><name>V_D76.V9</name><value/></parameter><parameter><name>action-Send</name><value>Send</value></parameter><parameter><name>dataset_code</name><value>D76</value></parameter><parameter><name>dataset_label</name><value>Underlying Cause of Death, 1999-2016</value></parameter><parameter><name>dataset_vintage</name><value>2016</value></parameter><parameter><name>finder-stage-D76.V1</name><value>codeset</value></parameter><parameter><name>finder-stage-D76.V10</name><value>codeset</value></parameter><parameter><name>finder-stage-D76.V2</name><value>codeset</value></parameter><parameter><name>finder-stage-D76.V25</name><value>codeset</value></parameter><parameter><name>finder-stage-D76.V27</name><value>codeset</value></parameter><parameter><name>finder-stage-D76.V9</name><value>codeset</value></parameter><parameter><name>saved_id</name><value/></parameter><parameter><name>stage</name><value>request</value></parameter></request-parameters>';\nfunction test() {\n    let val;\n    val;\n}\nconst RawRonaColumnsDefault = [0, 0, 0, '', 0, 0, '', '', '', 0, 0, 0, 0, 0, 0, ''];\nclass Database {\n    constructor() {\n        this.deathsByCause = new Map();\n        this.populationByAge = new Map();\n        this.updateListeners = new Map();\n        this.updateListenerCount = 0;\n    }\n    getColorForAgeGroup(ageGroup) {\n        switch (ageGroup) {\n            case '1-4 years':\n                return fColor.blue.darken1;\n            case '15-24 years':\n                return fColor.blue.darken2;\n            case '25-34 years':\n                return fColor.blue.darken3;\n            default:\n                return fColor.blue.base;\n        }\n    }\n    addListener(onUpdate) {\n        let index = this.updateListenerCount++;\n        this.updateListeners.set(index, onUpdate);\n        return index;\n    }\n    removeListener(index) {\n        this.updateListeners.delete(index);\n    }\n    notifyListeners() {\n        for (let listener of this.updateListeners.values()) {\n            listener();\n        }\n    }\n    getPopulationForAge(ageGroup) {\n        let ths = this;\n        return this.populationByAge.getWithDefault(ageGroup, (ag) => new DataChannel(`AgeGroup${ag}`, ths.getColorForAgeGroup(ag)));\n    }\n    getDeathsForCause(causeName) {\n        if (!this.deathsByCause.has(causeName)) {\n            this.deathsByCause.set(causeName, new DataChannel(`DeathsForCause${causeName}`));\n        }\n        return this.deathsByCause.get(causeName);\n    }\n    pullCdcData() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let result = yield fetch('https://data.cdc.gov/api/views/9bhg-hcku/rows.csv');\n            let text = yield result.text();\n            let lines = text.split('\\n');\n            let columnNames = lines[0];\n            lines.splice(0, 1);\n            let values = lines.mapOrDrop((line, index) => {\n                let raw = line.split(',');\n                if (raw[3] != 'By Month' || raw[7] != 'All Sexes') {\n                    return 'DROP';\n                }\n                let out = [];\n                for (let i = 0; i < raw.length; i++) {\n                    switch (i) {\n                        case 0:\n                        case 1:\n                        case 2:\n                            out.push(new Date(raw[i]).getTime());\n                            break;\n                        case 4:\n                        case 5:\n                        case 9:\n                        case 10:\n                        case 11:\n                        case 12:\n                        case 13:\n                        case 14:\n                        case 14:\n                            out.push(Number(raw[i]));\n                            break;\n                        case 8:\n                            out.push(raw[i].replace('Under 1 year', '< 1 year').replace('85 years and over', '85+ years'));\n                            break;\n                        default:\n                            out.push(raw[i]);\n                            break;\n                    }\n                }\n                while (out.length < RawRonaColumnsDefault.length) {\n                    out.push(RawRonaColumnsDefault[out.length - 1]);\n                }\n                return out;\n                // return [raw[0], raw[1], raw[2], raw[3], raw[4], raw[5], raw[6], raw[7], raw[8], raw[9], raw[10], raw[11], raw[6], raw[6], raw[6], raw[6]] as RawColumns\n            });\n            let output = { columns: columnNames, rows: values };\n            console.log(output);\n            window['lastCdc'] = output;\n        });\n    }\n    pullPopulation() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ths = this;\n            let population = yield new WonderRequest().groupBy('Year').groupBy('AgeGroups').requestTable(true, true);\n            population.rows.forEach((row) => {\n                let time = new Date(row[0].isNumber() ? `${row[0]} 1 1` : row[0]).getTime();\n                let tree = ths.getPopulationForAge(row[1]);\n                tree.set(time, row[3]);\n            });\n            return this.populationByAge;\n        });\n    }\n    pullDeathsByCause() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ths = this;\n            for (let year = 1999; year <= 2020; year++) {\n                for (let month = 1; month <= 12; month++) {\n                    let yearMonth = `${year}/${month <= 9 ? '0' + month : month}`;\n                    console.log(`Pulling deaths in ${yearMonth}`);\n                    let deaths = yield new WonderRequest().groupBy('CauseOfdeath').groupBy('AgeGroups').groupBy('Month').filterByYear([yearMonth]).requestTable(true, true);\n                    let count = 0;\n                    deaths.rows.forEach((row, index) => {\n                        let time = new Date(row[2].isNumber() ? (row[2].includes('/') ? `${row[2].split('/')[0]} ${row[2].split('/')[1]} 1` : `${row[2]} 1 1`) : row[2]).getTime();\n                        let tree = ths.getDeathsForCause(row[0]);\n                        tree.set(time, row[3]);\n                        count++;\n                        if (count > 1000) {\n                            count = 0;\n                            // console.log(`Added ${index} rows`)\n                        }\n                    });\n                    ths.notifyListeners();\n                }\n            }\n            return this.deathsByCause;\n        });\n    }\n}\nexports.Database = Database;\nclass DataChannel {\n    constructor(title, color = fColor.randomColor()) {\n        this.tree = new sorted_btree_1.default();\n        this.minValue = null;\n        this.maxValue = null;\n        this.title = title;\n        this.color = color;\n    }\n    set(time, value) {\n        if (this.minValue == null || value < this.minValue) {\n            this.minValue = value;\n        }\n        if (this.maxValue == null || value > this.maxValue) {\n            this.maxValue = value;\n        }\n        this.tree.set(time, value);\n    }\n    forRange(start, end, onEach) {\n        if (!this.tree) {\n            return;\n        }\n        let startNode = this.tree.getPairOrNextLower(start);\n        if (!startNode) {\n            startNode = this.tree.getPairOrNextHigher(start);\n        }\n        let endNode = this.tree.getPairOrNextHigher(end);\n        if (!endNode) {\n            endNode = this.tree.getPairOrNextLower(end);\n        }\n        this.tree.forRange(startNode[0], endNode[0], true, onEach);\n    }\n    static fromJson(json) {\n        let out = new DataChannel(json.title, bristolboard_1.FColor.fromHex(json.color, '', ''));\n        out.tree.setPairs(json.data);\n        return out;\n    }\n    toJson() {\n        let data = this.tree.toArray();\n        return {\n            title: this.title,\n            color: this.color.toHexString(),\n            data: data\n        };\n    }\n}\nexports.DataChannel = DataChannel;\nclass DataChannelStreaming extends DataChannel {\n    constructor(id, title, color, source) {\n        super(title, color);\n        this.pullingForward = false;\n        this.pullingBackward = false;\n        this.pullingRoot = false;\n        this.source = source;\n        this.id = id;\n    }\n    get hasValue() {\n        return this.tree && this.tree.size > 0;\n    }\n    pullBackwards() {\n        return __awaiter(this, void 0, void 0, function* () { });\n    }\n    pullForwards() {\n        return __awaiter(this, void 0, void 0, function* () { });\n    }\n    pullRoot() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.pullingRoot) {\n                return false;\n            }\n            this.pullingRoot = true;\n            let rootResp = yield this.source({ time: -1, limit: 100 });\n        });\n    }\n    forRange(start, end, onEach) {\n        let found = false;\n        if (this.hasValue) {\n            super.forRange(start, end, (time, value, count) => {\n                found = true;\n                onEach(time, value, count);\n            });\n        }\n        if (!found) {\n            this.source({ time: -1 }).then((resp) => {\n            });\n        }\n        // super.forRange()\n    }\n}\nexports.DataChannelStreaming = DataChannelStreaming;\n//# sourceMappingURL=data:application/json;base64,","module.exports = require(\"bristolboard\");","module.exports = require(\"firebase-functions\");","module.exports = require(\"node-fetch\");","module.exports = require(\"sorted-btree\");","module.exports = require(\"xml2js\");","module.exports = require(\"child_process\");","module.exports = require(\"crypto\");","module.exports = require(\"fs\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./srcFunctions/WPFunctions.ts\");\n",""],"names":[],"sourceRoot":""}